{"version":3,"sources":["components/GlobalStyles.js","theme/index.js","Firebase/index.js","components/DashboardNavbar.js","components/DashboardSidebar.js","components/DashboardLayout.js","components/MainLayout.js","URI.js","components/dashboard/LocationTimeline.jsx","pages/Locationview.js","pages/AllLocationView.js","store/constants.js","store/actions/device.js","store/actions/hotspot.js","store/actions/admin.js","store/actions/group.js","pages/Dashboard.js","pages/Login.js","pages/NotFound.js","pages/Register.js","components/report/ReportTable.jsx","components/report/HotspotFilter.jsx","components/report/DeviceFilter.jsx","components/report/MonthFilter.jsx","components/report/GroupFilter.jsx","contexts/subscriptionContext.js","hooks/useSubscription.js","utils/getSubscriptionDetails.js","components/report/HiddenReportTable.jsx","pages/Report.js","pages/Notification.js","components/devices/EditDeviceDialog.jsx","components/devices/DeviceTable.jsx","pages/ManageMobileDevices.js","components/hotspot/EditHotspotDialogForm.jsx","components/hotspot/HotspotTable.jsx","pages/ManageHotspots.js","components/settings/SecuritySetting.js","pages/Profile.js","components/groups/ScheduleForm.jsx","components/groups/CreateGroupDialog.jsx","components/groups/GroupTable.jsx","components/groups/EditGroupDialog.jsx","pages/ManageGroups.js","components/admins/AdminTable.jsx","components/admins/CreateAdminDialog.jsx","components/admins/EditAdminDialog.jsx","pages/ManageAdmins.js","pages/admin/Report.js","pages/admin/ChangePassword.js","components/pricing/ProCard.js","components/pricing/FreeCard.js","pages/Pricing.js","components/pricing/CardSection.js","utils/getCountryCode.js","components/pricing/Details.js","components/pricing/SuccessDialog.js","components/pricing/CheckOutForm.js","pages/Subscribe.js","routes.js","App.js","store/reducers/hotspotReducer.js","store/store.js","store/reducers/groupReducer.js","store/reducers/adminReducer.js","store/reducers/deviceReducer.js","index.js"],"names":["useStyles","makeStyles","createStyles","boxSizing","margin","padding","html","height","width","body","backgroundColor","a","textDecoration","GlobalStyles","theme","createTheme","palette","background","default","paper","primary","contrastText","main","text","secondary","shadows","typography","h1","fontWeight","fontSize","letterSpacing","h2","h3","h4","h5","h6","overline","app","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","db","getAnalytics","getFirestore","auth","getAuth","storage","getStorage","DashboardNavbar","onMobileNavOpen","rest","notifications","setNotifications","useState","anchorEl","setAnchorEl","open","setOpen","navigate","useNavigate","userData","sessionStorage","getItem","JSON","parse","useEffect","notificationRef","collection","uid","q","query","orderBy","limit","unsub","onSnapshot","snapshots","list","forEach","snap","push","data","getTime","sec","str","moment","Date","fromNow","first","split","mid","AppBar","elevation","Toolbar","sx","display","justifyContent","gap","IconButton","onClick","event","currentTarget","color","Popover","id","onClose","anchorOrigin","vertical","horizontal","className","List","map","x","i","Box","style","ListItem","mt","ListItemAvatar","requestStatus","Avatar","src","ListItemText","message","createdAt","seconds","Divider","to","removeItem","signOut","then","replace","catch","error","console","log","root","drawer","flexShrink","whiteSpace","appBar","marginLeft","toolbar","alignItems","spacing","mixins","listContainer","flexDirection","DashboardSidebar","classes","adminData","paths","names","CssBaseline","Drawer","variant","HomeOutlined","index","pt","pb","px","borderBottomColor","borderBottomWidth","Typography","DashboardLayoutRoot","styled","overflow","DashboardLayoutWrapper","flex","paddingTop","breakpoints","up","paddingLeft","DashboardLayoutContainer","DashboardLayoutContent","DashboardLayout","isMobileNavOpen","setMobileNavOpen","onMobileClose","openMobile","MainLayoutRoot","MainLayoutWrapper","MainLayoutContainer","MainLayoutContent","MainLayout","dotenv","config","API_SERVICE","process","MAP_TOKEN","MAP_STYLE","LocationTimeline","props","Timeline","mr","locations","location","TimelineItem","TimelineSeparator","TimelineDot","TimelineConnector","TimelineContent","component","address","format","React","memo","Locationview","user","phoneNumber","createdBy","lat","setlat","long","setlong","viewport","setViewport","latitude","longitude","zoom","selected","setSelected","selectedLat","setSelectedLat","selectedLong","setSelectedLong","userlocationdata","setuserlocationdata","imgUri","setImgUri","load","setLoad","showDetails","setShowDetails","setLocations","async","axios","get","response","err","getMonth","handleShowDetails","Helmet","minHeight","Container","maxWidth","trackingStatus","mapboxApiAccessToken","mapStyle","onViewportChange","nextViewport","onMouseEnter","e","preventDefault","onMouseLeave","name","arr","initials","length","toUpperCase","getInitials","fullName","textAlign","formattedAddress","position","zIndex","borderRadius","right","bottom","transform","overflowY","AllLocationView","userList","senderId","trackingList","selectedLocation","setSelectedLocation","selectedDevice","setSelectedDevice","trackingData","setTrackingData","item","marginBottom","CREATE_HOTSPOT_SUCCESS","CREATE_HOTSPOT_FAIL","GET_HOTSPOT_SUCCESS","GET_HOTSPOT_FAIL","UPDATE_HOTSPOT_SUCCESS","UPDATE_HOTSPOT_FAIL","DELETE_HOTSPOT_SUCCESS","DELETE_HOTSPOT_FAIL","CREATE_GROUP_SUCCESS","CREATE_GROUP_FAIL","GET_GROUP_SUCCESS","GET_GROUP_FAIL","UPDATE_GROUP_SUCCESS","UPDATE_GROUP_FAIL","DELETE_GROUP_SUCCESS","DELETE_GROUP_FAIL","CREATE_ADMIN_SUCCESS","CREATE_ADMIN_FAIL","GET_ADMIN_SUCCESS","GET_ADMIN_FAIL","UPDATE_ADMIN_SUCCESS","UPDATE_ADMIN_FAIL","DELETE_ADMIN_SUCCESS","DELETE_ADMIN_FAIL","CREATE_DEVICE_SUCCESS","CREATE_DEVICE_FAIL","GET_DEVICE_SUCCESS","GET_DEVICE_FAIL","UPDATE_DEVICE_SUCCESS","UPDATE_DEVICE_FAIL","DELETE_DEVICE_SUCCESS","DELETE_DEVICE_FAIL","getDevices","dispatch","type","types","payload","getAdminDevices","headers","post","getAdminHotspots","getHotspots","getAdmins","updateAdmin","getState","put","setItem","stringify","admins","adminList","getGroups","Dashboard","selectedIndex","setSelectedIndex","userLocations","setUserLocations","search","setSearch","searchResult","setSearchResult","snackOpen","setSnackOpen","success","setSuccess","setError","filter","setFilter","menuOpen","Boolean","useDispatch","devices","useSelector","state","deviceList","handleFilterClose","handleSnackClose","_","reason","email","adminGroups","groups","phoneNumberArr","phoneNumbers","filterArr","toLowerCase","includes","handleListItemClick","changeFilter","val","Grid","container","xs","Paper","TextField","fullWidth","InputProps","startAdornment","InputAdornment","SvgIcon","endAdornment","placeholder","onChange","target","value","Menu","MenuItem","py","button","mb","undefined","disabled","borderLeft","Stack","direction","Snackbar","autoHideDuration","Alert","severity","image","backgroundImage","backgroundRepeat","grey","backgroundSize","backgroundPosition","avatar","form","marginTop","login","googleLogin","Login","setEmail","password","setPassword","remember","setRemember","credentials","localStorage","checked","adminLogin","signInWithEmailAndPassword","credential","accessToken","superAdminRef","doc","superData","getDoc","exists","passwordChanged","errorCode","code","errorMessage","alert","superAdminLogin","userCredential","docRef","docSnap","sm","md","square","noValidate","required","label","autoComplete","autoFocus","Link","FormControlLabel","control","Checkbox","Button","superRef","where","getDocs","docs","size","submitHandler","RouterLink","underline","NotFound","align","alt","Register","firstName","setFirstName","lastName","setLastName","companyName","setCompanyName","policy","setPolicy","p","createUserWithEmailAndPassword","updateProfile","currentUser","displayName","profilePhoto","serverTimestamp","userRef","setDoc","Row","row","hotspotList","selectedHotspots","selectedGroups","selectedMonth","history","setHistory","hotspots","hotspot","checkExist","findIndex","_id","Promise","resolve","group","filterGroup","TableRow","borderBottom","TableCell","scope","device","total","paddingBottom","colSpan","Collapse","in","timeout","unmountOnExit","my","Table","TableHead","TableBody","historyRow","borderWidth","hotspotName","groupName","CircularProgress","ReportTable","TableContainer","tableData","MenuProps","PaperProps","maxHeight","ITEM_HEIGHT","HotspotFilter","FormControl","ml","InputLabel","Select","multiple","selectedHotspotNames","handleHotspotSelect","input","OutlinedInput","renderValue","join","hotspotNames","indexOf","DeviceFilter","selectedDevices","handleSelectedDevice","mobileDevices","MonthFilter","isDisable","setIsDisable","subscription","reportCount","Fragment","setSelectedMonth","Months","month","GroupFilter","selectedGroupNames","handleGroupSelect","groupNames","initialState","customerId","subscriptions","cart","reducer","action","isInitialized","details","SubscriptionContext","createContext","SubscriptionProvider","children","useReducer","onAuthStateChanged","ref","_email","customer","fetchCustomer","fetchSubscriptions","userId","result","Provider","SubscriptionConsumer","Consumer","useSubscription","useContext","getSubscriptionDetails","subscriptionDetail","sub","status","plans","prices","fetchPlans","planArr","plan","productName","product","planId","productId","hotspotCount","Number","MAX_VALUE","deviceCount","quantity","groupCount","adminCount","hidden","Report","setTableData","setSelectedHotspotNames","setSelectedGroups","setSelectedHotspots","setSelectedDevices","loading","setLoading","filteredData","setFilteredData","setSubscription","groupList","fetchData","fetchSubDetail","temp","number","table","filename","sheet","buttonText","HiddenReportTable","Notification","notificationList","setNotificationList","filterList","setFilterList","currDate","getDate","start","end","m","lg","xl","boxShadow","Image","EditDeviceDialog","setEditDialogOpen","editDialogOpen","trackingGroups","newFullName","setNewFullName","Object","entries","updateDetails","updateDevice","Dialog","DialogTitle","DialogContent","labelId","DialogActions","DeviceSetting","toggleEditDeviceDialog","deviceData","setDeviceData","removeDevice","delete","minWidth","border","Chip","edge","ManageMobileDevices","setFullName","setPhoneNumber","addDeviceDialog","setAddDeviceDialog","scheduleDialog","setScheduleDialog","successMsg","errorMsg","sendTrackingRequest","sendNotificationToDevice","requestRef","addDoc","recieverFullName","sender","Timestamp","now","androidRef","seen","addNewDevice","startsWith","bodyData","DeviceTable","EditHotspotDialogForm","setDialogOpen","selectedHotspot","mapRef","useRef","setHotspotName","newGroups","setNewGroups","setLocation","zipCode","setZipCode","isFetching","setIsFetching","getLatLong","handleViewportChange","useCallback","newViewport","handleGeocoderViewportChange","transitionDuration","res","zipcode","toPrecision","updateHotspot","lngLat","marker","countries","reverseGeocode","HotspotSetting","toggleEditHotspotDialog","removeHotspot","ManageHotspots","setSelectedHotspot","dialogOpen","addHotspotDialog","setAddHotspotDialog","setSuccessMsg","setErrorMsg","allViewport","setAllViewport","locationData","setLocationData","saveHotspot","HotspotTable","SecuritySetting","currentPassword","setCurrentPassword","newPassword","setNewPassword","isUpdating","setIsUpdating","EmailAuthProvider","reauthenticateWithCredential","updatePassword","update","startIcon","Profile","setProfilePhoto","previewUrl","setPreviewUrl","selectedFile","setSelectedFile","uploaProfilPhoto","storageRef","uploadTask","uploadBytesResumable","on","snapshot","progress","bytesTransferred","totalBytes","getDownloadURL","downloadUrl","files","URL","createObjectURL","accept","updateDoc","photo","updateProfileHandler","ScheduleForm","week","startDay","setStartDay","day","endDay","setEndDay","disableClock","setTime","time","rangeDivider","CreateGroupDialog","setGroupName","selectedAdmins","setSelectedAdmins","saveGroup","members","schedule","startTime","endTime","GroupTable","removeGroup","updatedAt","setSelectedGroup","setEditOpen","EditGroupDialog","keys","selectedGroup","updateGroup","ManageGroups","createOpen","setCreateOpen","editOpen","rowGap","columnGap","AdminTable","removeAdmin","admin","setSelectedAdmin","setShowEditDialog","CreateAdminDialog","saveAdmin","test","emailData","sendEmail","subject","EditAdminDialog","selectedAdmin","updateData","ManageAdmins","showCreateDialog","setShowCreateDialog","showEditDialog","authToken","AdminReport","setHotspotNames","setGroupNames","setMobileDevices","setPhoneNumbers","setSelectedGroupNames","groupId","snaps","array","document","newArr","documentId","trackingUserRef","users","numbers","getPhoneNumbers","getFromDB","count","getHotspotsData","getCollapseData","getDocuments","dataArr","finalData","d","ChangePassword","ProCard","Card","isCurrent","textTransform","Slider","handleValueChange","max","disablePadding","ListItemIcon","htmlColor","FreeCard","Pricing","setQuantity","currentPlan","setCurrentPlan","setPrices","subQuantity","fetchPrices","newValue","createSubscription","amount","priceId","clientSecret","window","reload","vanriant","price","CardSection","handleBack","handleSubmit","Details","info","setDetails","city","country","handleChange","values","handleNext","handleDetails","SuccessDialog","setProgress","intervalId","setIntervalId","interval","setInterval","clearInterval","handleClose","LinearProgress","CheckoutForm","stripe","useStripe","elements","useElements","messages","_setMessages","isPaying","setIsPaying","successDialog","setSuccessDialog","useLocation","paymentIntent","confirmCardPayment","payment_method","card","getElement","CardElement","billing_details","line1","postal_code","zip","stripePromise","loadStripe","Subscribe","routes","path","element","App","content","useRoutes","StyledEngineProvider","injectFirst","ThemeProvider","combineReducers","exitHotspot","find","existgroup","existadmin","existdevice","existDevice","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.38d8ac1e.chunk.js","sourcesContent":["import { createStyles, makeStyles } from '@mui/styles'\r\n\r\nconst useStyles = makeStyles(() =>\r\n    createStyles({\r\n        '@global': {\r\n            '*': {\r\n                boxSizing: 'border-box',\r\n                margin: 0,\r\n                padding: 0,\r\n            },\r\n            html: {\r\n                '-webkit-font-smoothing': 'antialiased',\r\n                '-moz-osx-font-smoothing': 'grayscale',\r\n                height: '100%',\r\n                width: '100%',\r\n            },\r\n            body: {\r\n                backgroundColor: '#f4f6f8',\r\n                height: '100%',\r\n                width: '100%',\r\n            },\r\n            a: {\r\n                textDecoration: 'none',\r\n            },\r\n            '#root': {\r\n                height: '100%',\r\n                width: '100%',\r\n            },\r\n        },\r\n    })\r\n)\r\n\r\nconst GlobalStyles = () => {\r\n    useStyles()\r\n\r\n    return null\r\n}\r\n\r\nexport default GlobalStyles\r\n","import { createTheme } from '@mui/material'\r\n\r\nconst theme = createTheme({\r\n  palette: {\r\n    background: {\r\n      default: '#f4f6f8',\r\n      paper: '#ffffff',\r\n    },\r\n    primary: {\r\n      contrastText: '#ffffff',\r\n      main: '#5664d2',\r\n    },\r\n    text: {\r\n      primary: '#172b4d',\r\n      secondary: '#6b778c',\r\n    },\r\n  },\r\n  shadows: [\r\n    'none',\r\n    '0 0 0 1px rgba(63,63,68,0.05), 0 1px 2px 0 rgba(63,63,68,0.15)',\r\n    '0 0 1px 0 rgba(0,0,0,0.31), 0 2px 2px -2px rgba(0,0,0,0.25)',\r\n    '0 0 1px 0 rgba(0,0,0,0.31), 0 3px 4px -2px rgba(0,0,0,0.25)',\r\n    '0 0 1px 0 rgba(0,0,0,0.31), 0 3px 4px -2px rgba(0,0,0,0.25)',\r\n    '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 6px -2px rgba(0,0,0,0.25)',\r\n    '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 6px -2px rgba(0,0,0,0.25)',\r\n    '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 8px -2px rgba(0,0,0,0.25)',\r\n    '0 0 1px 0 rgba(0,0,0,0.31), 0 5px 8px -2px rgba(0,0,0,0.25)',\r\n    '0 0 1px 0 rgba(0,0,0,0.31), 0 6px 12px -4px rgba(0,0,0,0.25)',\r\n    '0 0 1px 0 rgba(0,0,0,0.31), 0 7px 12px -4px rgba(0,0,0,0.25)',\r\n    '0 0 1px 0 rgba(0,0,0,0.31), 0 6px 16px -4px rgba(0,0,0,0.25)',\r\n    '0 0 1px 0 rgba(0,0,0,0.31), 0 7px 16px -4px rgba(0,0,0,0.25)',\r\n    '0 0 1px 0 rgba(0,0,0,0.31), 0 8px 18px -8px rgba(0,0,0,0.25)',\r\n    '0 0 1px 0 rgba(0,0,0,0.31), 0 9px 18px -8px rgba(0,0,0,0.25)',\r\n    '0 0 1px 0 rgba(0,0,0,0.31), 0 10px 20px -8px rgba(0,0,0,0.25)',\r\n    '0 0 1px 0 rgba(0,0,0,0.31), 0 11px 20px -8px rgba(0,0,0,0.25)',\r\n    '0 0 1px 0 rgba(0,0,0,0.31), 0 12px 22px -8px rgba(0,0,0,0.25)',\r\n    '0 0 1px 0 rgba(0,0,0,0.31), 0 13px 22px -8px rgba(0,0,0,0.25)',\r\n    '0 0 1px 0 rgba(0,0,0,0.31), 0 14px 24px -8px rgba(0,0,0,0.25)',\r\n    '0 0 1px 0 rgba(0,0,0,0.31), 0 16px 28px -8px rgba(0,0,0,0.25)',\r\n    '0 0 1px 0 rgba(0,0,0,0.31), 0 18px 30px -8px rgba(0,0,0,0.25)',\r\n    '0 0 1px 0 rgba(0,0,0,0.31), 0 20px 32px -8px rgba(0,0,0,0.25)',\r\n    '0 0 1px 0 rgba(0,0,0,0.31), 0 22px 34px -8px rgba(0,0,0,0.25)',\r\n    '0 0 1px 0 rgba(0,0,0,0.31), 0 24px 36px -8px rgba(0,0,0,0.25)',\r\n  ],\r\n  typography: {\r\n    h1: {\r\n      fontWeight: 500,\r\n      fontSize: 35,\r\n      letterSpacing: '-0.24px',\r\n    },\r\n    h2: {\r\n      fontWeight: 500,\r\n      fontSize: 29,\r\n      letterSpacing: '-0.24px',\r\n    },\r\n    h3: {\r\n      fontWeight: 500,\r\n      fontSize: 24,\r\n      letterSpacing: '-0.06px',\r\n    },\r\n    h4: {\r\n      fontWeight: 500,\r\n      fontSize: 20,\r\n      letterSpacing: '-0.06px',\r\n    },\r\n    h5: {\r\n      fontWeight: 500,\r\n      fontSize: 16,\r\n      letterSpacing: '-0.05px',\r\n    },\r\n    h6: {\r\n      fontWeight: 500,\r\n      fontSize: 14,\r\n      letterSpacing: '-0.05px',\r\n    },\r\n    overline: {\r\n      fontWeight: 500,\r\n    },\r\n  },\r\n})\r\n\r\nexport default theme\r\n","import { initializeApp } from 'firebase/app'\r\nimport { getAnalytics } from 'firebase/analytics'\r\nimport { getAuth } from 'firebase/auth'\r\nimport { getFirestore } from 'firebase/firestore'\r\nimport { getStorage } from 'firebase/storage'\r\n\r\n// const firebaseConfig = {\r\n//   apiKey: 'AIzaSyDGpc3IFaTYM-3CQnF6YHdapasZBcpZrEo',\r\n//   authDomain: 'evencloud-26d32.firebaseapp.com',\r\n//   databaseURL: 'https://evencloud-26d32.firebaseio.com',\r\n//   projectId: 'evencloud-26d32',\r\n//   storageBucket: 'evencloud-26d32.appspot.com',\r\n//   messagingSenderId: '599725599274',\r\n//   appId: '1:599725599274:web:0a3c20e350260df4a1f153',\r\n//   measurementId: 'G-PXGR5P46SP',\r\n// }\r\n\r\nconst firebaseConfig = {\r\n    apiKey: 'AIzaSyCB3eqMf02L6kH_F7MAuwXUQVd1dFZfVFQ',\r\n    authDomain: 'mobiletracking-cd8f2.firebaseapp.com',\r\n    databaseURL: 'https://mobiletracking-cd8f2.firebaseio.com',\r\n    projectId: 'mobiletracking-cd8f2',\r\n    storageBucket: 'mobiletracking-cd8f2.appspot.com',\r\n    messagingSenderId: '448981545000',\r\n    appId: '1:448981545000:web:14011a88c4a6079456051d',\r\n    measurementId: 'G-M9EEMS9J5G',\r\n}\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig)\r\nconst analytics = getAnalytics(app)\r\nconst db = getFirestore(app)\r\nconst auth = getAuth(app)\r\nconst storage = getStorage(app)\r\n\r\nexport { db, auth, app, storage }\r\n","import { useState, useEffect } from 'react'\r\nimport {\r\n    Link,\r\n    Link as RouterLink,\r\n    Navigate,\r\n    useNavigate,\r\n} from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\nimport {\r\n    AppBar,\r\n    Avatar,\r\n    Box,\r\n    Divider,\r\n    IconButton,\r\n    List,\r\n    ListItem,\r\n    ListItemAvatar,\r\n    ListItemText,\r\n    Popover,\r\n    Toolbar,\r\n} from '@mui/material'\r\nimport MenuIcon from '@mui/icons-material/Menu'\r\nimport NotificationsIcon from '@mui/icons-material/Notifications'\r\nimport Account from '@mui/icons-material/AccountCircle'\r\nimport { auth, db } from '../Firebase/index'\r\nimport {\r\n    onSnapshot,\r\n    doc,\r\n    query,\r\n    orderBy,\r\n    collection,\r\n    limit,\r\n} from 'firebase/firestore'\r\nimport moment from 'moment'\r\nimport { Image } from '@mui/icons-material'\r\nimport { signOut } from 'firebase/auth'\r\nimport LogoutIcon from '@mui/icons-material/Logout'\r\n\r\nconst DashboardNavbar = ({ onMobileNavOpen, ...rest }) => {\r\n    const [notifications, setNotifications] = useState([])\r\n    const [anchorEl, setAnchorEl] = useState(null)\r\n    const [open, setOpen] = useState(false)\r\n\r\n    const accept =\r\n        'https://firebasestorage.googleapis.com/v0/b/mobiletracking-cd8f2.appspot.com/o/accept.png?alt=media&token=83902429-f4af-40b8-852c-faca1e144a92'\r\n    const pending =\r\n        'https://firebasestorage.googleapis.com/v0/b/mobiletracking-cd8f2.appspot.com/o/pending.png?alt=media&token=20afc88a-6914-4657-962e-ba9d5e684ae5'\r\n    const reject =\r\n        'https://firebasestorage.googleapis.com/v0/b/mobiletracking-cd8f2.appspot.com/o/reject.png?alt=media&token=25da312f-2ec2-492d-97d9-1d47ecd1afd5'\r\n\r\n    const handleMenu = (event) => {\r\n        setAnchorEl(event.currentTarget)\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null)\r\n        setOpen(false)\r\n    }\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget)\r\n        setOpen(true)\r\n    }\r\n\r\n    const navigate = useNavigate()\r\n\r\n    const userData = sessionStorage.getItem('userData')\r\n        ? JSON.parse(sessionStorage.getItem('userData'))\r\n        : null\r\n\r\n    useEffect(() => {\r\n        const authToken = sessionStorage.getItem('authToken')\r\n\r\n        if (!authToken) {\r\n            navigate('/login')\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (userData !== null) {\r\n            const notificationRef = collection(\r\n                db,\r\n                'trackingWebNotification',\r\n                userData?.uid,\r\n                'notifications'\r\n            )\r\n            const q = query(\r\n                notificationRef,\r\n                orderBy('createdAt', 'desc'),\r\n                limit(100)\r\n            )\r\n\r\n            const unsub = onSnapshot(q, (snapshots) => {\r\n                const list = []\r\n                snapshots.forEach((snap) => {\r\n                    list.push(snap.data())\r\n                })\r\n\r\n                setNotifications(list)\r\n            })\r\n\r\n            return () => unsub()\r\n        }\r\n    }, [])\r\n\r\n    const getTime = (sec) => {\r\n        const str = moment(new Date(sec * 1000)).fromNow()\r\n\r\n        switch (str) {\r\n            case 'in a few seconds':\r\n                return 'few sec'\r\n            case 'a few seconds ago':\r\n                return 'few sec'\r\n            case 'a minute ago':\r\n                return '1m'\r\n            case 'an hour ago':\r\n                return '1h'\r\n            case 'a day ago':\r\n                return '1day'\r\n            default:\r\n                const first = str.split(' ')[0]\r\n                let mid = str.split(' ')[1]\r\n                if (mid === 'minutes' || mid === 'minute') {\r\n                    mid = 'm'\r\n                }\r\n                if (mid === 'hours' || mid === 'hour') {\r\n                    mid = 'h'\r\n                }\r\n                if (mid === 'days' || mid === 'day') {\r\n                    mid = 'd'\r\n                }\r\n                return first + mid\r\n        }\r\n    }\r\n\r\n    const logout = () => {\r\n        sessionStorage.removeItem('userData')\r\n        signOut(auth)\r\n            .then(() => navigate('/login', { replace: true }))\r\n            .catch((error) => console.log(error))\r\n    }\r\n\r\n    return (\r\n        <AppBar elevation={0} {...rest}>\r\n            <Toolbar\r\n                sx={{\r\n                    backgroundColor: '#007bff',\r\n                    display: 'flex',\r\n                    justifyContent: 'flex-end',\r\n                    gap: 1,\r\n                }}\r\n            >\r\n                <IconButton onClick={handleClick}>\r\n                    <NotificationsIcon sx={{ color: 'white' }} />\r\n                </IconButton>\r\n                <Popover\r\n                    id='notification'\r\n                    open={open}\r\n                    anchorEl={anchorEl}\r\n                    onClose={handleClose}\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'left',\r\n                    }}\r\n                    className='notification'\r\n                >\r\n                    <List sx={{ padding: 2 }}>\r\n                        {notifications.map((x, i) => (\r\n                            <Box key={++i} style={{ padding: 2 }}>\r\n                                <ListItem sx={{ mt: 1.5 }}>\r\n                                    <ListItemAvatar>\r\n                                        {x.requestStatus === 'pending' && (\r\n                                            <Avatar src={pending} />\r\n                                        )}\r\n                                        {x.requestStatus === 'accepted' && (\r\n                                            <Avatar src={accept} />\r\n                                        )}\r\n                                        {x.requestStatus === 'rejected' && (\r\n                                            <Avatar src={reject} />\r\n                                        )}\r\n                                    </ListItemAvatar>\r\n                                    <ListItemText\r\n                                        primary={x.message}\r\n                                        secondary={\r\n                                            getTime(x.createdAt.seconds) +\r\n                                            ' ago'\r\n                                        }\r\n                                    />\r\n                                </ListItem>\r\n                                <Divider />\r\n                            </Box>\r\n                        ))}\r\n                    </List>\r\n                </Popover>\r\n\r\n                <Link to='/app/profile'>\r\n                    <IconButton onClick={handleMenu}>\r\n                        <Account sx={{ color: 'white' }} />\r\n                    </IconButton>\r\n                </Link>\r\n\r\n                <IconButton onClick={logout}>\r\n                    <LogoutIcon sx={{ color: 'white' }} />\r\n                </IconButton>\r\n            </Toolbar>\r\n        </AppBar>\r\n    )\r\n}\r\n\r\nDashboardNavbar.propTypes = {\r\n    onMobileNavOpen: PropTypes.func,\r\n}\r\n\r\nexport default DashboardNavbar\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { makeStyles } from '@mui/styles'\r\nimport Drawer from '@mui/material/Drawer'\r\nimport List from '@mui/material/List'\r\nimport CssBaseline from '@mui/material/CssBaseline'\r\nimport ListItem from '@mui/material/ListItem'\r\nimport LocationOnIcon from '@mui/icons-material/LocationOnOutlined'\r\nimport PhoneAndroidIcon from '@mui/icons-material/PhoneAndroidOutlined'\r\nimport GroupsIcon from '@mui/icons-material/GroupsOutlined'\r\nimport AdminPanelSettingsIcon from '@mui/icons-material/AdminPanelSettingsRounded'\r\nimport SignalCellularAltIcon from '@mui/icons-material/SignalCellularAltOutlined'\r\nimport MonetizationOnOutlinedIcon from '@mui/icons-material/MonetizationOnOutlined'\r\nimport { HomeOutlined } from '@mui/icons-material'\r\nimport { Typography } from '@mui/material'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    drawer: {\r\n        width: 60,\r\n        flexShrink: 0,\r\n        whiteSpace: 'nowrap',\r\n    },\r\n\r\n    appBar: {\r\n        width: `calc(100% - ${60}px)`,\r\n        marginLeft: 60,\r\n    },\r\n\r\n    toolbar: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n    },\r\n    listContainer: {\r\n        display: 'flex',\r\n        height: '100%',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n    },\r\n}))\r\n\r\nconst DashboardSidebar = () => {\r\n    const classes = useStyles()\r\n\r\n    const adminData = sessionStorage.getItem('adminData')\r\n        ? JSON.parse(sessionStorage.getItem('adminData'))\r\n        : null\r\n\r\n    const paths = [\r\n        '/app/dashboard',\r\n        '/app/manage-hotspots',\r\n        '/app/manage-devices',\r\n        '/app/reports',\r\n        '/app/manage-groups',\r\n        '/app/manage-admins',\r\n        '/app/pricing',\r\n    ]\r\n\r\n    const names = [\r\n        'Overview',\r\n        'Hotspots',\r\n        'Devices',\r\n        'Reports',\r\n        'Groups',\r\n        'Admins',\r\n        'Pricing',\r\n    ]\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline />\r\n            <Drawer variant='permanent'>\r\n                <div className={classes.listContainer}>\r\n                    <List>\r\n                        {adminData === null\r\n                            ? [\r\n                                  <HomeOutlined\r\n                                      fontSize='large'\r\n                                      sx={{ color: '#6600cc' }}\r\n                                  />,\r\n                                  <LocationOnIcon\r\n                                      fontSize='large'\r\n                                      sx={{ color: 'red' }}\r\n                                  />,\r\n                                  <PhoneAndroidIcon\r\n                                      fontSize='large'\r\n                                      sx={{ color: '#007bff' }}\r\n                                  />,\r\n                                  <SignalCellularAltIcon\r\n                                      fontSize='large'\r\n                                      sx={{ color: '#fc6a03' }}\r\n                                  />,\r\n                                  <GroupsIcon\r\n                                      fontSize='large'\r\n                                      sx={{ color: 'green' }}\r\n                                  />,\r\n                                  <AdminPanelSettingsIcon\r\n                                      fontSize='large'\r\n                                      sx={{ color: '#cc33ff' }}\r\n                                  />,\r\n                                  <MonetizationOnOutlinedIcon\r\n                                      fontSize='large'\r\n                                      sx={{ color: '#3F00FF' }}\r\n                                  />,\r\n                              ].map((text, index) => (\r\n                                  <Link key={index} to={paths[index]}>\r\n                                      <ListItem\r\n                                          sx={{\r\n                                              pt: 1.5,\r\n                                              pb: 1.5,\r\n                                              px: 1,\r\n                                              display: 'flex',\r\n                                              flexDirection: 'column',\r\n                                              borderBottomColor: '#007bff',\r\n                                              borderBottomWidth: 10,\r\n                                          }}\r\n                                      >\r\n                                          <div>{text}</div>\r\n\r\n                                          <Typography\r\n                                              color='black'\r\n                                              sx={{\r\n                                                  fontSize: 12,\r\n                                              }}\r\n                                          >\r\n                                              {names[index]}\r\n                                          </Typography>\r\n                                      </ListItem>\r\n                                  </Link>\r\n                              ))\r\n                            : [\r\n                                  <HomeOutlined\r\n                                      fontSize='large'\r\n                                      sx={{ color: '#6600cc' }}\r\n                                  />,\r\n                                  <LocationOnIcon\r\n                                      fontSize='large'\r\n                                      sx={{ color: 'red' }}\r\n                                  />,\r\n                                  <PhoneAndroidIcon\r\n                                      fontSize='large'\r\n                                      sx={{ color: '#007bff' }}\r\n                                  />,\r\n                                  <SignalCellularAltIcon\r\n                                      fontSize='large'\r\n                                      sx={{ color: 'orange' }}\r\n                                  />,\r\n                              ].map((text, index) => (\r\n                                  <Link key={index} to={paths[index]}>\r\n                                      <ListItem\r\n                                          sx={{\r\n                                              pt: 1.5,\r\n                                              pb: 1.5,\r\n                                              px: 1,\r\n                                              display: 'flex',\r\n                                              flexDirection: 'column',\r\n                                              borderBottomColor: '#007bff',\r\n                                              borderBottomWidth: 10,\r\n                                          }}\r\n                                      >\r\n                                          <div>{text}</div>\r\n\r\n                                          <Typography\r\n                                              color='black'\r\n                                              sx={{\r\n                                                  fontSize: 12,\r\n                                              }}\r\n                                          >\r\n                                              {names[index]}\r\n                                          </Typography>\r\n                                      </ListItem>\r\n                                  </Link>\r\n                              ))}\r\n                    </List>\r\n                </div>\r\n            </Drawer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DashboardSidebar\r\n","import { useState } from 'react'\r\nimport { Outlet } from 'react-router-dom'\r\nimport { styled } from '@mui/material'\r\nimport DashboardNavbar from './DashboardNavbar'\r\nimport DashboardSidebar from './DashboardSidebar'\r\n\r\nconst DashboardLayoutRoot = styled('div')(({ theme }) => ({\r\n  backgroundColor: theme.palette.background.default,\r\n  display: 'flex',\r\n  height: '100%',\r\n  overflow: 'hidden',\r\n  width: '100%',\r\n}))\r\n\r\nconst DashboardLayoutWrapper = styled('div')(({ theme }) => ({\r\n  display: 'flex',\r\n  flex: '1 1 auto',\r\n  overflow: 'hidden',\r\n  paddingTop: 64,\r\n  [theme.breakpoints.up('md')]: {\r\n    paddingLeft: 68,\r\n  },\r\n}))\r\n\r\nconst DashboardLayoutContainer = styled('div')({\r\n  display: 'flex',\r\n  flex: '1 1 auto',\r\n  overflow: 'hidden',\r\n})\r\n\r\nconst DashboardLayoutContent = styled('div')({\r\n  flex: '1 1 auto',\r\n  height: '100%',\r\n  overflow: 'auto',\r\n})\r\n\r\nconst DashboardLayout = () => {\r\n  const [isMobileNavOpen, setMobileNavOpen] = useState(false)\r\n\r\n  return (\r\n    <DashboardLayoutRoot>\r\n      <DashboardNavbar onMobileNavOpen={() => setMobileNavOpen(true)} />\r\n      <DashboardSidebar\r\n        onMobileClose={() => setMobileNavOpen(false)}\r\n        openMobile={isMobileNavOpen}\r\n      />\r\n      <DashboardLayoutWrapper>\r\n        <DashboardLayoutContainer>\r\n          <DashboardLayoutContent>\r\n            <Outlet />\r\n          </DashboardLayoutContent>\r\n        </DashboardLayoutContainer>\r\n      </DashboardLayoutWrapper>\r\n    </DashboardLayoutRoot>\r\n  )\r\n}\r\n\r\nexport default DashboardLayout\r\n","import { Outlet } from 'react-router-dom'\r\nimport { styled } from '@mui/material'\r\nimport MainNavbar from './MainNavbar'\r\n\r\nconst MainLayoutRoot = styled('div')(({ theme }) => ({\r\n  backgroundColor: theme.palette.background.paper,\r\n  display: 'flex',\r\n  height: '100%',\r\n  overflow: 'hidden',\r\n  width: '100%',\r\n}))\r\n\r\nconst MainLayoutWrapper = styled('div')({\r\n  display: 'flex',\r\n  flex: '1 1 auto',\r\n  overflow: 'hidden',\r\n})\r\n\r\nconst MainLayoutContainer = styled('div')({\r\n  display: 'flex',\r\n  flex: '1 1 auto',\r\n  overflow: 'hidden',\r\n})\r\n\r\nconst MainLayoutContent = styled('div')({\r\n  flex: '1 1 auto',\r\n  height: '100%',\r\n  overflow: 'auto',\r\n})\r\n\r\nconst MainLayout = () => (\r\n  <MainLayoutRoot>\r\n    <MainLayoutWrapper>\r\n      <MainLayoutContainer>\r\n        <MainLayoutContent>\r\n          <Outlet />\r\n        </MainLayoutContent>\r\n      </MainLayoutContainer>\r\n    </MainLayoutWrapper>\r\n  </MainLayoutRoot>\r\n)\r\n\r\nexport default MainLayout\r\n","import dotenv from 'dotenv'\r\n\r\ndotenv.config()\r\n\r\nconst API_SERVICE = process.env.REACT_APP_API_SERVICE\r\nconst SECRET_KEY = process.env.REACT_APP_SECRET_KEY\r\nconst MAP_TOKEN = process.env.REACT_APP_MAP_TOKEN\r\nconst MAP_STYLE = process.env.REACT_APP_MAP_STYLE\r\n\r\n// const API_SERVICE = \"https://trackermobileapp.herokuapp.com\";\r\n\r\nexport { API_SERVICE, SECRET_KEY, MAP_TOKEN, MAP_STYLE }\r\n","import React from 'react'\r\nimport { Box, Stack, Typography } from '@mui/material'\r\nimport {\r\n  Timeline,\r\n  TimelineConnector,\r\n  TimelineContent,\r\n  TimelineDot,\r\n  TimelineItem,\r\n  TimelineSeparator,\r\n} from '@mui/lab'\r\nimport moment from 'moment'\r\n\r\nconst LocationTimeline = (props) => {\r\n  return (\r\n    <Box>\r\n      <Timeline sx={{ px: 0, mr: 4 }}>\r\n        {props.locations.map((location) => (\r\n          <TimelineItem>\r\n            <TimelineSeparator>\r\n              <TimelineDot variant=\"outlined\" color=\"error\" />\r\n              <TimelineConnector />\r\n            </TimelineSeparator>\r\n            <TimelineContent>\r\n              <Box sx={{ pb: 1.3 }}>\r\n                <Typography component=\"h6\">{location.address}</Typography>\r\n                <Typography component=\"p\" sx={{ fontSize: 12 }}>\r\n                  {moment(location.createdAt).format('DD MMMM YYYY - hh:mm a')}\r\n                </Typography>\r\n              </Box>\r\n            </TimelineContent>\r\n          </TimelineItem>\r\n        ))}\r\n      </Timeline>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default React.memo(LocationTimeline)\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Helmet } from 'react-helmet'\r\nimport { Avatar, Box, Container, Typography } from '@mui/material'\r\nimport ReactMapGL, { Marker, Popup } from 'react-map-gl'\r\nimport axios from 'axios'\r\nimport { API_SERVICE, MAP_STYLE, MAP_TOKEN } from '../URI'\r\nimport LocationTimeline from '../components/dashboard/LocationTimeline'\r\n\r\nconst Locationview = (props) => {\r\n    const { user } = props\r\n    const { phoneNumber, createdBy } = user\r\n\r\n    const [lat, setlat] = useState(0)\r\n    const [long, setlong] = useState(0)\r\n    const [viewport, setViewport] = useState({\r\n        width: '100%',\r\n        height: '100%',\r\n        latitude: lat,\r\n        longitude: long,\r\n        zoom: 15,\r\n    })\r\n\r\n    const [selected, setSelected] = useState(false)\r\n    const [selectedLat, setSelectedLat] = useState(null)\r\n    const [selectedLong, setSelectedLong] = useState(null)\r\n    const [userlocationdata, setuserlocationdata] = useState({})\r\n    const [imgUri, setImgUri] = useState('')\r\n    const [load, setLoad] = useState(false)\r\n    const [showDetails, setShowDetails] = useState(false)\r\n    const [locations, setLocations] = useState([])\r\n\r\n    useEffect(async () => {\r\n        setLoad(true)\r\n        if (lat === 0 || long === 0) {\r\n            return\r\n        }\r\n        axios\r\n            .get(`${API_SERVICE}/getlatlong/${selectedLat}/${selectedLong}`)\r\n            .then((response) => {\r\n                console.log('SETTING DATA')\r\n                setuserlocationdata(response.data)\r\n                setLoad(false)\r\n            })\r\n            .catch((err) => console.log(err))\r\n    }, [selectedLat, selectedLong])\r\n\r\n    useEffect(async () => {\r\n        try {\r\n            const { data } = await axios.get(\r\n                `${API_SERVICE}/get/livelocation/${phoneNumber}`\r\n            )\r\n            console.log(data)\r\n            setlat(data.location.latitude)\r\n            setlong(data.location.longitude)\r\n            setViewport({\r\n                ...viewport,\r\n                latitude: data.location.latitude,\r\n                longitude: data.location.longitude,\r\n            })\r\n        } catch (error) {\r\n            console.log(error.message)\r\n        }\r\n    }, [phoneNumber])\r\n\r\n    console.log(lat, long)\r\n\r\n    useEffect(async () => {\r\n        try {\r\n            const { data } = await axios.get(\r\n                `${API_SERVICE}/get/location/${createdBy}/${phoneNumber}/${\r\n                    new Date().getMonth() + 1\r\n                }`\r\n            )\r\n\r\n            setLocations(data)\r\n        } catch (error) {\r\n            console.log(error.message)\r\n        }\r\n    }, [phoneNumber])\r\n\r\n    const handleShowDetails = () => {\r\n        if (showDetails) {\r\n            setShowDetails(false)\r\n            setViewport({ ...viewport, width: '100%' })\r\n        } else {\r\n            setShowDetails(true)\r\n            setViewport({ ...viewport, width: '100%' })\r\n        }\r\n    }\r\n\r\n    const getInitials = (name) => {\r\n        const arr = name.split(' ')\r\n        let initials\r\n        if (arr.length === 1) {\r\n            initials = arr[0].split('')[0].toUpperCase()\r\n        } else {\r\n            initials =\r\n                arr[0].split('')[0].toUpperCase() +\r\n                arr[1].split('')[0].toUpperCase()\r\n        }\r\n\r\n        return initials\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Helmet>\r\n                <title>Dashboard</title>\r\n            </Helmet>\r\n            <Box\r\n                sx={{\r\n                    backgroundColor: 'background.default',\r\n                    minHeight: '100%',\r\n                    display: 'flex',\r\n                }}\r\n            >\r\n                <Container maxWidth={true} sx={{ px: 0, height: '100' }}>\r\n                    {user.trackingStatus === 'accepted' && (\r\n                        <ReactMapGL\r\n                            {...viewport}\r\n                            mapboxApiAccessToken={MAP_TOKEN}\r\n                            mapStyle={MAP_STYLE}\r\n                            onViewportChange={(nextViewport) =>\r\n                                setViewport(nextViewport)\r\n                            }\r\n                        >\r\n                            <Marker\r\n                                key='India Gate1'\r\n                                latitude={lat}\r\n                                longitude={long}\r\n                            >\r\n                                <button\r\n                                    className='marker-btn'\r\n                                    onMouseEnter={(e) => {\r\n                                        e.preventDefault()\r\n                                        setSelected(true)\r\n                                        setSelectedLat(lat)\r\n                                        setSelectedLong(long)\r\n                                    }}\r\n                                    onMouseLeave={(e) => {\r\n                                        e.preventDefault()\r\n                                        setSelected(false)\r\n                                    }}\r\n                                    onClick={handleShowDetails}\r\n                                >\r\n                                    <Avatar\r\n                                        src={imgUri}\r\n                                        sx={{\r\n                                            backgroundColor: 'orange',\r\n                                        }}\r\n                                    >\r\n                                        {getInitials(user.fullName)}\r\n                                    </Avatar>\r\n                                </button>\r\n                            </Marker>\r\n                            {selected ? (\r\n                                <Popup\r\n                                    latitude={selectedLat}\r\n                                    longitude={selectedLong}\r\n                                >\r\n                                    <div>\r\n                                        <h2 style={{ textAlign: 'center' }}>\r\n                                            {user.fullName}\r\n                                        </h2>\r\n                                        {load ? (\r\n                                            <p>Fetching Location ...</p>\r\n                                        ) : (\r\n                                            <p>\r\n                                                {\r\n                                                    userlocationdata.formattedAddress\r\n                                                }\r\n                                            </p>\r\n                                        )}\r\n                                    </div>\r\n                                </Popup>\r\n                            ) : null}\r\n                        </ReactMapGL>\r\n                    )}\r\n\r\n                    {user.trackingStatus === 'pending' && (\r\n                        <Typography\r\n                            sx={{ margin: 10, textAlign: 'center' }}\r\n                            component='h1'\r\n                        >\r\n                            Tracking request is in pending\r\n                        </Typography>\r\n                    )}\r\n\r\n                    {user.trackingStatus === 'rejected' && (\r\n                        <Box sx={{ position: 'relative' }}>\r\n                            <Box\r\n                                sx={{\r\n                                    position: 'absolute',\r\n                                    zIndex: 1000,\r\n                                    backgroundColor: '#f5f5f5',\r\n                                    borderRadius: 25,\r\n                                    right: '50%',\r\n                                    bottom: '30px',\r\n                                    transform: 'translate(50%)',\r\n                                    px: 2,\r\n                                }}\r\n                            >\r\n                                <Typography\r\n                                    sx={{\r\n                                        margin: 2,\r\n                                        textAlign: 'center',\r\n                                        color: 'red',\r\n                                        fontWeight: 'bold',\r\n                                    }}\r\n                                    component='h1'\r\n                                >\r\n                                    Tracking request is rejected\r\n                                </Typography>\r\n                            </Box>\r\n\r\n                            <ReactMapGL\r\n                                {...viewport}\r\n                                mapboxApiAccessToken={MAP_TOKEN}\r\n                                mapStyle={MAP_STYLE}\r\n                                onViewportChange={(nextViewport) =>\r\n                                    setViewport(nextViewport)\r\n                                }\r\n                            >\r\n                                <Marker\r\n                                    key='India Gate1'\r\n                                    latitude={lat}\r\n                                    longitude={long}\r\n                                >\r\n                                    <button\r\n                                        className='marker-btn'\r\n                                        onMouseEnter={(e) => {\r\n                                            e.preventDefault()\r\n                                            setSelected(true)\r\n                                            setSelectedLat(lat)\r\n                                            setSelectedLong(long)\r\n                                        }}\r\n                                        onMouseLeave={(e) => {\r\n                                            e.preventDefault()\r\n                                            setSelected(false)\r\n                                        }}\r\n                                        onClick={handleShowDetails}\r\n                                    >\r\n                                        <Avatar\r\n                                            src={imgUri}\r\n                                            sx={{\r\n                                                backgroundColor: 'orange',\r\n                                            }}\r\n                                        />\r\n                                    </button>\r\n                                </Marker>\r\n                                {selected ? (\r\n                                    <Popup\r\n                                        latitude={selectedLat}\r\n                                        longitude={selectedLong}\r\n                                    >\r\n                                        <div>\r\n                                            <h2 style={{ textAlign: 'center' }}>\r\n                                                {user.fullName}\r\n                                            </h2>\r\n                                            {load ? (\r\n                                                <p>Fetching Location ...</p>\r\n                                            ) : (\r\n                                                <p>\r\n                                                    {\r\n                                                        userlocationdata.formattedAddress\r\n                                                    }\r\n                                                </p>\r\n                                            )}\r\n                                        </div>\r\n                                    </Popup>\r\n                                ) : null}\r\n                            </ReactMapGL>\r\n                        </Box>\r\n                    )}\r\n                </Container>\r\n                {showDetails && (\r\n                    <Box\r\n                        className='location-history'\r\n                        sx={{\r\n                            width: 400,\r\n                            display: 'flex',\r\n                            justifyContent: 'flex-start',\r\n                            height: '82vh',\r\n                            overflowY: 'scroll',\r\n                        }}\r\n                    >\r\n                        {locations.length !== 0 ? (\r\n                            <LocationTimeline locations={locations} />\r\n                        ) : (\r\n                            <Box\r\n                                sx={{\r\n                                    width: 300,\r\n                                    display: 'flex',\r\n                                    alignItems: 'center',\r\n                                    justifyContent: 'center',\r\n                                }}\r\n                            >\r\n                                <Typography component='h5' variant='h5'>\r\n                                    No History Found\r\n                                </Typography>\r\n                            </Box>\r\n                        )}\r\n                    </Box>\r\n                )}\r\n            </Box>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default React.memo(Locationview)\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Helmet } from 'react-helmet'\r\nimport { Avatar, Box, Container, Typography } from '@mui/material'\r\nimport ReactMapGL, { Marker, Popup } from 'react-map-gl'\r\nimport axios from 'axios'\r\nimport LocationTimeline from '../components/dashboard/LocationTimeline'\r\n\r\nimport { API_SERVICE, MAP_STYLE, MAP_TOKEN } from '../URI'\r\n\r\nconst AllLocationView = (props) => {\r\n    const { userList, senderId, trackingList } = props\r\n\r\n    const [selected, setSelected] = useState(false)\r\n    const [selectedLat, setSelectedLat] = useState(null)\r\n    const [selectedLong, setSelectedLong] = useState(null)\r\n    const [selectedLocation, setSelectedLocation] = useState(0)\r\n    const [selectedDevice, setSelectedDevice] = useState('')\r\n    const [userlocationdata, setuserlocationdata] = useState({})\r\n    const [lat, setlat] = useState(28.598)\r\n    const [long, setlong] = useState(77.3)\r\n    const [load, setLoad] = useState(false)\r\n    const [showDetails, setShowDetails] = useState(false)\r\n    const [locations, setLocations] = useState([])\r\n    const [trackingData, setTrackingData] = useState([])\r\n\r\n    const [viewport, setViewport] = useState({\r\n        width: '100%',\r\n        height: '100%',\r\n        latitude: lat,\r\n        longitude: long,\r\n        zoom: 11,\r\n    })\r\n\r\n    useEffect(() => {\r\n        const data = []\r\n        trackingList.forEach((list) => {\r\n            userList.forEach((item) => {\r\n                if (list.phoneNumber === item.phoneNumber) {\r\n                    list['location'] = item.location\r\n                    data.push(list)\r\n                }\r\n            })\r\n        })\r\n        console.log(data)\r\n\r\n        setTrackingData(data)\r\n    }, [trackingList, userList])\r\n\r\n    useEffect(async () => {\r\n        setLoad(true)\r\n        axios\r\n            .get(`${API_SERVICE}/getlatlong/${selectedLat}/${selectedLong}`)\r\n            .then((response) => {\r\n                setuserlocationdata(response.data)\r\n                setLoad(false)\r\n            })\r\n            .catch((err) => console.log(err))\r\n    }, [selectedLat, selectedLong])\r\n\r\n    useEffect(async () => {\r\n        if (selectedDevice.length === 0) {\r\n            return\r\n        }\r\n        try {\r\n            const { data } = await axios.get(\r\n                `${API_SERVICE}/get/location/${senderId}/${selectedDevice}/${\r\n                    new Date().getMonth() + 1\r\n                }`\r\n            )\r\n\r\n            setLocations(data)\r\n        } catch (error) {\r\n            console.log(error.message)\r\n        }\r\n    }, [selectedDevice])\r\n\r\n    const handleShowDetails = (user) => {\r\n        if (showDetails) {\r\n            setShowDetails(false)\r\n            setViewport({ ...viewport, width: '100%' })\r\n        } else {\r\n            setShowDetails(true)\r\n            setViewport({ ...viewport, width: '100%' })\r\n            setSelectedDevice(user.phoneNumber)\r\n        }\r\n    }\r\n\r\n    const getInitials = (name) => {\r\n        const arr = name.split(' ')\r\n        let initials\r\n        if (arr.length === 1) {\r\n            initials = arr[0].split('')[0].toUpperCase()\r\n        } else {\r\n            initials =\r\n                arr[0].split('')[0].toUpperCase() +\r\n                arr[1].split('')[0].toUpperCase()\r\n        }\r\n\r\n        return initials\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Helmet>\r\n                <title>Dashboard</title>\r\n            </Helmet>\r\n            <Box\r\n                sx={{\r\n                    backgroundColor: 'background.default',\r\n                    minHeight: '100%',\r\n                    display: 'flex',\r\n                }}\r\n            >\r\n                <Container maxWidth={true} sx={{ height: '100' }}>\r\n                    <ReactMapGL\r\n                        {...viewport}\r\n                        mapboxApiAccessToken={MAP_TOKEN}\r\n                        mapStyle={MAP_STYLE}\r\n                        onViewportChange={(nextViewport) =>\r\n                            setViewport(nextViewport)\r\n                        }\r\n                    >\r\n                        {trackingData.map((user, index) => (\r\n                            <Marker\r\n                                key={user.phoneNumber}\r\n                                latitude={user.location.latitude}\r\n                                longitude={user.location.longitude}\r\n                            >\r\n                                <button\r\n                                    className='marker-btn'\r\n                                    onMouseEnter={(e) => {\r\n                                        e.preventDefault()\r\n                                        setSelected(true)\r\n                                        setSelectedLat(user.location.latitude)\r\n                                        setSelectedLong(user.location.longitude)\r\n                                        setlat(user.location.latitude)\r\n                                        setlong(user.location.longitude)\r\n\r\n                                        setSelectedLocation(index)\r\n                                    }}\r\n                                    onMouseLeave={(e) => {\r\n                                        e.preventDefault()\r\n                                        setSelected(false)\r\n                                    }}\r\n                                    onClick={() => handleShowDetails(user)}\r\n                                >\r\n                                    <Avatar sx={{ backgroundColor: 'orange' }}>\r\n                                        {getInitials(user.fullName)}\r\n                                    </Avatar>\r\n                                </button>\r\n                            </Marker>\r\n                        ))}\r\n                        {selected ? (\r\n                            <Popup\r\n                                latitude={selectedLat}\r\n                                longitude={selectedLong}\r\n                                onClose={() => {\r\n                                    setSelected(false)\r\n                                    setSelectedLat(0)\r\n                                    setSelectedLong(0)\r\n                                }}\r\n                            >\r\n                                <div>\r\n                                    <h2\r\n                                        style={{\r\n                                            textAlign: 'center',\r\n                                            marginBottom: '10px',\r\n                                        }}\r\n                                    >\r\n                                        {\r\n                                            trackingData[selectedLocation]\r\n                                                .fullName\r\n                                        }\r\n                                    </h2>\r\n                                    {load ? (\r\n                                        <p>Fetching Location ...</p>\r\n                                    ) : (\r\n                                        <p>\r\n                                            {userlocationdata.formattedAddress}\r\n                                        </p>\r\n                                    )}\r\n                                </div>\r\n                            </Popup>\r\n                        ) : null}\r\n                    </ReactMapGL>\r\n                </Container>\r\n                {showDetails && (\r\n                    <Box\r\n                        className='location-history'\r\n                        sx={{\r\n                            width: 400,\r\n                            display: 'flex',\r\n                            justifyContent: 'flex-start',\r\n                            height: '82vh',\r\n                            overflowY: 'scroll',\r\n                        }}\r\n                    >\r\n                        {locations.length !== 0 ? (\r\n                            <LocationTimeline locations={locations} />\r\n                        ) : (\r\n                            <Box\r\n                                sx={{\r\n                                    width: 300,\r\n                                    display: 'flex',\r\n                                    alignItems: 'center',\r\n                                    justifyContent: 'center',\r\n                                }}\r\n                            >\r\n                                <Typography component='h5' variant='h5'>\r\n                                    No History Found\r\n                                </Typography>\r\n                            </Box>\r\n                        )}\r\n                    </Box>\r\n                )}\r\n            </Box>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default React.memo(AllLocationView)\r\n","export const ADD_FORM_SUCCESS = 'ADD_FORM_SUCCESS'\r\nexport const GET_FORM_SUCCESS = 'GET_FORM_SUCCESS'\r\nexport const DELETE_FORM_SUCCESS = 'DELETE_FORM_SUCCESS'\r\n\r\nexport const ADD_FORM_FAIL = 'ADD_FORM_FAIL'\r\nexport const GET_FORM_FAIL = 'GET_FORM_FAIL'\r\nexport const DELETE_FORM_FAIL = 'DELETE_FORM_FAIL'\r\n\r\n// ***************** HOTSPOT ******************* //\r\n\r\nexport const CREATE_HOTSPOT_SUCCESS = 'CREATE_HOTSPOT_SUCCESS'\r\nexport const CREATE_HOTSPOT_FAIL = 'CREATE_HOTSPOT_FAIL'\r\n\r\nexport const GET_HOTSPOT_SUCCESS = 'GET_HOTSPOT_SUCCESS'\r\nexport const GET_HOTSPOT_FAIL = 'GET_HOTSPOT_FAIL'\r\n\r\nexport const UPDATE_HOTSPOT_SUCCESS = 'UPDATE_HOTSPOT_SUCCESS'\r\nexport const UPDATE_HOTSPOT_FAIL = 'UPDATE_HOTSPOT_FAIL'\r\n\r\nexport const DELETE_HOTSPOT_SUCCESS = 'DELETE_HOTSPOT_SUCCESS'\r\nexport const DELETE_HOTSPOT_FAIL = 'DELETE_HOTSPOT_FAIL'\r\n\r\n// ***************** GROUP ******************* //\r\n\r\nexport const CREATE_GROUP_SUCCESS = 'CREATE_GROUP_SUCCESS'\r\nexport const CREATE_GROUP_FAIL = 'CREATE_GROUP_FAIL'\r\n\r\nexport const GET_GROUP_SUCCESS = 'GET_GROUP_SUCCESS'\r\nexport const GET_GROUP_FAIL = 'GET_GROUP_FAIL'\r\n\r\nexport const UPDATE_GROUP_SUCCESS = 'UPDATE_GROUP_SUCCESS'\r\nexport const UPDATE_GROUP_FAIL = 'UPDATE_GROUP_FAIL'\r\n\r\nexport const DELETE_GROUP_SUCCESS = 'DELETE_GROUP_SUCCESS'\r\nexport const DELETE_GROUP_FAIL = 'DELETE_GROUP_FAIL'\r\n\r\n// ***************** ADMIN ******************* //\r\n\r\nexport const CREATE_ADMIN_SUCCESS = 'CREATE_ADMIN_SUCCESS'\r\nexport const CREATE_ADMIN_FAIL = 'CREATE_ADMIN_FAIL'\r\n\r\nexport const GET_ADMIN_SUCCESS = 'GET_ADMIN_SUCCESS'\r\nexport const GET_ADMIN_FAIL = 'GET_ADMIN_FAIL'\r\n\r\nexport const UPDATE_ADMIN_SUCCESS = 'UPDATE_ADMIN_SUCCESS'\r\nexport const UPDATE_ADMIN_FAIL = 'UPDATE_ADMIN_FAIL'\r\n\r\nexport const DELETE_ADMIN_SUCCESS = 'DELETE_ADMIN_SUCCESS'\r\nexport const DELETE_ADMIN_FAIL = 'DELETE_ADMIN_FAIL'\r\n\r\n// ***************** DEVICE ******************* //\r\n\r\nexport const CREATE_DEVICE_SUCCESS = 'CREATE_DEVICE_SUCCESS'\r\nexport const CREATE_DEVICE_FAIL = 'CREATE_DEVICE_FAIL'\r\n\r\nexport const GET_DEVICE_SUCCESS = 'GET_DEVICE_SUCCESS'\r\nexport const GET_DEVICE_FAIL = 'GET_DEVICE_FAIL'\r\n\r\nexport const UPDATE_DEVICE_SUCCESS = 'UPDATE_DEVICE_SUCCESS'\r\nexport const UPDATE_DEVICE_FAIL = 'UPDATE_DEVICE_FAIL'\r\n\r\nexport const DELETE_DEVICE_SUCCESS = 'DELETE_DEVICE_SUCCESS'\r\nexport const DELETE_DEVICE_FAIL = 'DELETE_DEVICE_FAIL'\r\n","import * as types from '../constants'\r\nimport axios from 'axios'\r\nimport { API_SERVICE } from '../../URI'\r\n\r\nconst createDevice = (bodyData) => async (dispatch, getState) => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n\r\n        const body = {\r\n            body: bodyData,\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `${API_SERVICE}/create/device`,\r\n            body,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: types.CREATE_DEVICE_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n        sessionStorage.setItem(\r\n            'deviceList',\r\n            JSON.stringify(getState().devices.deviceList)\r\n        )\r\n    } catch (error) {\r\n        dispatch({\r\n            type: types.CREATE_DEVICE_FAIL,\r\n            payload: error.message,\r\n        })\r\n    }\r\n}\r\n\r\nconst getDevices = (createdBy) => async (dispatch) => {\r\n    try {\r\n        const { data } = await axios.get(\r\n            `${API_SERVICE}/get/devices/${createdBy}`\r\n        )\r\n        dispatch({\r\n            type: types.GET_DEVICE_SUCCESS,\r\n            payload: data,\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: types.GET_DEVICE_FAIL,\r\n            payload: error.message,\r\n        })\r\n    }\r\n}\r\n\r\nconst getAdminDevices = (body) => async (dispatch) => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n        const { data } = await axios.post(\r\n            `${API_SERVICE}/get/devices/admin`,\r\n            body,\r\n            config\r\n        )\r\n        dispatch({\r\n            type: types.GET_DEVICE_SUCCESS,\r\n            payload: data,\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: types.GET_DEVICE_FAIL,\r\n            payload: error.message,\r\n        })\r\n    }\r\n}\r\n\r\nconst updateDevice = (body) => async (dispatch, getState) => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `${API_SERVICE}/update/device`,\r\n            body,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: types.UPDATE_DEVICE_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n        sessionStorage.setItem(\r\n            'deviceList',\r\n            JSON.stringify(getState().devices.deviceList)\r\n        )\r\n    } catch (error) {\r\n        dispatch({\r\n            type: types.UPDATE_DEVICE_FAIL,\r\n            payload: error.message,\r\n        })\r\n    }\r\n}\r\n\r\nconst deleteDevice = (_id) => async (dispatch, getState) => {\r\n    try {\r\n        await axios.delete(`${API_SERVICE}/delete/device/${_id}`)\r\n\r\n        dispatch({\r\n            type: types.DELETE_DEVICE_SUCCESS,\r\n            payload: _id,\r\n        })\r\n\r\n        sessionStorage.setItem(\r\n            'deviceList',\r\n            JSON.stringify(getState().devices.deviceList)\r\n        )\r\n    } catch (error) {\r\n        dispatch({\r\n            type: types.DELETE_DEVICE_FAIL,\r\n            payload: error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport { createDevice, getAdminDevices, getDevices, updateDevice, deleteDevice }\r\n","import * as types from '../constants'\r\nimport axios from 'axios'\r\nimport { API_SERVICE } from '../../URI'\r\n\r\nconst createHotspot = (bodyData) => async (dispatch, getState) => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n\r\n        const body = {\r\n            body: bodyData,\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `${API_SERVICE}/create/hotspot`,\r\n            body,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: types.CREATE_HOTSPOT_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n        sessionStorage.setItem(\r\n            'hotspotList',\r\n            JSON.stringify(getState().hotspots.hotspotList)\r\n        )\r\n    } catch (error) {\r\n        dispatch({\r\n            type: types.CREATE_HOTSPOT_FAIL,\r\n            payload: error.message,\r\n        })\r\n    }\r\n}\r\n\r\nconst getAdminHotspots = (body) => async (dispatch) => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n        const { data } = await axios.post(\r\n            `${API_SERVICE}/get/hotspots/admin`,\r\n            body,\r\n            config\r\n        )\r\n        dispatch({\r\n            type: types.GET_HOTSPOT_SUCCESS,\r\n            payload: data,\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: types.GET_HOTSPOT_FAIL,\r\n            payload: error.message,\r\n        })\r\n    }\r\n}\r\n\r\nconst getHotspots = (createdBy) => async (dispatch) => {\r\n    try {\r\n        const { data } = await axios.get(\r\n            `${API_SERVICE}/get/hotspots/${createdBy}`\r\n        )\r\n        dispatch({\r\n            type: types.GET_HOTSPOT_SUCCESS,\r\n            payload: data,\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: types.GET_HOTSPOT_FAIL,\r\n            payload: error.message,\r\n        })\r\n    }\r\n}\r\n\r\nconst updateHotspot = (body) => async (dispatch, getState) => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `${API_SERVICE}/update/hotspot`,\r\n            body,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: types.UPDATE_HOTSPOT_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n        sessionStorage.setItem(\r\n            'hotspotList',\r\n            JSON.stringify(getState().hotspots.hotspotList)\r\n        )\r\n    } catch (error) {\r\n        dispatch({\r\n            type: types.UPDATE_HOTSPOT_FAIL,\r\n            payload: error.message,\r\n        })\r\n    }\r\n}\r\n\r\nconst deleteHotspot = (_id) => async (dispatch, getState) => {\r\n    try {\r\n        await axios.delete(`${API_SERVICE}/delete/hotspot/${_id}`)\r\n\r\n        dispatch({\r\n            type: types.DELETE_HOTSPOT_SUCCESS,\r\n            payload: _id,\r\n        })\r\n\r\n        sessionStorage.setItem(\r\n            'hotspotList',\r\n            JSON.stringify(getState().hotspots.hotspotList)\r\n        )\r\n    } catch (error) {\r\n        dispatch({\r\n            type: types.DELETE_HOTSPOT_FAIL,\r\n            payload: error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport {\r\n    createHotspot,\r\n    getAdminHotspots,\r\n    getHotspots,\r\n    updateHotspot,\r\n    deleteHotspot,\r\n}\r\n","import * as types from '../constants'\r\nimport axios from 'axios'\r\nimport { API_SERVICE } from '../../URI'\r\nimport { async } from '@firebase/util'\r\n\r\nconst createAdmin = (bodyData) => async (dispatch, getState) => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n\r\n        const body = {\r\n            body: bodyData,\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `${API_SERVICE}/create/admin`,\r\n            body,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: types.CREATE_ADMIN_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n        sessionStorage.setItem(\r\n            'adminList',\r\n            JSON.stringify(getState().admins.adminList)\r\n        )\r\n    } catch (error) {\r\n        dispatch({\r\n            type: types.CREATE_ADMIN_FAIL,\r\n            payload: error.message,\r\n        })\r\n    }\r\n}\r\n\r\nconst getAdmins = (createdBy) => async (dispatch) => {\r\n    try {\r\n        const { data } = await axios.get(\r\n            `${API_SERVICE}/get/admins/${createdBy}`\r\n        )\r\n        dispatch({\r\n            type: types.GET_ADMIN_SUCCESS,\r\n            payload: data,\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: types.GET_ADMIN_FAIL,\r\n            payload: error.message,\r\n        })\r\n    }\r\n}\r\n\r\nconst updateAdmin = (body) => async (dispatch, getState) => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `${API_SERVICE}/update/admin`,\r\n            body,\r\n            config\r\n        )\r\n\r\n        console.log(data)\r\n\r\n        dispatch({\r\n            type: types.UPDATE_ADMIN_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n        sessionStorage.setItem(\r\n            'adminList',\r\n            JSON.stringify(getState().admins.adminList)\r\n        )\r\n    } catch (error) {\r\n        dispatch({\r\n            type: types.UPDATE_ADMIN_FAIL,\r\n            payload: error.message,\r\n        })\r\n    }\r\n}\r\n\r\nconst deleteAdmin = (_id) => async (dispatch, getState) => {\r\n    try {\r\n        await axios.delete(`${API_SERVICE}/delete/admin/${_id}`)\r\n\r\n        dispatch({\r\n            type: types.DELETE_ADMIN_SUCCESS,\r\n            payload: _id,\r\n        })\r\n\r\n        sessionStorage.setItem(\r\n            'adminList',\r\n            JSON.stringify(getState().admins.adminList)\r\n        )\r\n    } catch (error) {\r\n        dispatch({\r\n            type: types.DELETE_ADMIN_FAIL,\r\n            payload: error.message,\r\n        })\r\n    }\r\n}\r\n\r\nconst sendEmail = (emailData) => async (dispatch) => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `${API_SERVICE}/send-email`,\r\n            emailData,\r\n            config\r\n        )\r\n\r\n        console.log(data)\r\n    } catch (error) {\r\n        console.log('Error occured while sending email')\r\n    }\r\n}\r\n\r\nexport { createAdmin, getAdmins, updateAdmin, deleteAdmin, sendEmail }\r\n","import * as types from '../constants'\r\nimport axios from 'axios'\r\nimport { API_SERVICE } from '../../URI'\r\n\r\nconst createGroup = (bodyData) => async (dispatch, getState) => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n\r\n        const body = {\r\n            body: bodyData,\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `${API_SERVICE}/create/group`,\r\n            body,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: types.CREATE_GROUP_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n        sessionStorage.setItem(\r\n            'groupList',\r\n            JSON.stringify(getState().groups.groupList)\r\n        )\r\n    } catch (error) {\r\n        dispatch({\r\n            type: types.CREATE_GROUP_FAIL,\r\n            payload: error.message,\r\n        })\r\n    }\r\n}\r\n\r\nconst getGroups = (createdBy) => async (dispatch) => {\r\n    try {\r\n        const { data } = await axios.get(\r\n            `${API_SERVICE}/get/groups/${createdBy}`\r\n        )\r\n        dispatch({\r\n            type: types.GET_GROUP_SUCCESS,\r\n            payload: data,\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: types.GET_GROUP_FAIL,\r\n            payload: error.message,\r\n        })\r\n    }\r\n}\r\n\r\nconst updateGroup = (body) => async (dispatch, getState) => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `${API_SERVICE}/update/group`,\r\n            body,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: types.UPDATE_GROUP_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n        sessionStorage.setItem(\r\n            'groupList',\r\n            JSON.stringify(getState().groups.groupList)\r\n        )\r\n    } catch (error) {\r\n        dispatch({\r\n            type: types.UPDATE_GROUP_FAIL,\r\n            payload: error.message,\r\n        })\r\n    }\r\n}\r\n\r\nconst deleteGroup = (_id) => async (dispatch, getState) => {\r\n    try {\r\n        await axios.delete(`${API_SERVICE}/delete/group/${_id}`)\r\n\r\n        dispatch({\r\n            type: types.DELETE_GROUP_SUCCESS,\r\n            payload: _id,\r\n        })\r\n\r\n        sessionStorage.setItem(\r\n            'groupList',\r\n            JSON.stringify(getState().groups.groupList)\r\n        )\r\n    } catch (error) {\r\n        dispatch({\r\n            type: types.DELETE_GROUP_FAIL,\r\n            payload: error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport { createGroup, getGroups, updateGroup, deleteGroup }\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport {\r\n    Box,\r\n    TextField,\r\n    InputAdornment,\r\n    SvgIcon,\r\n    Typography,\r\n    Grid,\r\n    MenuItem,\r\n    Menu,\r\n    Stack,\r\n} from '@mui/material'\r\nimport { makeStyles } from '@mui/styles'\r\n\r\nimport Paper from '@mui/material/Paper'\r\nimport IconButton from '@mui/material/IconButton'\r\nimport List from '@mui/material/List'\r\nimport ListItem from '@mui/material/ListItem'\r\nimport ListItemText from '@mui/material/ListItemText'\r\nimport ListItemAvatar from '@mui/material/ListItemAvatar'\r\nimport Avatar from '@mui/material/Avatar'\r\nimport PeopleIcon from '@mui/icons-material/People'\r\nimport Button from '@mui/material/Button'\r\nimport Snackbar from '@mui/material/Snackbar'\r\nimport Alert from '@mui/material/Alert'\r\nimport { Search as SearchIcon } from 'react-feather'\r\nimport Locationview from './Locationview'\r\nimport AllLocationView from './AllLocationView'\r\nimport { db, auth } from '../Firebase/index'\r\nimport { collection, query, where, onSnapshot } from 'firebase/firestore'\r\nimport FilterAltIcon from '@mui/icons-material/FilterAlt'\r\nimport { getDevices, getAdminDevices } from '../store/actions/device'\r\n\r\nimport axios from 'axios'\r\nimport { API_SERVICE } from '../URI'\r\nimport { getAdminHotspots, getHotspots } from '../store/actions/hotspot'\r\nimport { getAdmins } from '../store/actions/admin'\r\nimport { getGroups } from '../store/actions/group'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        height: '100%',\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(1),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n    },\r\n}))\r\n\r\nconst Dashboard = () => {\r\n    const classes = useStyles()\r\n\r\n    const [selectedIndex, setSelectedIndex] = useState(-1)\r\n    const [userLocations, setUserLocations] = useState([])\r\n    const [search, setSearch] = useState('')\r\n    const [searchResult, setSearchResult] = useState([])\r\n\r\n    const [snackOpen, setSnackOpen] = useState(false)\r\n    const [success, setSuccess] = useState(null)\r\n    const [error, setError] = useState(null)\r\n\r\n    const [filter, setFilter] = useState(null)\r\n    const [anchorEl, setAnchorEl] = useState(null)\r\n    const menuOpen = Boolean(anchorEl)\r\n\r\n    const dispatch = useDispatch()\r\n    const devices = useSelector((state) => state.devices)\r\n    const { deviceList } = devices\r\n    console.log(deviceList)\r\n\r\n    const handleFilterClick = (event) => {\r\n        setAnchorEl(event.currentTarget)\r\n    }\r\n    const handleFilterClose = () => {\r\n        setAnchorEl(null)\r\n    }\r\n\r\n    const navigate = useNavigate()\r\n\r\n    const handleSnackClose = (_, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return\r\n        }\r\n        setSnackOpen(false)\r\n        setError(null)\r\n        setSuccess(null)\r\n    }\r\n\r\n    const userData = sessionStorage.getItem('userData')\r\n        ? JSON.parse(sessionStorage.getItem('userData'))\r\n        : null\r\n\r\n    const adminData = sessionStorage.getItem('adminData')\r\n        ? JSON.parse(sessionStorage.getItem('adminData'))\r\n        : null\r\n\r\n    useEffect(() => {\r\n        const authToken = sessionStorage.getItem('authToken')\r\n\r\n        if (!authToken) {\r\n            navigate('/login')\r\n        }\r\n    }, [])\r\n\r\n    useEffect(async () => {\r\n        if (adminData === null && userData !== null) {\r\n            dispatch(getDevices(userData.uid))\r\n            dispatch(getHotspots(userData.uid))\r\n            dispatch(getGroups(userData.uid))\r\n            dispatch(getAdmins(userData.uid))\r\n        }\r\n\r\n        if (adminData !== null && userData !== null) {\r\n            const { data } = await axios.get(\r\n                `${API_SERVICE}/get/admin/${adminData.email}`\r\n            )\r\n            dispatch(\r\n                getAdminDevices({\r\n                    createdBy: userData.uid,\r\n                    adminGroups: data.groups,\r\n                })\r\n            )\r\n            dispatch(\r\n                getAdminHotspots({\r\n                    createdBy: userData.uid,\r\n                    adminGroups: data.groups,\r\n                })\r\n            )\r\n        }\r\n    }, [dispatch])\r\n\r\n    useEffect(async () => {\r\n        if (deviceList.length !== 0) {\r\n            const phoneNumberArr = deviceList.map((x) => x.phoneNumber)\r\n            console.log(phoneNumberArr)\r\n\r\n            try {\r\n                const config = {\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                }\r\n                const body = { phoneNumbers: phoneNumberArr }\r\n                const { data } = await axios.post(\r\n                    `${API_SERVICE}/get/livelocations`,\r\n                    body,\r\n                    config\r\n                )\r\n                setUserLocations(data)\r\n            } catch (error) {\r\n                console.log(error.message)\r\n            }\r\n        }\r\n    }, [deviceList])\r\n\r\n    useEffect(() => {\r\n        if (search.length === 0) {\r\n            setSearchResult([])\r\n        }\r\n\r\n        setSelectedIndex(-1)\r\n        const temp = deviceList\r\n\r\n        const filterArr = temp.filter((x) =>\r\n            x.fullName.toLowerCase().includes(search.toLowerCase())\r\n        )\r\n\r\n        setSearchResult(filterArr)\r\n    }, [search])\r\n\r\n    useEffect(() => {\r\n        if (filter === 'all') {\r\n            setSearchResult([])\r\n            return\r\n        }\r\n\r\n        const temp = deviceList\r\n        const filterArr = temp.filter((x) => x.trackingStatus === filter)\r\n        setSearchResult(filterArr)\r\n    }, [filter])\r\n\r\n    const handleListItemClick = (_, index) => {\r\n        setSelectedIndex(index)\r\n    }\r\n\r\n    const changeFilter = (val) => {\r\n        setFilter(val)\r\n        handleFilterClose()\r\n    }\r\n\r\n    const getInitials = (name) => {\r\n        const arr = name.split(' ')\r\n        const initials =\r\n            arr[0].split('')[0].toUpperCase() +\r\n            arr[1].split('')[0].toUpperCase()\r\n\r\n        return initials\r\n    }\r\n\r\n    return (\r\n        <Box className={classes.root}>\r\n            <Grid container sx={{ height: 'inherit' }}>\r\n                <Grid\r\n                    item\r\n                    xs={2.4}\r\n                    sx={{\r\n                        height: '100%',\r\n                        overflowY: 'scroll',\r\n                    }}\r\n                    className='gridItem'\r\n                >\r\n                    <Paper sx={{ minHeight: '100%' }} className={classes.paper}>\r\n                        <Box sx={{ maxWidth: 500 }}>\r\n                            <TextField\r\n                                fullWidth\r\n                                InputProps={{\r\n                                    startAdornment: (\r\n                                        <InputAdornment position='start'>\r\n                                            <SvgIcon\r\n                                                fontSize='small'\r\n                                                color='action'\r\n                                            >\r\n                                                <SearchIcon />\r\n                                            </SvgIcon>\r\n                                        </InputAdornment>\r\n                                    ),\r\n                                    endAdornment: (\r\n                                        <IconButton onClick={handleFilterClick}>\r\n                                            <SvgIcon\r\n                                                fontSize='small'\r\n                                                color='action'\r\n                                            >\r\n                                                <FilterAltIcon />\r\n                                            </SvgIcon>\r\n                                        </IconButton>\r\n                                    ),\r\n                                }}\r\n                                placeholder='Search user'\r\n                                variant='outlined'\r\n                                onChange={(e) => setSearch(e.target.value)}\r\n                            />\r\n                            <Menu\r\n                                anchorEl={anchorEl}\r\n                                open={menuOpen}\r\n                                onClose={handleFilterClose}\r\n                            >\r\n                                <MenuItem\r\n                                    sx={{ py: 1.2, px: 2.5 }}\r\n                                    onClick={() => {\r\n                                        changeFilter('all')\r\n                                        setSelectedIndex(-1)\r\n                                    }}\r\n                                >\r\n                                    All Requests\r\n                                </MenuItem>\r\n                                <MenuItem\r\n                                    sx={{ py: 1.2, px: 2.5 }}\r\n                                    onClick={() => {\r\n                                        changeFilter('accepted')\r\n                                        setSelectedIndex(-1)\r\n                                    }}\r\n                                >\r\n                                    Accepted Requests\r\n                                </MenuItem>\r\n                                <MenuItem\r\n                                    sx={{ py: 1.2, px: 2.5 }}\r\n                                    onClick={() => {\r\n                                        changeFilter('rejected')\r\n                                        setSelectedIndex(-1)\r\n                                    }}\r\n                                >\r\n                                    Rejected Requests\r\n                                </MenuItem>\r\n                                <MenuItem\r\n                                    sx={{ py: 1.2, px: 2.5 }}\r\n                                    onClick={() => {\r\n                                        changeFilter('pending')\r\n                                        setSelectedIndex(-1)\r\n                                    }}\r\n                                >\r\n                                    Pending Requests\r\n                                </MenuItem>\r\n                            </Menu>\r\n                        </Box>\r\n                        <List component='nav'>\r\n                            <ListItem\r\n                                key={-1}\r\n                                button\r\n                                sx={{\r\n                                    mt: 0.5,\r\n                                    mb: 0.5,\r\n                                    backgroundColor: '#F5F5F5',\r\n                                    pt: 1.5,\r\n                                    pb: 1.5,\r\n                                }}\r\n                                selected={selectedIndex === -1}\r\n                                onClick={() => setSelectedIndex(-1)}\r\n                            >\r\n                                <ListItemAvatar>\r\n                                    <Avatar sx={{ backgroundColor: 'orange' }}>\r\n                                        <PeopleIcon />\r\n                                    </Avatar>\r\n                                </ListItemAvatar>\r\n                                <ListItemText primary='Overview All Devices' />\r\n                            </ListItem>\r\n\r\n                            {searchResult.length === 0 &&\r\n                                deviceList !== undefined &&\r\n                                deviceList !== null &&\r\n                                deviceList.map((item, index) => (\r\n                                    <ListItem\r\n                                        key={index}\r\n                                        button\r\n                                        disabled={\r\n                                            item.trackingStatus === 'pending'\r\n                                        }\r\n                                        sx={{\r\n                                            mt: 0.5,\r\n                                            mb: 0.5,\r\n                                            py: 2,\r\n                                            backgroundColor: '#F5F5F5',\r\n                                            borderLeft:\r\n                                                item.trackingStatus ===\r\n                                                'accepted'\r\n                                                    ? '6px solid green'\r\n                                                    : item.trackingStatus ===\r\n                                                      'rejected'\r\n                                                    ? '6px solid red'\r\n                                                    : '6px solid orange',\r\n                                        }}\r\n                                        selected={selectedIndex === index}\r\n                                        onClick={(event) =>\r\n                                            handleListItemClick(event, index)\r\n                                        }\r\n                                    >\r\n                                        <ListItemAvatar>\r\n                                            <Avatar\r\n                                                sx={{\r\n                                                    backgroundColor: 'orange',\r\n                                                }}\r\n                                            >\r\n                                                <Typography\r\n                                                    fontSize={16}\r\n                                                    letterSpacing={1}\r\n                                                >\r\n                                                    {getInitials(item.fullName)}\r\n                                                </Typography>\r\n                                            </Avatar>\r\n                                        </ListItemAvatar>\r\n                                        <ListItemText primary={item.fullName} />\r\n                                    </ListItem>\r\n                                ))}\r\n\r\n                            {/* showing search results */}\r\n                            {searchResult.length !== 0 &&\r\n                                searchResult.map((item, index) => (\r\n                                    <ListItem\r\n                                        key={index}\r\n                                        button\r\n                                        disabled={\r\n                                            item.trackingStatus === 'pending'\r\n                                        }\r\n                                        sx={{\r\n                                            mt: 0.5,\r\n                                            mb: 0.5,\r\n                                            py: 2,\r\n                                            backgroundColor: '#F5F5F5',\r\n                                            borderLeft:\r\n                                                item.trackingStatus ===\r\n                                                'accepted'\r\n                                                    ? '6px solid green'\r\n                                                    : item.trackingStatus ===\r\n                                                      'rejected'\r\n                                                    ? '6px solid red'\r\n                                                    : '6px solid orange',\r\n                                        }}\r\n                                        selected={selectedIndex === index}\r\n                                        onClick={(event) =>\r\n                                            handleListItemClick(event, index)\r\n                                        }\r\n                                    >\r\n                                        <ListItemAvatar>\r\n                                            <Avatar\r\n                                                sx={{\r\n                                                    backgroundColor: 'orange',\r\n                                                }}\r\n                                            >\r\n                                                <Typography\r\n                                                    fontSize={16}\r\n                                                    letterSpacing={1}\r\n                                                >\r\n                                                    {getInitials(item.fullName)}\r\n                                                </Typography>\r\n                                            </Avatar>\r\n                                        </ListItemAvatar>\r\n                                        <ListItemText primary={item.fullName} />\r\n                                    </ListItem>\r\n                                ))}\r\n                        </List>\r\n                    </Paper>\r\n                </Grid>\r\n\r\n                <Grid item xs={9.6} sx={{ height: '100%' }}>\r\n                    <Stack\r\n                        direction='row'\r\n                        justifyContent='space-between'\r\n                        sx={{ padding: 2 }}\r\n                    >\r\n                        <Typography variant='h4' component='h2'>\r\n                            Current Activity\r\n                        </Typography>\r\n                    </Stack>\r\n                    <Box\r\n                        sx={{\r\n                            height: '90%',\r\n                            py: 1,\r\n                        }}\r\n                    >\r\n                        {selectedIndex === -1 && (\r\n                            <AllLocationView\r\n                                userList={userLocations}\r\n                                senderId={userData?.uid}\r\n                                trackingList={deviceList}\r\n                            />\r\n                        )}\r\n                        {selectedIndex >= 0 && searchResult.length === 0 && (\r\n                            <Locationview\r\n                                user={deviceList[selectedIndex]}\r\n                                index={selectedIndex}\r\n                            />\r\n                        )}\r\n\r\n                        {selectedIndex >= 0 && searchResult.length !== 0 && (\r\n                            <Locationview\r\n                                user={searchResult[selectedIndex]}\r\n                                index={selectedIndex}\r\n                            />\r\n                        )}\r\n                    </Box>\r\n                </Grid>\r\n            </Grid>\r\n            {success !== null && (\r\n                <Snackbar\r\n                    open={snackOpen}\r\n                    autoHideDuration={4000}\r\n                    onClose={handleSnackClose}\r\n                    anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n                >\r\n                    <Alert\r\n                        onClose={handleSnackClose}\r\n                        severity='success'\r\n                        sx={{ width: '100%' }}\r\n                    >\r\n                        {success}\r\n                    </Alert>\r\n                </Snackbar>\r\n            )}\r\n            {error !== null && (\r\n                <Snackbar\r\n                    open={snackOpen}\r\n                    autoHideDuration={4000}\r\n                    onClose={handleSnackClose}\r\n                    anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n                >\r\n                    <Alert\r\n                        onClose={handleSnackClose}\r\n                        severity='error'\r\n                        sx={{ width: '100%' }}\r\n                    >\r\n                        {error}\r\n                    </Alert>\r\n                </Snackbar>\r\n            )}\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Dashboard\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useNavigate, Link as RouterLink } from 'react-router-dom'\r\nimport Avatar from '@mui/material/Avatar'\r\nimport Button from '@mui/material/Button'\r\nimport CssBaseline from '@mui/material/CssBaseline'\r\nimport TextField from '@mui/material/TextField'\r\nimport FormControlLabel from '@mui/material/FormControlLabel'\r\nimport Checkbox from '@mui/material/Checkbox'\r\nimport Paper from '@mui/material/Paper'\r\nimport Box from '@mui/material/Box'\r\nimport Grid from '@mui/material/Grid'\r\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined'\r\nimport Typography from '@mui/material/Typography'\r\nimport Link from '@mui/material/Link'\r\nimport { makeStyles } from '@mui/styles'\r\nimport { auth, db } from '../Firebase'\r\nimport { signInWithEmailAndPassword } from 'firebase/auth'\r\nimport {\r\n    collection,\r\n    doc,\r\n    getDoc,\r\n    getDocs,\r\n    query,\r\n    where,\r\n} from 'firebase/firestore'\r\nimport { API_SERVICE } from '../URI'\r\nimport axios from 'axios'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    image: {\r\n        backgroundImage: 'url(https://source.unsplash.com/random)',\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundColor:\r\n            theme.palette.type === 'light'\r\n                ? theme.palette.grey[50]\r\n                : theme.palette.grey[900],\r\n        backgroundSize: 'cover',\r\n        backgroundPosition: 'center',\r\n    },\r\n    paper: {\r\n        margin: theme.spacing(8, 4),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    login: {\r\n        margin: theme.spacing(3, 0, 2),\r\n        padding: theme.spacing(1.4),\r\n        fontSize: 15,\r\n    },\r\n    googleLogin: {\r\n        margin: theme.spacing(2, 0, 2),\r\n        fontSize: 15,\r\n    },\r\n}))\r\n\r\nconst Login = () => {\r\n    const classes = useStyles()\r\n    const navigate = useNavigate()\r\n\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [remember, setRemember] = useState(false)\r\n\r\n    const credentials = localStorage.getItem('credentials')\r\n        ? JSON.parse(localStorage.getItem('credentials'))\r\n        : null\r\n\r\n    useEffect(() => {\r\n        if (credentials !== null) {\r\n            setEmail(credentials.email)\r\n            setPassword(credentials.password)\r\n            setRemember(credentials.checked)\r\n        }\r\n    }, [credentials])\r\n\r\n    const submitHandler = async () => {\r\n        const superRef = collection(db, 'trackerWebUser')\r\n        const q = query(superRef, where('email', '==', email))\r\n        await getDocs(q).then(async (docs) => {\r\n            if (docs.size !== 0) {\r\n                superAdminLogin()\r\n            } else {\r\n                adminLogin()\r\n            }\r\n        })\r\n    }\r\n\r\n    const adminLogin = async () => {\r\n        signInWithEmailAndPassword(auth, email, password)\r\n            .then(async (credential) => {\r\n                sessionStorage.setItem('authToken', credential.user.accessToken)\r\n                try {\r\n                    const { data } = await axios.get(\r\n                        `${API_SERVICE}/get/admin/${email}`\r\n                    )\r\n                    const superAdminRef = doc(\r\n                        db,\r\n                        'trackerWebUser',\r\n                        data.createdBy\r\n                    )\r\n                    const superData = await getDoc(superAdminRef)\r\n\r\n                    if (superData.exists()) {\r\n                        sessionStorage.setItem(\r\n                            'userData',\r\n                            JSON.stringify(superData.data())\r\n                        )\r\n                    }\r\n\r\n                    sessionStorage.setItem('adminData', JSON.stringify(data))\r\n\r\n                    if (data.passwordChanged) {\r\n                        navigate('/app/dashboard', { replace: true })\r\n                    } else {\r\n                        navigate('/admin/change-password', { replace: true })\r\n                    }\r\n                } catch (error) {\r\n                    console.log(error.message)\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                const errorCode = error.code\r\n                const errorMessage = error.message\r\n                alert(errorCode, errorMessage)\r\n            })\r\n    }\r\n\r\n    const superAdminLogin = async () => {\r\n        signInWithEmailAndPassword(auth, email, password)\r\n            .then(async (userCredential) => {\r\n                const user = userCredential.user\r\n                console.log(user)\r\n                sessionStorage.setItem('authToken', user.accessToken)\r\n                const docRef = doc(db, 'trackerWebUser', user.uid)\r\n                const docSnap = await getDoc(docRef)\r\n\r\n                if (docSnap.exists()) {\r\n                    sessionStorage.setItem(\r\n                        'userData',\r\n                        JSON.stringify(docSnap.data())\r\n                    )\r\n                    navigate('/app/dashboard', { replace: true })\r\n                } else {\r\n                    console.log('No such document!')\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                const errorCode = error.code\r\n                const errorMessage = error.message\r\n                alert(errorCode, errorMessage)\r\n            })\r\n    }\r\n\r\n    return (\r\n        <Grid\r\n            sx={{ height: '100%' }}\r\n            container\r\n            component='main'\r\n            className={classes.root}\r\n        >\r\n            <CssBaseline />\r\n            <Grid item xs={false} sm={4} md={7} className={classes.image} />\r\n            <Grid\r\n                item\r\n                xs={12}\r\n                sm={8}\r\n                md={5}\r\n                component={Paper}\r\n                elevation={6}\r\n                square\r\n            >\r\n                <div className={classes.paper}>\r\n                    <Avatar className={classes.avatar}>\r\n                        <LockOutlinedIcon />\r\n                    </Avatar>\r\n                    <Typography\r\n                        component='h1'\r\n                        variant='h1'\r\n                        sx={{ mt: 1, mb: 4 }}\r\n                    >\r\n                        GPS REPORT\r\n                    </Typography>\r\n                    <form className={classes.form} noValidate>\r\n                        <TextField\r\n                            variant='outlined'\r\n                            margin='normal'\r\n                            required\r\n                            fullWidth\r\n                            id='email'\r\n                            label='Email Address'\r\n                            name='email'\r\n                            autoComplete='email'\r\n                            autoFocus\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                        />\r\n                        <TextField\r\n                            variant='outlined'\r\n                            margin='normal'\r\n                            required\r\n                            fullWidth\r\n                            name='password'\r\n                            label='Password'\r\n                            type='password'\r\n                            id='password'\r\n                            autoComplete='current-password'\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                        />\r\n                        <Box\r\n                            sx={{ display: 'flex', justifyContent: 'flex-end' }}\r\n                        >\r\n                            <Link variant='body2'>Forgot password?</Link>\r\n                        </Box>\r\n                        <FormControlLabel\r\n                            control={\r\n                                <Checkbox\r\n                                    value={remember}\r\n                                    color='primary'\r\n                                    onChange={(e) =>\r\n                                        setRemember(e.target.checked)\r\n                                    }\r\n                                />\r\n                            }\r\n                            label='Remember me'\r\n                        />\r\n                        <Button\r\n                            fullWidth\r\n                            variant='contained'\r\n                            color='primary'\r\n                            className={classes.login}\r\n                            onClick={() => submitHandler()}\r\n                        >\r\n                            LOGIN\r\n                        </Button>\r\n\r\n                        <Box\r\n                            sx={{\r\n                                display: 'flex',\r\n                                justifyContent: 'center',\r\n                                mt: 1.3,\r\n                            }}\r\n                        >\r\n                            <Link\r\n                                component={RouterLink}\r\n                                to='/register'\r\n                                variant='body2'\r\n                                underline='hover'\r\n                            >\r\n                                Don't have an account? Sign up for free\r\n                            </Link>\r\n                        </Box>\r\n                    </form>\r\n                </div>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import { Helmet } from 'react-helmet'\r\nimport { Box, Container, Typography } from '@mui/material'\r\n\r\nconst NotFound = () => (\r\n  <>\r\n    <Helmet>\r\n      <title>404 | Material Kit</title>\r\n    </Helmet>\r\n    <Box\r\n      sx={{\r\n        backgroundColor: 'background.default',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        height: '100%',\r\n        justifyContent: 'center',\r\n      }}\r\n    >\r\n      <Container maxWidth='md'>\r\n        <Typography align='center' color='textPrimary' variant='h1'>\r\n          404: The page you are looking for isn’t here\r\n        </Typography>\r\n        <Typography align='center' color='textPrimary' variant='subtitle2'>\r\n          You either tried some shady route or you came here by mistake.\r\n          Whichever it is, try using the navigation\r\n        </Typography>\r\n        <Box sx={{ textAlign: 'center' }}>\r\n          <img\r\n            alt='Under development'\r\n            src='/static/images/undraw_page_not_found_su7k.svg'\r\n            style={{\r\n              marginTop: 50,\r\n              display: 'inline-block',\r\n              maxWidth: '100%',\r\n              width: 560,\r\n            }}\r\n          />\r\n        </Box>\r\n      </Container>\r\n    </Box>\r\n  </>\r\n)\r\n\r\nexport default NotFound\r\n","import React, { useState } from 'react'\r\nimport { useNavigate, Link as RouterLink } from 'react-router-dom'\r\nimport Avatar from '@mui/material/Avatar'\r\nimport Button from '@mui/material/Button'\r\nimport CssBaseline from '@mui/material/CssBaseline'\r\nimport TextField from '@mui/material/TextField'\r\nimport FormControlLabel from '@mui/material/FormControlLabel'\r\nimport Checkbox from '@mui/material/Checkbox'\r\nimport Paper from '@mui/material/Paper'\r\nimport Box from '@mui/material/Box'\r\nimport Grid from '@mui/material/Grid'\r\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined'\r\nimport Typography from '@mui/material/Typography'\r\nimport Link from '@mui/material/Link'\r\nimport { makeStyles } from '@mui/styles'\r\nimport { auth, db } from '../Firebase'\r\nimport { createUserWithEmailAndPassword, updateProfile } from 'firebase/auth'\r\nimport { doc, serverTimestamp, setDoc } from 'firebase/firestore'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    image: {\r\n        backgroundImage: 'url(https://source.unsplash.com/random)',\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundColor:\r\n            theme.palette.type === 'light'\r\n                ? theme.palette.grey[50]\r\n                : theme.palette.grey[900],\r\n        backgroundSize: 'cover',\r\n        backgroundPosition: 'center',\r\n    },\r\n    paper: {\r\n        margin: theme.spacing(4, 2),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    login: {\r\n        margin: theme.spacing(3, 0, 2),\r\n        padding: theme.spacing(1.4),\r\n        fontSize: 15,\r\n    },\r\n    googleLogin: {\r\n        margin: theme.spacing(2, 0, 2),\r\n        fontSize: 15,\r\n    },\r\n}))\r\n\r\nconst Register = () => {\r\n    const classes = useStyles()\r\n    const navigate = useNavigate()\r\n\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [firstName, setFirstName] = useState('')\r\n    const [lastName, setLastName] = useState('')\r\n    const [companyName, setCompanyName] = useState('')\r\n    const [policy, setPolicy] = useState(false)\r\n\r\n    const submitHandler = async () => {\r\n        createUserWithEmailAndPassword(auth, email, password)\r\n            .then(async (userCredential) => {\r\n                const user = userCredential.user\r\n\r\n                updateProfile(auth.currentUser, {\r\n                    displayName: firstName + lastName,\r\n                }).catch((error) => console.log(error.message))\r\n\r\n                const userData = {\r\n                    uid: user.uid,\r\n                    firstName,\r\n                    lastName,\r\n                    email: user.email,\r\n                    profilePhoto:\r\n                        'https://th.bing.com/th/id/OIP.9B2RxsHDB_s7FZT0mljnhQHaHa?pid=ImgDet&rs=1',\r\n                    companyName,\r\n                    createdAt: serverTimestamp(),\r\n                }\r\n\r\n                sessionStorage.setItem('authToken', user.accessToken)\r\n\r\n                const userRef = doc(db, 'trackerWebUser', user.uid)\r\n\r\n                await setDoc(userRef, userData)\r\n                    .then(() => {\r\n                        sessionStorage.setItem(\r\n                            'userData',\r\n                            JSON.stringify(userData)\r\n                        )\r\n                        navigate('/app/dashboard', { replace: true })\r\n                    })\r\n                    .catch((error) => {\r\n                        const errorCode = error.code\r\n                        const errorMessage = error.message\r\n                        alert(errorCode, errorMessage)\r\n                    })\r\n            })\r\n            .catch((error) => {\r\n                const errorCode = error.code\r\n                const errorMessage = error.message\r\n                alert(errorCode, errorMessage)\r\n            })\r\n    }\r\n\r\n    return (\r\n        <Grid sx={{ height: '100%' }} container component='main'>\r\n            <CssBaseline />\r\n            <Grid item xs={false} sm={4} md={7} className={classes.image} />\r\n            <Grid\r\n                item\r\n                xs={12}\r\n                sm={8}\r\n                md={5}\r\n                component={Paper}\r\n                elevation={6}\r\n                square\r\n                sx={{ p: 2 }}\r\n            >\r\n                <div className={classes.paper}>\r\n                    <Avatar className={classes.avatar}>\r\n                        <LockOutlinedIcon />\r\n                    </Avatar>\r\n                    <Typography\r\n                        component='h1'\r\n                        variant='h1'\r\n                        sx={{ mt: 1, mb: 4 }}\r\n                    >\r\n                        GPS REPORT\r\n                    </Typography>\r\n                    <form className={classes.form} noValidate>\r\n                        <TextField\r\n                            variant='outlined'\r\n                            margin='normal'\r\n                            required\r\n                            fullWidth\r\n                            id='firstName'\r\n                            label='First Name'\r\n                            name='firstName'\r\n                            autoComplete='name'\r\n                            autoFocus\r\n                            value={firstName}\r\n                            onChange={(e) => setFirstName(e.target.value)}\r\n                        />\r\n                        <TextField\r\n                            variant='outlined'\r\n                            margin='normal'\r\n                            required\r\n                            fullWidth\r\n                            id='lastName'\r\n                            label='Last Name'\r\n                            name='lastName'\r\n                            autoComplete='name'\r\n                            value={lastName}\r\n                            onChange={(e) => setLastName(e.target.value)}\r\n                        />\r\n                        <TextField\r\n                            variant='outlined'\r\n                            margin='normal'\r\n                            required\r\n                            fullWidth\r\n                            id='email'\r\n                            label='Email Address'\r\n                            name='email'\r\n                            autoComplete='email'\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                        />\r\n                        <TextField\r\n                            variant='outlined'\r\n                            margin='normal'\r\n                            required\r\n                            fullWidth\r\n                            id='email'\r\n                            label='Company Name'\r\n                            name='companyName'\r\n                            autoComplete='text'\r\n                            value={companyName}\r\n                            onChange={(e) => setCompanyName(e.target.value)}\r\n                        />\r\n                        <TextField\r\n                            variant='outlined'\r\n                            margin='normal'\r\n                            required\r\n                            fullWidth\r\n                            name='password'\r\n                            label='Password'\r\n                            type='password'\r\n                            id='password'\r\n                            autoComplete='current-password'\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                        />\r\n                        <FormControlLabel\r\n                            control={\r\n                                <Checkbox\r\n                                    value='remember'\r\n                                    color='primary'\r\n                                    checked={policy}\r\n                                    onChange={(e) =>\r\n                                        setPolicy(e.target.checked)\r\n                                    }\r\n                                />\r\n                            }\r\n                            label='I have read the Terms and Conditions'\r\n                        />\r\n                        <Button\r\n                            fullWidth\r\n                            variant='contained'\r\n                            color='primary'\r\n                            className={classes.login}\r\n                            onClick={() => submitHandler()}\r\n                        >\r\n                            Sign-Up\r\n                        </Button>\r\n                        {/* <Typography sx={{ textAlign: 'center' }} variant='h4'>\r\n              OR\r\n            </Typography>\r\n            <Button\r\n              fullWidth\r\n              variant='outlined'\r\n              color='primary'\r\n              className={classes.googleLogin}\r\n            >\r\n              <Avatar\r\n                alt='Remy Sharp'\r\n                src='/static/images/g.png'\r\n                sx={{ marginRight: 1 }}\r\n              />\r\n              Sign-up with Google\r\n            </Button> */}\r\n                        <Box\r\n                            sx={{\r\n                                display: 'flex',\r\n                                justifyContent: 'center',\r\n                                mt: 1.3,\r\n                            }}\r\n                        >\r\n                            <Link\r\n                                component={RouterLink}\r\n                                to='/login'\r\n                                variant='body2'\r\n                                underline='hover'\r\n                            >\r\n                                Already have an account? Login here\r\n                            </Link>\r\n                        </Box>\r\n                    </form>\r\n                </div>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Register\r\n","import * as React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Box from '@mui/material/Box'\r\nimport Collapse from '@mui/material/Collapse'\r\nimport IconButton from '@mui/material/IconButton'\r\nimport Table from '@mui/material/Table'\r\nimport TableBody from '@mui/material/TableBody'\r\nimport TableCell from '@mui/material/TableCell'\r\nimport TableContainer from '@mui/material/TableContainer'\r\nimport TableHead from '@mui/material/TableHead'\r\nimport TableRow from '@mui/material/TableRow'\r\nimport Typography from '@mui/material/Typography'\r\nimport Paper from '@mui/material/Paper'\r\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown'\r\nimport KeyboardArrowUpIcon from '@mui/icons-material/KeyboardArrowUp'\r\nimport { CircularProgress } from '@mui/material'\r\nimport moment from 'moment'\r\nimport axios from 'axios'\r\nimport { API_SERVICE } from '../../URI'\r\n\r\nfunction Row(props) {\r\n  const {\r\n    row,\r\n    hotspotList,\r\n    selectedHotspots,\r\n    selectedGroups,\r\n    selectedMonth,\r\n  } = props\r\n  const [open, setOpen] = React.useState(false)\r\n  const [history, setHistory] = React.useState([])\r\n  const [load, setLoad] = React.useState(false)\r\n\r\n  const userData = sessionStorage.getItem('userData')\r\n    ? JSON.parse(sessionStorage.getItem('userData'))\r\n    : null\r\n\r\n  const arr = row.hotspots.map((x) => x.hotspot)\r\n\r\n  const checkExist = (x) => {\r\n    const i = arr.findIndex((e) => e === x._id)\r\n    return i\r\n  }\r\n\r\n  const filterGroup = async (data) => {\r\n    return new Promise((resolve) => {\r\n      const arr = []\r\n\r\n      for (let id of selectedGroups) {\r\n        console.log('inside')\r\n        for (let x of data) {\r\n          if (id === x.group._id) {\r\n            arr.push(x)\r\n          }\r\n        }\r\n      }\r\n      console.log('Here')\r\n      resolve(arr)\r\n    })\r\n  }\r\n\r\n  React.useEffect(async () => {\r\n    try {\r\n      setLoad(true)\r\n      const { data } = await axios.get(\r\n        `${API_SERVICE}/get/location/${userData.uid}/${row.phoneNumber}/${\r\n          selectedMonth + 1\r\n        }`,\r\n      )\r\n\r\n      if (selectedGroups.length === 0) {\r\n        setHistory(data)\r\n        setLoad(false)\r\n      } else {\r\n        const arr = await filterGroup(data)\r\n\r\n        setHistory(arr)\r\n        setLoad(false)\r\n      }\r\n    } catch (error) {\r\n      console.log(error.message)\r\n    }\r\n  }, [selectedGroups])\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <TableRow sx={{ '& > *': { borderBottom: 'unset' } }}>\r\n        <TableCell>\r\n          <IconButton\r\n            aria-label=\"expand row\"\r\n            size=\"small\"\r\n            onClick={() => setOpen(!open)}\r\n          >\r\n            {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\r\n          </IconButton>\r\n        </TableCell>\r\n        <TableCell component=\"th\" scope=\"row\">\r\n          {row.device}\r\n        </TableCell>\r\n        <TableCell align=\"center\">{row.phoneNumber}</TableCell>\r\n\r\n        {selectedHotspots.length === 0 &&\r\n          hotspotList.map((x, i) => (\r\n            <React.Fragment key={x.hotspot}>\r\n              {checkExist(x) !== -1 ? (\r\n                <TableCell key={x.hotspot} align=\"center\">\r\n                  {row.hotspots[checkExist(x)].total}\r\n                </TableCell>\r\n              ) : (\r\n                <TableCell key={x.hotspot} align=\"center\">\r\n                  0\r\n                </TableCell>\r\n              )}\r\n            </React.Fragment>\r\n          ))}\r\n        {selectedHotspots.length !== 0 &&\r\n          selectedHotspots.map((x, i) => (\r\n            <React.Fragment key={x.hotspot}>\r\n              {checkExist(x) !== -1 ? (\r\n                <TableCell key={x.hotspot} align=\"center\">\r\n                  {row.hotspots[checkExist(x)].total}\r\n                </TableCell>\r\n              ) : (\r\n                <TableCell key={x.hotspot} align=\"center\">\r\n                  0\r\n                </TableCell>\r\n              )}\r\n            </React.Fragment>\r\n          ))}\r\n      </TableRow>\r\n      <TableRow>\r\n        <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\r\n          <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n            <Box sx={{ margin: 1 }}>\r\n              <Typography variant=\"h6\" sx={{ my: 2 }} component=\"div\">\r\n                History\r\n              </Typography>\r\n              <Table size=\"small\" aria-label=\"purchases\">\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell>Date</TableCell>\r\n                    <TableCell>Address</TableCell>\r\n                    <TableCell align=\"right\">Hotspot</TableCell>\r\n                    <TableCell align=\"right\">Group</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {!load &&\r\n                    history.map((historyRow, index) => (\r\n                      <TableRow key={index + 1}>\r\n                        <TableCell\r\n                          sx={{ borderWidth: 0, padding: '16px' }}\r\n                          component=\"th\"\r\n                          scope=\"row\"\r\n                        >\r\n                          {moment(historyRow.createdAt).format(\r\n                            'DD MMMM YYYY - hh:mm a',\r\n                          )}\r\n                        </TableCell>\r\n                        <TableCell sx={{ borderWidth: 0, padding: '16px' }}>\r\n                          {historyRow.address}\r\n                        </TableCell>\r\n                        <TableCell\r\n                          sx={{ borderWidth: 0, padding: '16px' }}\r\n                          align=\"right\"\r\n                        >\r\n                          {historyRow.hotspot.hotspotName}\r\n                        </TableCell>\r\n                        <TableCell\r\n                          sx={{ borderWidth: 0, padding: '16px' }}\r\n                          align=\"right\"\r\n                        >\r\n                          {historyRow.group.groupName}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    ))}\r\n                </TableBody>\r\n              </Table>\r\n              {load && (\r\n                <Box\r\n                  sx={{\r\n                    display: 'flex',\r\n                    justifyContent: 'center',\r\n                    width: '100%',\r\n                    my: 3,\r\n                  }}\r\n                >\r\n                  <CircularProgress sx={{ fontSize: 30 }} />\r\n                </Box>\r\n              )}\r\n            </Box>\r\n          </Collapse>\r\n        </TableCell>\r\n      </TableRow>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nconst ReportTable = (props) => {\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell />\r\n            <TableCell>Full Name</TableCell>\r\n            <TableCell align=\"center\">Phone Number</TableCell>\r\n            {props.selectedHotspots.length === 0 &&\r\n              props.hotspotList.map((hotspot, index) => (\r\n                <TableCell key={hotspot._id} align=\"center\">\r\n                  {hotspot.hotspotName}\r\n                </TableCell>\r\n              ))}\r\n            {props.selectedHotspots.length !== 0 &&\r\n              props.selectedHotspots.map((hotspot, index) => (\r\n                <TableCell key={hotspot._id} align=\"center\">\r\n                  {hotspot.hotspotName}\r\n                </TableCell>\r\n              ))}\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {props.tableData.map((row) => (\r\n            <Row\r\n              key={row.phoneNumber}\r\n              row={row}\r\n              hotspotList={props.hotspotList}\r\n              selectedHotspots={props.selectedHotspots}\r\n              selectedGroups={props.selectedGroups}\r\n              selectedMonth={props.selectedMonth}\r\n            />\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  )\r\n}\r\n\r\nexport default React.memo(ReportTable)\r\n","import React from 'react'\r\nimport {\r\n  Checkbox,\r\n  FormControl,\r\n  InputLabel,\r\n  ListItemText,\r\n  MenuItem,\r\n  OutlinedInput,\r\n  Select,\r\n} from '@mui/material'\r\n\r\nconst ITEM_HEIGHT = 48\r\nconst ITEM_PADDING_TOP = 8\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n    },\r\n  },\r\n}\r\n\r\nconst HotspotFilter = (props) => {\r\n  return (\r\n    <FormControl variant=\"outlined\" sx={{ width: '250px', ml: 3 }}>\r\n      <InputLabel id=\"hotspotFilter\">Hotspots</InputLabel>\r\n      <Select\r\n        id=\"hotspotFilter\"\r\n        multiple\r\n        value={props.selectedHotspotNames}\r\n        onChange={props.handleHotspotSelect}\r\n        input={<OutlinedInput label=\"Hotspots\" />}\r\n        renderValue={(selected) => selected.join(', ')}\r\n        MenuProps={MenuProps}\r\n      >\r\n        {props.hotspotNames.map((hotspot) => (\r\n          <MenuItem key={hotspot._id} value={hotspot._id}>\r\n            <Checkbox\r\n              checked={props.selectedHotspotNames.indexOf(hotspot._id) > -1}\r\n            />\r\n            <ListItemText primary={hotspot.hotspotName} />\r\n          </MenuItem>\r\n        ))}\r\n      </Select>\r\n    </FormControl>\r\n  )\r\n}\r\n\r\nexport default React.memo(HotspotFilter)\r\n","import React from 'react'\r\nimport {\r\n  Checkbox,\r\n  FormControl,\r\n  InputLabel,\r\n  ListItemText,\r\n  MenuItem,\r\n  OutlinedInput,\r\n  Select,\r\n} from '@mui/material'\r\n\r\nconst ITEM_HEIGHT = 48\r\nconst ITEM_PADDING_TOP = 8\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n    },\r\n  },\r\n}\r\n\r\nconst DeviceFilter = (props) => {\r\n  return (\r\n    <FormControl variant=\"outlined\" sx={{ width: '250px', ml: 3 }}>\r\n      <InputLabel>Mobile Devices</InputLabel>\r\n      <Select\r\n        label=\"Mobile Devices\"\r\n        multiple\r\n        value={props.selectedDevices}\r\n        onChange={props.handleSelectedDevice}\r\n        input={<OutlinedInput label=\"Mobile Devices\" />}\r\n        renderValue={(selected) => selected.join(', ')}\r\n        MenuProps={MenuProps}\r\n      >\r\n        {props.mobileDevices.map((device, i) => (\r\n          <MenuItem\r\n            key={device._id}\r\n            value={`${device.fullName} - ${device.phoneNumber}`}\r\n          >\r\n            <Checkbox\r\n              checked={\r\n                props.selectedDevices.indexOf(\r\n                  `${device.fullName} - ${device.phoneNumber}`,\r\n                ) > -1\r\n              }\r\n            />\r\n            <ListItemText\r\n              primary={`${device.fullName} | ${device.phoneNumber}`}\r\n            />\r\n          </MenuItem>\r\n        ))}\r\n      </Select>\r\n    </FormControl>\r\n  )\r\n}\r\n\r\nexport default React.memo(DeviceFilter)\r\n","import React from 'react'\r\nimport {\r\n  Alert,\r\n  FormControl,\r\n  InputLabel,\r\n  MenuItem,\r\n  Select,\r\n  Snackbar,\r\n} from '@mui/material'\r\n\r\nconst MonthFilter = (props) => {\r\n  const [isDisable, setIsDisable] = React.useState(false)\r\n  const [open, setOpen] = React.useState(false)\r\n\r\n  React.useEffect(() => {\r\n    if (props.subscription !== null) {\r\n      setIsDisable(props.subscription.reportCount === 1)\r\n    }\r\n  }, [props.subscription])\r\n\r\n  const showError = () => {\r\n    setOpen(true)\r\n  }\r\n\r\n  console.log(isDisable)\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <FormControl variant=\"outlined\" sx={{ width: '250px', ml: 3 }}>\r\n        <InputLabel>Month</InputLabel>\r\n        <Select\r\n          value={props.selectedMonth}\r\n          onChange={\r\n            isDisable\r\n              ? () => showError()\r\n              : (e) => props.setSelectedMonth(e.target.value)\r\n          }\r\n          label=\"Month\"\r\n        >\r\n          {props.Months.map((month, i) => (\r\n            <MenuItem sx={{ py: 1.2, px: 2 }} key={i} value={month}>\r\n              {month}\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n      <Snackbar\r\n        anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n        open={open}\r\n        autoHideDuration={6000}\r\n        onClose={() => setOpen(false)}\r\n      >\r\n        <Alert\r\n          onClose={() => setOpen(false)}\r\n          severity=\"error\"\r\n          variant=\"filled\"\r\n          sx={{ width: '100%' }}\r\n        >\r\n          You cannot use this feature. Please upgrade your plan.\r\n        </Alert>\r\n      </Snackbar>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default React.memo(MonthFilter)\r\n","import React from 'react'\r\nimport {\r\n  Checkbox,\r\n  FormControl,\r\n  InputLabel,\r\n  ListItemText,\r\n  MenuItem,\r\n  OutlinedInput,\r\n  Select,\r\n} from '@mui/material'\r\n\r\nconst ITEM_HEIGHT = 48\r\nconst ITEM_PADDING_TOP = 8\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n    },\r\n  },\r\n}\r\nconst GroupFilter = (props) => {\r\n  return (\r\n    <FormControl variant=\"outlined\" sx={{ width: '250px', ml: 3 }}>\r\n      <InputLabel id=\"hotspotFilter\">Groups</InputLabel>\r\n      <Select\r\n        id=\"hotspotFilter\"\r\n        multiple\r\n        value={props.selectedGroupNames}\r\n        onChange={props.handleGroupSelect}\r\n        input={<OutlinedInput label=\"Groups\" />}\r\n        renderValue={(selected) => selected.join(', ')}\r\n        MenuProps={MenuProps}\r\n      >\r\n        {props.groupNames.map((group, i) => (\r\n          <MenuItem key={group._id} value={group._id}>\r\n            <Checkbox\r\n              checked={props.selectedGroupNames.indexOf(group._id) > -1}\r\n            />\r\n            <ListItemText primary={group.groupName} />\r\n          </MenuItem>\r\n        ))}\r\n      </Select>\r\n    </FormControl>\r\n  )\r\n}\r\n\r\nexport default React.memo(GroupFilter)\r\n","import { createContext, useEffect, useReducer, useState } from 'react'\r\nimport { auth, db } from '../Firebase'\r\nimport { onAuthStateChanged } from 'firebase/auth'\r\nimport { API_SERVICE } from '../URI'\r\nimport axios from 'axios'\r\nimport { doc, getDoc } from 'firebase/firestore'\r\n\r\nconst initialState = {\r\n    customerId: null,\r\n    subscriptions: [],\r\n    cart: {},\r\n}\r\n\r\nconst reducer = (state, action) => {\r\n    if (action.type === 'SUBSCRIPTION_DATA_CHANGED') {\r\n        const { customerId, subscriptions } = action.payload\r\n        return {\r\n            ...state,\r\n            customerId,\r\n            subscriptions,\r\n            isInitialized: true,\r\n        }\r\n    }\r\n\r\n    if (action.type === 'SELECT_PRODUCT') {\r\n        console.log('Success', action.payload)\r\n        const { cart } = action.payload\r\n        return {\r\n            ...state,\r\n            cart,\r\n        }\r\n    }\r\n\r\n    if (action.type === 'PAYMENT_DETAILS') {\r\n        console.log('Success', action.payload)\r\n        const { details } = action.payload\r\n        return {\r\n            ...state,\r\n            cart: { ...state.cart, details },\r\n        }\r\n    }\r\n\r\n    return state\r\n}\r\n\r\nexport const SubscriptionContext = createContext({\r\n    ...initialState,\r\n})\r\n\r\nexport const SubscriptionProvider = (props) => {\r\n    const { children } = props\r\n    const [state, dispatch] = useReducer(reducer, initialState)\r\n\r\n    useEffect(async () => {\r\n        onAuthStateChanged(auth, async (user) => {\r\n            try {\r\n                const ref = doc(db, 'trackerWebUser', user.uid)\r\n                const snap = await getDoc(ref)\r\n\r\n                let userData\r\n\r\n                if (snap.exists()) {\r\n                    const data = snap.data()\r\n                    userData = {\r\n                        uid: data.uid,\r\n                        displayName: `${data.firstName} ${data.lastName}`,\r\n                        email: data.email,\r\n                    }\r\n                } else {\r\n                    const _email = user.email\r\n\r\n                    const { data } = await axios.get(\r\n                        `${API_SERVICE}/get/admin/${_email}`\r\n                    )\r\n\r\n                    const { createdBy } = data\r\n\r\n                    const ref = doc(db, 'trackerWebUser', createdBy)\r\n                    const snap = await getDoc(ref)\r\n\r\n                    if (snap.exists()) {\r\n                        const data = snap.data()\r\n                        userData = {\r\n                            uid: data.uid,\r\n                            displayName: `${data.firstName} ${data.lastName}`,\r\n                            email: data.email,\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (userData) {\r\n                    const customer = await fetchCustomer(userData)\r\n                    if (customer) {\r\n                        const subscriptions = await fetchSubscriptions(\r\n                            customer?.id\r\n                        )\r\n                        dispatch({\r\n                            type: 'SUBSCRIPTION_DATA_CHANGED',\r\n                            payload: {\r\n                                customerId: customer?.id,\r\n                                subscriptions: subscriptions,\r\n                            },\r\n                        })\r\n                    }\r\n                } else {\r\n                    dispatch({\r\n                        type: 'SUBSCRIPTION_DATA_CHANGED',\r\n                        payload: {\r\n                            customerId: null,\r\n                            subscriptions: [],\r\n                        },\r\n                    })\r\n                }\r\n            } catch (error) {\r\n                console.log(error.message)\r\n                dispatch({\r\n                    type: 'SUBSCRIPTION_DATA_CHANGED',\r\n                    payload: {\r\n                        customerId: null,\r\n                        subscriptions: [],\r\n                    },\r\n                })\r\n            }\r\n        })\r\n    }, [dispatch])\r\n\r\n    const fetchCustomer = async ({ uid, displayName, email }) => {\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n            },\r\n        }\r\n\r\n        const body = {\r\n            userId: uid,\r\n            name: displayName,\r\n            email,\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `${API_SERVICE}/create/customer`,\r\n            body,\r\n            config\r\n        )\r\n\r\n        return data\r\n    }\r\n\r\n    const fetchSubscriptions = async (customerId) => {\r\n        console.log(customerId)\r\n        const { data } = await axios.get(\r\n            `${API_SERVICE}/subscriptions/${customerId}`\r\n        )\r\n        return data.result\r\n    }\r\n\r\n    return (\r\n        <SubscriptionContext.Provider value={{ state, dispatch }}>\r\n            {children}\r\n        </SubscriptionContext.Provider>\r\n    )\r\n}\r\n\r\nexport const SubscriptionConsumer = SubscriptionContext.Consumer\r\n","import { useContext } from 'react'\r\nimport { SubscriptionContext } from '../contexts/subscriptionContext'\r\n\r\nexport const useSubscription = () => useContext(SubscriptionContext)\r\n","import axios from 'axios'\r\nimport { API_SERVICE } from '../URI'\r\n\r\nconst fetchPlans = async () => {\r\n    const { data } = await axios.get(`${API_SERVICE}/subscription/config`)\r\n\r\n    return data.prices\r\n}\r\n\r\nexport const getSubscriptionDetails = async (state) => {\r\n    let subscriptionDetail\r\n\r\n    if (state.subscriptions.length !== 0) {\r\n        for (let sub of state?.subscriptions?.data) {\r\n            if (sub.status === 'active') {\r\n                subscriptionDetail = sub\r\n                break\r\n            }\r\n        }\r\n    }\r\n\r\n    if (subscriptionDetail) {\r\n        const plans = await fetchPlans()\r\n        const planArr =\r\n            plans.length !== 0\r\n                ? plans.filter((x) => x.id === subscriptionDetail.plan.id)\r\n                : []\r\n\r\n        if (planArr.length !== 0) {\r\n            const plan = planArr[0]\r\n            const productName = plan.product.name\r\n\r\n            const sub = {\r\n                planId: plan.id,\r\n                productName,\r\n                productId: plan.product.id,\r\n                hotspotCount:\r\n                    productName === 'Pro Plan' ? Number.MAX_VALUE : 10,\r\n                deviceCount:\r\n                    productName === 'Pro Plan'\r\n                        ? subscriptionDetail.quantity\r\n                        : Number.MAX_VALUE,\r\n                groupCount: productName === 'Pro Plan' ? Number.MAX_VALUE : 2,\r\n                adminCount: productName === 'Pro Plan' ? Number.MAX_VALUE : 0,\r\n                reportCount: productName === 'Pro Plan' ? Number.MAX_VALUE : 1,\r\n            }\r\n\r\n            return sub\r\n        }\r\n    }\r\n\r\n    return null\r\n}\r\n","import * as React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Box from '@mui/material/Box'\r\nimport Collapse from '@mui/material/Collapse'\r\nimport IconButton from '@mui/material/IconButton'\r\nimport Table from '@mui/material/Table'\r\nimport TableBody from '@mui/material/TableBody'\r\nimport TableCell from '@mui/material/TableCell'\r\nimport TableContainer from '@mui/material/TableContainer'\r\nimport TableHead from '@mui/material/TableHead'\r\nimport TableRow from '@mui/material/TableRow'\r\nimport Typography from '@mui/material/Typography'\r\nimport Paper from '@mui/material/Paper'\r\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown'\r\nimport KeyboardArrowUpIcon from '@mui/icons-material/KeyboardArrowUp'\r\nimport { CircularProgress } from '@mui/material'\r\nimport moment from 'moment'\r\nimport axios from 'axios'\r\nimport { API_SERVICE } from '../../URI'\r\n\r\nfunction Row(props) {\r\n  const {\r\n    row,\r\n    hotspotList,\r\n    selectedHotspots,\r\n    selectedGroups,\r\n    selectedMonth,\r\n  } = props\r\n  const [history, setHistory] = React.useState([])\r\n  const [load, setLoad] = React.useState(false)\r\n\r\n  const userData = sessionStorage.getItem('userData')\r\n    ? JSON.parse(sessionStorage.getItem('userData'))\r\n    : null\r\n\r\n  const arr = row.hotspots.map((x) => x.hotspot)\r\n\r\n  const checkExist = (x) => {\r\n    const i = arr.findIndex((e) => e === x._id)\r\n    return i\r\n  }\r\n\r\n  const filterGroup = async (data) => {\r\n    return new Promise((resolve) => {\r\n      const arr = []\r\n\r\n      for (let id of selectedGroups) {\r\n        console.log('inside')\r\n        for (let x of data) {\r\n          if (id === x.group._id) {\r\n            arr.push(x)\r\n          }\r\n        }\r\n      }\r\n      console.log('Here')\r\n      resolve(arr)\r\n    })\r\n  }\r\n\r\n  React.useEffect(async () => {\r\n    try {\r\n      setLoad(true)\r\n      const { data } = await axios.get(\r\n        `${API_SERVICE}/get/location/${userData.uid}/${row.phoneNumber}/${\r\n          selectedMonth + 1\r\n        }`,\r\n      )\r\n\r\n      if (selectedGroups.length === 0) {\r\n        setHistory(data)\r\n        setLoad(false)\r\n      } else {\r\n        const arr = await filterGroup(data)\r\n\r\n        setHistory(arr)\r\n        setLoad(false)\r\n      }\r\n    } catch (error) {\r\n      console.log(error.message)\r\n    }\r\n  }, [selectedGroups])\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <TableRow sx={{ '& > *': { borderBottom: 'unset' } }}>\r\n        <TableCell></TableCell>\r\n        <TableCell component=\"th\" scope=\"row\">\r\n          {row.device}\r\n        </TableCell>\r\n        <TableCell align=\"center\">{row.phoneNumber}</TableCell>\r\n\r\n        {selectedHotspots.length === 0 &&\r\n          hotspotList.map((x, i) => (\r\n            <React.Fragment key={x.hotspot}>\r\n              {checkExist(x) !== -1 ? (\r\n                <TableCell key={x.hotspot} align=\"center\">\r\n                  {row.hotspots[checkExist(x)].total}\r\n                </TableCell>\r\n              ) : (\r\n                <TableCell key={x.hotspot} align=\"center\">\r\n                  0\r\n                </TableCell>\r\n              )}\r\n            </React.Fragment>\r\n          ))}\r\n        {selectedHotspots.length !== 0 &&\r\n          selectedHotspots.map((x, i) => (\r\n            <React.Fragment key={x.hotspot}>\r\n              {checkExist(x) !== -1 ? (\r\n                <TableCell key={x.hotspot} align=\"center\">\r\n                  {row.hotspots[checkExist(x)].total}\r\n                </TableCell>\r\n              ) : (\r\n                <TableCell key={x.hotspot} align=\"center\">\r\n                  0\r\n                </TableCell>\r\n              )}\r\n            </React.Fragment>\r\n          ))}\r\n      </TableRow>\r\n      <TableRow>\r\n        <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\r\n          <Box sx={{ margin: 1 }}>\r\n            <Typography variant=\"h6\" sx={{ my: 2 }} component=\"div\">\r\n              History\r\n            </Typography>\r\n            <Table size=\"small\" aria-label=\"purchases\">\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell>Date</TableCell>\r\n                  <TableCell>Address</TableCell>\r\n                  <TableCell align=\"right\">Hotspot</TableCell>\r\n                  <TableCell align=\"right\">Group</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {!load &&\r\n                  history.map((historyRow, index) => (\r\n                    <TableRow key={index + 1}>\r\n                      <TableCell\r\n                        sx={{ borderWidth: 0, padding: '16px' }}\r\n                        component=\"th\"\r\n                        scope=\"row\"\r\n                      >\r\n                        {moment(historyRow.createdAt).format(\r\n                          'DD MMMM YYYY - hh:mm a',\r\n                        )}\r\n                      </TableCell>\r\n                      <TableCell sx={{ borderWidth: 0, padding: '16px' }}>\r\n                        {historyRow.address}\r\n                      </TableCell>\r\n                      <TableCell\r\n                        sx={{ borderWidth: 0, padding: '16px' }}\r\n                        align=\"right\"\r\n                      >\r\n                        {historyRow.hotspot.hotspotName}\r\n                      </TableCell>\r\n                      <TableCell\r\n                        sx={{ borderWidth: 0, padding: '16px' }}\r\n                        align=\"right\"\r\n                      >\r\n                        {historyRow.group.groupName}\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n              </TableBody>\r\n            </Table>\r\n            {load && (\r\n              <Box\r\n                sx={{\r\n                  display: 'flex',\r\n                  justifyContent: 'center',\r\n                  width: '100%',\r\n                  my: 3,\r\n                }}\r\n              >\r\n                <CircularProgress sx={{ fontSize: 30 }} />\r\n              </Box>\r\n            )}\r\n          </Box>\r\n        </TableCell>\r\n      </TableRow>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nconst ReportTable = (props) => {\r\n  return (\r\n    <TableContainer hidden component={Paper}>\r\n      <Table id={props.id}>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell />\r\n            <TableCell>Full Name</TableCell>\r\n            <TableCell align=\"center\">Phone Number</TableCell>\r\n            {props.selectedHotspots.length === 0 &&\r\n              props.hotspotList.map((hotspot, index) => (\r\n                <TableCell key={hotspot._id} align=\"center\">\r\n                  {hotspot.hotspotName}\r\n                </TableCell>\r\n              ))}\r\n            {props.selectedHotspots.length !== 0 &&\r\n              props.selectedHotspots.map((hotspot, index) => (\r\n                <TableCell key={hotspot._id} align=\"center\">\r\n                  {hotspot.hotspotName}\r\n                </TableCell>\r\n              ))}\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {props.tableData.map((row) => (\r\n            <Row\r\n              key={row.phoneNumber}\r\n              row={row}\r\n              hotspotList={props.hotspotList}\r\n              selectedHotspots={props.selectedHotspots}\r\n              selectedGroups={props.selectedGroups}\r\n              selectedMonth={props.selectedMonth}\r\n            />\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  )\r\n}\r\n\r\nexport default React.memo(ReportTable)\r\n","import React, { useEffect, useState, useRef } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { Box, Button, CircularProgress, Backdrop } from '@mui/material'\r\nimport ReportTable from '../components/report/ReportTable'\r\nimport HotspotFilter from '../components/report/HotspotFilter'\r\nimport DeviceFilter from '../components/report/DeviceFilter'\r\nimport MonthFilter from '../components/report/MonthFilter'\r\nimport GroupFilter from '../components/report/GroupFilter'\r\nimport axios from 'axios'\r\nimport { API_SERVICE } from '../URI'\r\nimport ReactHTMLTableToExcel from 'react-html-table-to-excel'\r\nimport { useNavigate } from 'react-router'\r\nimport { useSubscription } from '../hooks/useSubscription'\r\nimport { getSubscriptionDetails } from '../utils/getSubscriptionDetails'\r\nimport HiddenReportTable from '../components/report/HiddenReportTable'\r\n\r\nconst Months = [\r\n    'January',\r\n    'February',\r\n    'March',\r\n    'April',\r\n    'May',\r\n    'June',\r\n    'July',\r\n    'August',\r\n    'September',\r\n    'October',\r\n    'November',\r\n    'December',\r\n]\r\n\r\nconst Report = () => {\r\n    const [tableData, setTableData] = useState([])\r\n\r\n    const [selectedHotspotNames, setSelectedHotspotNames] = useState([])\r\n    const [selectedGroups, setSelectedGroups] = useState([])\r\n    const [selectedHotspots, setSelectedHotspots] = useState([])\r\n    const [selectedDevices, setSelectedDevices] = useState([])\r\n    const [selectedMonth, setSelectedMonth] = useState(\r\n        Months[new Date().getMonth()]\r\n    )\r\n    const [loading, setLoading] = useState(false)\r\n    const [filteredData, setFilteredData] = useState([])\r\n\r\n    // subscription state\r\n    const [subscription, setSubscription] = useState(null)\r\n\r\n    const userData = sessionStorage.getItem('userData')\r\n        ? JSON.parse(sessionStorage.getItem('userData'))\r\n        : null\r\n\r\n    const devices = useSelector((state) => state.devices)\r\n    const { deviceList } = devices\r\n\r\n    const groups = useSelector((state) => state.groups)\r\n    const { groupList } = groups\r\n    const hotspots = useSelector((state) => state.hotspots)\r\n    const { hotspotList } = hotspots\r\n\r\n    const { state } = useSubscription()\r\n\r\n    const navigate = useNavigate()\r\n\r\n    useEffect(() => {\r\n        const authToken = sessionStorage.getItem('authToken')\r\n\r\n        if (!authToken) {\r\n            navigate('/login')\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (userData !== null) {\r\n            setLoading(true)\r\n            const fetchData = async () => {\r\n                const { data } = await axios.get(\r\n                    `${API_SERVICE}/get/attendance/${userData.uid}/${\r\n                        Months.indexOf(selectedMonth) + 1\r\n                    }`\r\n                )\r\n\r\n                console.log(data)\r\n                setTableData(data)\r\n                setLoading(false)\r\n            }\r\n\r\n            fetchData()\r\n        }\r\n    }, [selectedMonth])\r\n\r\n    useEffect(() => {\r\n        const fetchSubDetail = async () => {\r\n            const details = await getSubscriptionDetails(state)\r\n            setSubscription(details)\r\n        }\r\n\r\n        fetchSubDetail()\r\n    }, [])\r\n\r\n    // handling hotspot selection\r\n    const handleHotspotSelect = async (event) => {\r\n        const {\r\n            target: { value },\r\n        } = event\r\n        setSelectedHotspotNames(\r\n            typeof value === 'string' ? value.split(',') : value\r\n        )\r\n    }\r\n\r\n    // handling group selection\r\n    const handleGroupSelect = async (event) => {\r\n        const {\r\n            target: { value },\r\n        } = event\r\n        setSelectedGroups(typeof value === 'string' ? value.split(',') : value)\r\n    }\r\n\r\n    // handling device selection\r\n    const handleSelectedDevice = (event) => {\r\n        const {\r\n            target: { value },\r\n        } = event\r\n        setSelectedDevices(typeof value === 'string' ? value.split(',') : value)\r\n    }\r\n\r\n    // applying filter\r\n    useEffect(async () => {\r\n        setLoading(true)\r\n        let hotspots = []\r\n        if (selectedHotspotNames.length !== 0) {\r\n            selectedHotspotNames.forEach((x) => {\r\n                const temp = hotspotList\r\n                const filterArr = temp.filter((item) => item._id === x)\r\n                hotspots.push(...filterArr)\r\n            })\r\n        } else {\r\n            hotspots = hotspotList\r\n        }\r\n\r\n        setSelectedHotspots(hotspots)\r\n        let devices = []\r\n        if (selectedDevices.length !== 0) {\r\n            const temp = tableData\r\n            selectedDevices.forEach((x, i) => {\r\n                const number = x.split(' - ')[1]\r\n                const filterArr = temp.filter(\r\n                    (item) => item.phoneNumber === number\r\n                )\r\n                devices.push(...filterArr)\r\n            })\r\n        } else {\r\n            devices = tableData\r\n        }\r\n\r\n        setFilteredData(devices)\r\n\r\n        setLoading(false)\r\n    }, [selectedDevices, selectedHotspotNames])\r\n\r\n    return (\r\n        <Box sx={{ p: 5 }}>\r\n            <Box\r\n                sx={{\r\n                    display: 'flex',\r\n                    justifyContent: 'flex-end',\r\n                    gap: 2,\r\n                    mt: 4,\r\n                }}\r\n            >\r\n                <MonthFilter\r\n                    Months={Months}\r\n                    selectedMonth={selectedMonth}\r\n                    setSelectedMonth={setSelectedMonth}\r\n                    subscription={subscription}\r\n                />\r\n\r\n                <HotspotFilter\r\n                    handleHotspotSelect={handleHotspotSelect}\r\n                    selectedHotspotNames={selectedHotspotNames}\r\n                    hotspotNames={hotspotList}\r\n                />\r\n\r\n                <GroupFilter\r\n                    handleGroupSelect={handleGroupSelect}\r\n                    selectedGroupNames={selectedGroups}\r\n                    groupNames={groupList}\r\n                />\r\n\r\n                <DeviceFilter\r\n                    handleSelectedDevice={handleSelectedDevice}\r\n                    selectedDevices={selectedDevices}\r\n                    mobileDevices={deviceList}\r\n                />\r\n\r\n                <Button variant='outlined' sx={{ p: 0 }}>\r\n                    <ReactHTMLTableToExcel\r\n                        id='test-table-xls-button'\r\n                        table='table-to-xls'\r\n                        filename='report'\r\n                        sheet='tablexls'\r\n                        className='export-btn'\r\n                        buttonText='Export'\r\n                    />\r\n                </Button>\r\n            </Box>\r\n\r\n            <Box sx={{ my: 4 }}>\r\n                {!loading ? (\r\n                    <ReportTable\r\n                        tableData={\r\n                            selectedDevices.length === 0\r\n                                ? tableData\r\n                                : filteredData\r\n                        }\r\n                        id='table-to-xls'\r\n                        hotspotList={hotspotList}\r\n                        selectedHotspots={selectedHotspots}\r\n                        selectedGroups={selectedGroups}\r\n                        selectedMonth={Months.indexOf(selectedMonth)}\r\n                    />\r\n                ) : (\r\n                    <Box\r\n                        sx={{\r\n                            display: 'flex',\r\n                            justifyContent: 'center',\r\n                            mt: '300px',\r\n                        }}\r\n                    >\r\n                        <CircularProgress color='inherit' />\r\n                    </Box>\r\n                )}\r\n            </Box>\r\n            <Box sx={{ my: 4 }}>\r\n                {!loading ? (\r\n                    <HiddenReportTable\r\n                        tableData={\r\n                            selectedDevices.length === 0\r\n                                ? tableData\r\n                                : filteredData\r\n                        }\r\n                        id='table-to-xls'\r\n                        hotspotList={hotspotList}\r\n                        selectedHotspots={selectedHotspots}\r\n                        selectedGroups={selectedGroups}\r\n                        selectedMonth={Months.indexOf(selectedMonth)}\r\n                    />\r\n                ) : (\r\n                    <Box\r\n                        sx={{\r\n                            display: 'flex',\r\n                            justifyContent: 'center',\r\n                            mt: '300px',\r\n                        }}\r\n                    >\r\n                        <CircularProgress color='inherit' />\r\n                    </Box>\r\n                )}\r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Report\r\n","import React, { useState, useEffect } from 'react'\r\nimport {\r\n    Paper,\r\n    Box,\r\n    List,\r\n    ListItem,\r\n    Avatar,\r\n    ListItemAvatar,\r\n    ListItemText,\r\n    Stack,\r\n    Typography,\r\n    FormControl,\r\n    InputLabel,\r\n    Select,\r\n    MenuItem,\r\n    Divider,\r\n} from '@mui/material'\r\nimport { Image } from '@mui/icons-material'\r\n//import { firestore } from '../Firebase/index'\r\nimport { db } from '../Firebase/index'\r\nimport { onSnapshot, doc, query, orderBy } from 'firebase/firestore'\r\nimport moment from 'moment'\r\n\r\nconst Notification = () => {\r\n    const [filter, setFilter] = useState('All')\r\n    const [notificationList, setNotificationList] = useState([])\r\n    const [filterList, setFilterList] = useState([])\r\n\r\n    const userData = sessionStorage.getItem('userData')\r\n        ? JSON.parse(sessionStorage.getItem('userData'))\r\n        : null\r\n\r\n    const handleFilterChange = (event) => {\r\n        setFilter(event.target.value)\r\n    }\r\n\r\n    const getTime = (sec) => {\r\n        const str = moment(new Date(sec * 1000)).fromNow()\r\n\r\n        switch (str) {\r\n            case 'in a few seconds':\r\n                return 'few sec'\r\n            case 'a few seconds ago':\r\n                return 'few sec'\r\n            case 'a minute ago':\r\n                return '1m'\r\n            case 'an hour ago':\r\n                return '1h'\r\n            case 'a day ago':\r\n                return '1day'\r\n            default:\r\n                const first = str.split(' ')[0]\r\n                let mid = str.split(' ')[1]\r\n                if (mid === 'minutes' || mid === 'minute') {\r\n                    mid = 'm'\r\n                }\r\n                if (mid === 'hours' || mid === 'hour') {\r\n                    mid = 'h'\r\n                }\r\n                if (mid === 'days' || mid === 'day') {\r\n                    mid = 'd'\r\n                }\r\n                return first + mid\r\n        }\r\n    }\r\n\r\n    // useEffect(async () => {\r\n    //   const notificationRef = doc(db, 'trackingWebNotification', userData.uid)\r\n\r\n    //   const unsub = onSnapshot(notificationRef, (snap) => {\r\n    //     if (snap.exists()) {\r\n    //       const data = snap.data()\r\n    //       if (data.notificationList !== undefined) {\r\n    //         const list = data.notificationList\r\n    //         list.sort((a, b) => {\r\n    //           return new Date(b.createdAt.seconds) - new Date(a.createdAt.seconds)\r\n    //         })\r\n    //         setNotificationList(list)\r\n    //       }\r\n    //     }\r\n    //   })\r\n\r\n    //   return () => unsub()\r\n    // }, [])\r\n\r\n    useEffect(() => {\r\n        const temp = notificationList\r\n        const currDate = new Date().getTime()\r\n        let filterArr = []\r\n\r\n        if (filter === 'Today') {\r\n            filterArr = temp.filter(\r\n                (x) =>\r\n                    new Date(x.createdAt.seconds * 1000).getDate() ===\r\n                    new Date(currDate).getDate()\r\n            )\r\n        } else if (filter === 'Last Week') {\r\n            let start = new Date(currDate).getDate() - 7\r\n            if (start <= 0) {\r\n                start = 30 + start\r\n            }\r\n            const end = new Date(currDate).getDate()\r\n\r\n            console.log(start, end)\r\n\r\n            filterArr = temp.filter(\r\n                (x) =>\r\n                    new Date(x.createdAt.seconds * 1000).getDate() >= start ||\r\n                    new Date(x.createdAt.seconds * 1000).getDate() <= end\r\n            )\r\n        } else {\r\n            filterArr = temp\r\n        }\r\n\r\n        setFilterList(filterArr)\r\n    }, [filter])\r\n\r\n    return (\r\n        <Box sx={{ display: 'flex', justifyContent: 'center', m: 4 }}>\r\n            <Paper\r\n                sx={{\r\n                    width: { md: '70%', lg: '60%', xl: '50%' },\r\n                    p: 2,\r\n                    borderRadius: 5,\r\n                    boxShadow: 5,\r\n                }}\r\n            >\r\n                <Stack\r\n                    direction='row'\r\n                    justifyContent='space-between'\r\n                    sx={{ p: 2 }}\r\n                >\r\n                    <Box\r\n                        sx={{\r\n                            display: 'flex',\r\n                            flexDirection: 'row',\r\n                            justifyContent: 'space-between',\r\n                            alignItems: 'center',\r\n                            width: '100%',\r\n                        }}\r\n                    >\r\n                        <Box>\r\n                            <Typography variant='h3'>Notifications</Typography>\r\n                        </Box>\r\n                        <Stack direction='row' alignItems='center'>\r\n                            <Typography variant='h4'>Filter By</Typography>\r\n                            <FormControl\r\n                                variant='outlined'\r\n                                sx={{ width: 250, ml: 3 }}\r\n                            >\r\n                                <InputLabel>Select Filter</InputLabel>\r\n                                <Select\r\n                                    value={filter}\r\n                                    onChange={handleFilterChange}\r\n                                    label='Select Filter'\r\n                                >\r\n                                    <MenuItem value={'All'}>All</MenuItem>\r\n                                    <MenuItem value={'Today'}>Today</MenuItem>\r\n                                    <MenuItem value={'Last Week'}>\r\n                                        Last Week\r\n                                    </MenuItem>\r\n                                </Select>\r\n                            </FormControl>\r\n                        </Stack>\r\n                    </Box>\r\n                    {/* <Typography>mark all as read</Typography> */}\r\n                </Stack>\r\n                <List sx={{ padding: 2 }}>\r\n                    {filter === 'All' &&\r\n                        notificationList.map((x, i) => (\r\n                            <div key={++i}>\r\n                                <ListItem sx={{ mt: 1.5 }}>\r\n                                    <ListItemAvatar>\r\n                                        <Avatar>\r\n                                            <Image />\r\n                                        </Avatar>\r\n                                    </ListItemAvatar>\r\n                                    <ListItemText\r\n                                        primary={x.message}\r\n                                        secondary={\r\n                                            getTime(x.createdAt.seconds) +\r\n                                            ' ago'\r\n                                        }\r\n                                    />\r\n                                </ListItem>\r\n                                <Divider />\r\n                            </div>\r\n                        ))}\r\n\r\n                    {filter !== 'All' &&\r\n                        filterList.map((x, i) => (\r\n                            <div key={++i}>\r\n                                <ListItem sx={{ mt: 1.5 }}>\r\n                                    <ListItemAvatar>\r\n                                        <Avatar>\r\n                                            <Image />\r\n                                        </Avatar>\r\n                                    </ListItemAvatar>\r\n                                    <ListItemText\r\n                                        primary={x.message}\r\n                                        secondary={\r\n                                            getTime(x.createdAt.seconds) +\r\n                                            ' ago'\r\n                                        }\r\n                                    />\r\n                                </ListItem>\r\n                                <Divider />\r\n                            </div>\r\n                        ))}\r\n                </List>\r\n            </Paper>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Notification\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport {\r\n  Button,\r\n  Checkbox,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  FormControl,\r\n  InputLabel,\r\n  ListItemText,\r\n  MenuItem,\r\n  Select,\r\n  TextField,\r\n} from '@mui/material'\r\nimport { db } from '../../Firebase/index'\r\nimport { arrayRemove, arrayUnion, doc, updateDoc } from 'firebase/firestore'\r\nimport { updateDevice } from '../../store/actions/device'\r\n\r\nconst ITEM_HEIGHT = 48\r\nconst ITEM_PADDING_TOP = 8\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250,\r\n    },\r\n  },\r\n}\r\n\r\nconst EditDeviceDialog = (props) => {\r\n  const {\r\n    setEditDialogOpen,\r\n    editDialogOpen,\r\n    selectedDevice,\r\n    trackingGroups,\r\n    setSuccess,\r\n    setSnackOpen,\r\n    setError,\r\n  } = props\r\n\r\n  const [newFullName, setNewFullName] = useState('')\r\n  // const [newDeviceGroup, setNewDeviceGroup] = useState([])\r\n  const [selectedGroups, setSelectedGroups] = useState([])\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const handleChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event\r\n    setSelectedGroups(typeof value === 'string' ? value.split(',') : value)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (Object.entries(selectedDevice).length !== 0) {\r\n      setNewFullName(selectedDevice.fullName)\r\n      const groups = selectedDevice.groups\r\n\r\n      const arr = []\r\n      groups.forEach((x) => arr.push(x._id))\r\n      setSelectedGroups(arr)\r\n    }\r\n  }, [selectedDevice])\r\n\r\n  // useEffect(() => {\r\n  //   const arr = []\r\n  //   selectedGroups.forEach((x) => {\r\n  //     const d = trackingGroups.filter((item) => item.id === x)[0]\r\n  //     const data = {\r\n  //       groupName: d.groupName,\r\n  //       id: d.id,\r\n  //     }\r\n  //     arr.push(data)\r\n  //   })\r\n\r\n  //   setNewDeviceGroup(arr)\r\n  // }, [selectedGroups])\r\n\r\n  const updateDetails = () => {\r\n    if (newFullName.length === 0) {\r\n      setError('Full name is required')\r\n      setSnackOpen(true)\r\n      return\r\n    }\r\n    const body = {\r\n      _id: selectedDevice._id,\r\n      fullName: newFullName,\r\n      groups: selectedGroups,\r\n    }\r\n\r\n    dispatch(updateDevice(body))\r\n    setNewFullName('')\r\n    setSelectedGroups([])\r\n    setEditDialogOpen(false)\r\n  }\r\n\r\n  // const updateDevice = () => {\r\n  //   const deviceRef = doc(db, 'trackingUsers', selectedDevice.id)\r\n  //   console.log('Here 1')\r\n  //   updateDoc(deviceRef, {\r\n  //     fullName: newFullName,\r\n  //     deviceGroups: newDeviceGroup,\r\n  //     groupId: selectedGroups,\r\n  //   })\r\n  //     .then(() => {\r\n  //       selectedDevice.deviceGroups.forEach(({ id }) => {\r\n  //         const groupRef = doc(db, 'trackingGroups', id)\r\n  //         updateDoc(groupRef, {\r\n  //           members: arrayRemove(selectedDevice.phoneNumber),\r\n  //         }).catch((error) => console.log(error))\r\n  //       })\r\n  //       console.log('Here')\r\n  //       selectedGroups.forEach((id) => {\r\n  //         const groupRef = doc(db, 'trackingGroups', id)\r\n  //         updateDoc(groupRef, {\r\n  //           members: arrayRemove(selectedDevice.phoneNumber),\r\n  //         }).catch((error) => console.log(error))\r\n  //         updateDoc(groupRef, {\r\n  //           members: arrayUnion(selectedDevice.phoneNumber),\r\n  //         }).catch((error) => console.log(error))\r\n  //       })\r\n  //     })\r\n  //     .then(() => {\r\n  //       setSuccess('Details Updated Successfully')\r\n  //       setSnackOpen(true)\r\n  //       setEditDialogOpen(false)\r\n  //     })\r\n  //     .catch((error) => {\r\n  //       setError(error.message)\r\n  //       setSnackOpen(true)\r\n  //     })\r\n  // }\r\n\r\n  return (\r\n    <Dialog open={editDialogOpen} onClose={() => setEditDialogOpen(false)}>\r\n      <DialogTitle sx={{ fontSize: 22 }}>Edit Device</DialogTitle>\r\n      <DialogContent sx={{ width: 500 }}>\r\n        <TextField\r\n          autoFocus\r\n          margin=\"dense\"\r\n          id=\"name\"\r\n          label=\"Full Name\"\r\n          type=\"text\"\r\n          fullWidth\r\n          variant=\"outlined\"\r\n          value={newFullName}\r\n          onChange={(e) => setNewFullName(e.target.value)}\r\n        />\r\n        <FormControl margin=\"normal\" fullWidth variant=\"outlined\">\r\n          <InputLabel id=\"device-group\">Select Group</InputLabel>\r\n          <Select\r\n            labelId=\"device-group\"\r\n            label=\"Select Group\"\r\n            value={selectedGroups}\r\n            onChange={handleChange}\r\n            multiple\r\n            renderValue={(selected) => selected.join(', ')}\r\n            MenuProps={MenuProps}\r\n          >\r\n            {trackingGroups.map((item) => (\r\n              <MenuItem key={item._id} value={item._id}>\r\n                <Checkbox checked={selectedGroups.indexOf(item._id) > -1} />\r\n                <ListItemText primary={item.groupName} />\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={() => setEditDialogOpen(false)}>Cancel</Button>\r\n        <Button onClick={() => updateDetails()}>Save Changes</Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n}\r\n\r\nexport default EditDeviceDialog\r\n","import React, { useEffect, useState } from 'react'\r\nimport {\r\n  Box,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Paper,\r\n  Typography,\r\n  IconButton,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  Button,\r\n  Chip,\r\n  DialogActions,\r\n  DialogContent,\r\n  Dialog,\r\n  DialogTitle,\r\n} from '@mui/material'\r\nimport DeleteIcon from '@mui/icons-material/Delete'\r\nimport Create from '@mui/icons-material/Create'\r\nimport { db } from '../../Firebase/index'\r\nimport {\r\n  arrayRemove,\r\n  collection,\r\n  deleteDoc,\r\n  doc,\r\n  onSnapshot,\r\n  query,\r\n  setDoc,\r\n  updateDoc,\r\n  where,\r\n} from 'firebase/firestore'\r\nimport TimeRangePicker from '@wojtekmaj/react-timerange-picker'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { deleteDevice } from '../../store/actions/device'\r\n\r\nconst DeviceSetting = (props) => {\r\n  const { success, error, open, toggleEditDeviceDialog } = props\r\n\r\n  const [deviceData, setDeviceData] = useState([])\r\n\r\n  const userData = sessionStorage.getItem('userData')\r\n    ? JSON.parse(sessionStorage.getItem('userData'))\r\n    : null\r\n\r\n  const adminData = sessionStorage.getItem('adminData')\r\n    ? JSON.parse(sessionStorage.getItem('adminData'))\r\n    : null\r\n\r\n  const devices = useSelector((state) => state.devices)\r\n  const { deviceList } = devices\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  // useEffect(async () => {\r\n  //   if (userData !== null) {\r\n  //     const deviceRef = collection(db, 'trackingUsers')\r\n  //     let q\r\n  //     if (adminData !== null) {\r\n  //       q = query(\r\n  //         deviceRef,\r\n  //         where('senderId', '==', userData.uid),\r\n  //         where('groupId', 'array-contains-any', adminData.groupId),\r\n  //       )\r\n  //     } else {\r\n  //       q = query(deviceRef, where('senderId', '==', userData.uid))\r\n  //     }\r\n\r\n  //     const unsub = onSnapshot(q, (snapshot) => {\r\n  //       const devices = []\r\n  //       snapshot.forEach((snap) => {\r\n  //         devices.push({ ...snap.data(), id: snap.id })\r\n  //       })\r\n  //       setDeviceData(devices)\r\n  //     })\r\n\r\n  //     return () => unsub()\r\n  //   }\r\n  // }, [])\r\n\r\n  const removeDevice = (data) => {\r\n    dispatch(deleteDevice(data._id))\r\n  }\r\n\r\n  // const deleteDevice = async (item) => {\r\n  //   const requestRef = doc(db, 'trackingRequest', item.phoneNumber)\r\n  //   await deleteDoc(requestRef)\r\n  //     .then(() => {\r\n  //       item.deviceGroups.forEach(({ id }) => {\r\n  //         const groupRef = doc(db, 'trackingGroups', id)\r\n  //         updateDoc(groupRef, {\r\n  //           members: arrayRemove(item.phoneNumber),\r\n  //         }).catch((error) => console.log(error))\r\n  //       })\r\n  //     })\r\n  //     .then(async () => {\r\n  //       const deviceRef = doc(db, 'trackingUsers', item.id)\r\n  //       await deleteDoc(deviceRef)\r\n  //         .then(() => {\r\n  //           success('Device Deleted Successfully')\r\n  //           open(true)\r\n  //         })\r\n  //         .catch((err) => {\r\n  //           error(err.message)\r\n  //           open(true)\r\n  //         })\r\n  //     })\r\n  //     .catch((err) => console.log(err.message))\r\n  // }\r\n\r\n  return (\r\n    <Box>\r\n      <TableContainer component={Paper} sx={{ boxShadow: 6 }}>\r\n        <Table sx={{ minWidth: 650 }}>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Name</TableCell>\r\n              <TableCell align=\"center\">Mobile Number</TableCell>\r\n              <TableCell align=\"center\">Groups Added</TableCell>\r\n              <TableCell align=\"center\">Tracking Status</TableCell>\r\n              <TableCell align=\"center\">Action</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {deviceList.map((data) => (\r\n              <TableRow\r\n                key={data._id}\r\n                sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n              >\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                  {data.fullName}\r\n                </TableCell>\r\n                <TableCell align=\"center\">{data.phoneNumber}</TableCell>\r\n                {data.groups.length === 0 ? (\r\n                  <TableCell align=\"center\">--</TableCell>\r\n                ) : (\r\n                  <TableCell align=\"center\">\r\n                    {data.groups.map((x, i) => (\r\n                      <>\r\n                        {x.groupName}\r\n                        {i !== data.groups.length - 1 && <>{' ,'}</>}\r\n                      </>\r\n                    ))}\r\n                  </TableCell>\r\n                )}\r\n\r\n                <TableCell align=\"center\">\r\n                  {data.trackingStatus === 'accepted' && (\r\n                    <Chip label=\"Accepted\" color=\"success\" />\r\n                  )}\r\n                  {data.trackingStatus === 'rejected' && (\r\n                    <Chip label=\"Rejected\" color=\"error\" />\r\n                  )}\r\n                  {data.trackingStatus === 'pending' && (\r\n                    <Chip label=\"Pending\" color=\"warning\" />\r\n                  )}\r\n                </TableCell>\r\n                <TableCell align=\"center\" sx={{ p: 0 }}>\r\n                  <IconButton\r\n                    edge=\"end\"\r\n                    aria-label=\"edit\"\r\n                    color=\"primary\"\r\n                    onClick={() => toggleEditDeviceDialog(data)}\r\n                  >\r\n                    <Create />\r\n                  </IconButton>\r\n                  <IconButton color=\"error\" onClick={() => removeDevice(data)}>\r\n                    <DeleteIcon />\r\n                  </IconButton>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default React.memo(DeviceSetting)\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport {\r\n    Box,\r\n    TextField,\r\n    Button,\r\n    Snackbar,\r\n    Alert,\r\n    FormControl,\r\n    InputLabel,\r\n    Select,\r\n    MenuItem,\r\n    ListItemText,\r\n    Dialog,\r\n    DialogTitle,\r\n    DialogContent,\r\n    DialogActions,\r\n    Checkbox,\r\n} from '@mui/material'\r\nimport { makeStyles } from '@mui/styles'\r\n\r\nimport { db } from '../Firebase/index'\r\nimport {\r\n    addDoc,\r\n    collection,\r\n    onSnapshot,\r\n    query,\r\n    where,\r\n    Timestamp,\r\n} from 'firebase/firestore'\r\nimport EditDeviceDialog from '../components/devices/EditDeviceDialog'\r\nimport DeviceTable from '../components/devices/DeviceTable'\r\nimport {\r\n    createDevice,\r\n    getDevices,\r\n    getAdminDevices,\r\n} from '../store/actions/device'\r\n\r\nimport axios from 'axios'\r\nimport { API_SERVICE } from '../URI'\r\nimport { useNavigate } from 'react-router'\r\nimport { useSubscription } from '../hooks/useSubscription'\r\nimport { getSubscriptionDetails } from '../utils/getSubscriptionDetails'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    form: {\r\n        width: '100%',\r\n        marginTop: theme.spacing(1),\r\n    },\r\n}))\r\n\r\nconst ITEM_HEIGHT = 48\r\nconst ITEM_PADDING_TOP = 8\r\nconst MenuProps = {\r\n    PaperProps: {\r\n        style: {\r\n            maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n            width: 250,\r\n        },\r\n    },\r\n}\r\n\r\nconst ManageMobileDevices = () => {\r\n    const classes = useStyles()\r\n\r\n    const userData = sessionStorage.getItem('userData')\r\n        ? JSON.parse(sessionStorage.getItem('userData'))\r\n        : null\r\n\r\n    const adminData = sessionStorage.getItem('adminData')\r\n        ? JSON.parse(sessionStorage.getItem('adminData'))\r\n        : null\r\n\r\n    // adding new device states\r\n    const [fullName, setFullName] = useState('')\r\n    const [phoneNumber, setPhoneNumber] = useState('')\r\n    const [selectedGroups, setSelectedGroups] = useState([])\r\n    // added devices section states\r\n    const [editDialogOpen, setEditDialogOpen] = useState(false)\r\n    const [selectedDevice, setSelectedDevice] = useState({})\r\n    const [addDeviceDialog, setAddDeviceDialog] = useState(false)\r\n    const [scheduleDialog, setScheduleDialog] = useState(false)\r\n    // snackbar states\r\n    const [snackOpen, setSnackOpen] = useState(false)\r\n    const [successMsg, setSuccess] = useState(null)\r\n    const [errorMsg, setError] = useState(null)\r\n    // subscription state\r\n    const [subscription, setSubscription] = useState(null)\r\n\r\n    const dispatch = useDispatch()\r\n    const groups = useSelector((state) => state.groups)\r\n    const { groupList } = groups\r\n\r\n    const devices = useSelector((state) => state.devices)\r\n    const { success, error, deviceList } = devices\r\n\r\n    const navigate = useNavigate()\r\n    const { state } = useSubscription()\r\n\r\n    useEffect(() => {\r\n        const authToken = sessionStorage.getItem('authToken')\r\n\r\n        if (!authToken) {\r\n            navigate('/login')\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        const fetchSubDetail = async () => {\r\n            const details = await getSubscriptionDetails(state)\r\n            setSubscription(details)\r\n        }\r\n\r\n        fetchSubDetail()\r\n    }, [])\r\n\r\n    useEffect(async () => {\r\n        if (adminData === null && userData !== null) {\r\n            dispatch(getDevices(userData.uid))\r\n        }\r\n        if (adminData !== null && userData !== null) {\r\n            const { data } = await axios.get(\r\n                `${API_SERVICE}/get/admin/${adminData.email}`\r\n            )\r\n            dispatch(\r\n                getAdminDevices({\r\n                    createdBy: userData.uid,\r\n                    adminGroups: data.groups,\r\n                })\r\n            )\r\n        }\r\n    }, [dispatch])\r\n\r\n    useEffect(() => {\r\n        if (success) {\r\n            setSuccess(success)\r\n            setSnackOpen(true)\r\n        }\r\n        if (error !== undefined) {\r\n            setError(error)\r\n            setSnackOpen(true)\r\n        }\r\n    }, [success, error])\r\n\r\n    useEffect(async () => {\r\n        if (success === 'Device added succssfully') {\r\n            if (phoneNumber.length !== 0) {\r\n                await sendTrackingRequest()\r\n                await sendNotificationToDevice()\r\n            }\r\n\r\n            setPhoneNumber('')\r\n            setSelectedGroups([])\r\n            setFullName('')\r\n            setAddDeviceDialog(false)\r\n        }\r\n    }, [success])\r\n\r\n    const handleSnackClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return\r\n        }\r\n\r\n        setSnackOpen(false)\r\n        setError(null)\r\n        setSuccess(null)\r\n    }\r\n\r\n    // toggle edit devices dialog\r\n    const toggleEditDeviceDialog = (item) => {\r\n        if (editDialogOpen) {\r\n            setEditDialogOpen(false)\r\n        } else {\r\n            setSelectedDevice(item)\r\n            setEditDialogOpen(true)\r\n        }\r\n    }\r\n\r\n    const sendTrackingRequest = async () => {\r\n        const requestRef = collection(\r\n            db,\r\n            'trackingRequest',\r\n            phoneNumber,\r\n            'requests'\r\n        )\r\n        await addDoc(requestRef, {\r\n            requestStatus: 'pending',\r\n            companyName: userData.companyName,\r\n            recieverFullName: fullName,\r\n            sender: {\r\n                id: userData.uid,\r\n                profilePhoto: userData.profilePhoto,\r\n            },\r\n            createdAt: Timestamp.now(),\r\n        }).catch((error) => console.log(error))\r\n    }\r\n\r\n    const sendNotificationToDevice = async () => {\r\n        const androidRef = collection(\r\n            db,\r\n            'trackingAndroidNotification',\r\n            phoneNumber,\r\n            'notifications'\r\n        )\r\n        await addDoc(androidRef, {\r\n            message: `${userData.companyName} has send you a tracking request`,\r\n            status: 'pending',\r\n            sender: {\r\n                id: userData.uid,\r\n                profilePhoto: userData.profilePhoto,\r\n            },\r\n            createdAt: Timestamp.now(),\r\n            seen: false,\r\n        }).catch((error) => console.log(error))\r\n    }\r\n\r\n    const addNewDevice = async () => {\r\n        if (subscription === null) {\r\n            setError('You do not have any subscription. Please choose a plan')\r\n            setSnackOpen(true)\r\n            return\r\n        } else if (deviceList.length === subscription.deviceCount) {\r\n            setError(\r\n                'You have used your device quota. Please upgrade your subscription'\r\n            )\r\n            setSnackOpen(true)\r\n            return\r\n        } else if (phoneNumber.length === 0) {\r\n            setError('Phone number is required')\r\n            setSnackOpen(true)\r\n            return\r\n        } else if (!phoneNumber.startsWith('+')) {\r\n            setError('Please enter valid country code. example - +911234567890')\r\n            setSnackOpen(true)\r\n            return\r\n        } else if (fullName.length === 0) {\r\n            setError('Full name is required')\r\n            setSnackOpen(true)\r\n            return\r\n        }\r\n\r\n        const body = {\r\n            fullName,\r\n            phoneNumber,\r\n            groups: selectedGroups,\r\n            createdBy: userData.uid,\r\n            trackingStatus: 'pending',\r\n        }\r\n\r\n        dispatch(createDevice(body))\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n        const {\r\n            target: { value },\r\n        } = event\r\n        setSelectedGroups(typeof value === 'string' ? value.split(',') : value)\r\n    }\r\n\r\n    return (\r\n        <Box sx={{ width: '100%', p: 4 }}>\r\n            <h2>Manage Mobile Devices</h2>\r\n            <Box\r\n                sx={{\r\n                    width: '100%',\r\n                    display: 'flex',\r\n                    justifyContent: 'flex-end',\r\n                    flexDirection: 'row',\r\n                    gap: 2,\r\n                }}\r\n            >\r\n                <Button\r\n                    variant='contained'\r\n                    sx={{\r\n                        py: 1.2,\r\n                    }}\r\n                    onClick={() => setAddDeviceDialog(true)}\r\n                >\r\n                    Add New Device\r\n                </Button>\r\n            </Box>\r\n\r\n            <Box sx={{ mt: 5 }}>\r\n                <DeviceTable\r\n                    toggleEditDeviceDialog={toggleEditDeviceDialog}\r\n                    scheduleDialog={scheduleDialog}\r\n                    setScheduleDialog={setScheduleDialog}\r\n                />\r\n            </Box>\r\n\r\n            {/** Dialog for adding a new device */}\r\n            <Dialog\r\n                open={addDeviceDialog}\r\n                onClose={() => setAddDeviceDialog(false)}\r\n            >\r\n                <DialogTitle sx={{ fontSize: 22 }}>Add New Device</DialogTitle>\r\n                <DialogContent sx={{ width: 500 }}>\r\n                    <form className={classes.form} noValidate>\r\n                        <TextField\r\n                            variant='outlined'\r\n                            margin='normal'\r\n                            fullWidth\r\n                            id='fullName'\r\n                            label='Full Name'\r\n                            name='fullName'\r\n                            autoComplete='name'\r\n                            autoFocus\r\n                            value={fullName}\r\n                            onChange={(e) => setFullName(e.target.value)}\r\n                        />\r\n                        <TextField\r\n                            variant='outlined'\r\n                            margin='normal'\r\n                            fullWidth\r\n                            id='phoneNumber'\r\n                            label='Phone Number'\r\n                            placeholder='+911234567890'\r\n                            name='phoneNumber'\r\n                            value={phoneNumber}\r\n                            onChange={(e) => setPhoneNumber(e.target.value)}\r\n                        />\r\n\r\n                        <FormControl\r\n                            margin='normal'\r\n                            fullWidth\r\n                            variant='outlined'\r\n                        >\r\n                            <InputLabel id='device-group'>\r\n                                Select Group\r\n                            </InputLabel>\r\n                            <Select\r\n                                labelId='device-group'\r\n                                label='Select Group'\r\n                                value={selectedGroups}\r\n                                onChange={handleChange}\r\n                                multiple\r\n                                renderValue={(selected) => selected.join(', ')}\r\n                                MenuProps={MenuProps}\r\n                            >\r\n                                {groupList.map((item) => (\r\n                                    <MenuItem key={item._id} value={item._id}>\r\n                                        <Checkbox\r\n                                            checked={\r\n                                                selectedGroups.indexOf(\r\n                                                    item._id\r\n                                                ) > -1\r\n                                            }\r\n                                        />\r\n                                        <ListItemText\r\n                                            primary={item.groupName}\r\n                                        />\r\n                                    </MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </FormControl>\r\n                    </form>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => setAddDeviceDialog(false)}>\r\n                        Cancel\r\n                    </Button>\r\n                    <Button onClick={() => addNewDevice()}>Save Device</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            {/** Dialog for editing a device */}\r\n            <EditDeviceDialog\r\n                editDialogOpen={editDialogOpen}\r\n                setEditDialogOpen={setEditDialogOpen}\r\n                selectedDevice={selectedDevice}\r\n                trackingGroups={groupList}\r\n                setSuccess={setSuccess}\r\n                setError={setError}\r\n                setSnackOpen={setSnackOpen}\r\n            />\r\n\r\n            {successMsg && (\r\n                <Snackbar\r\n                    open={snackOpen}\r\n                    autoHideDuration={4000}\r\n                    onClose={handleSnackClose}\r\n                    anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n                >\r\n                    <Alert\r\n                        onClose={handleSnackClose}\r\n                        severity='success'\r\n                        sx={{ width: '100%' }}\r\n                        variant='filled'\r\n                    >\r\n                        {successMsg}\r\n                    </Alert>\r\n                </Snackbar>\r\n            )}\r\n            {errorMsg && (\r\n                <Snackbar\r\n                    open={snackOpen}\r\n                    autoHideDuration={4000}\r\n                    onClose={handleSnackClose}\r\n                    anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n                >\r\n                    <Alert\r\n                        onClose={handleSnackClose}\r\n                        severity='error'\r\n                        sx={{ width: '100%' }}\r\n                        variant='filled'\r\n                    >\r\n                        {errorMsg}\r\n                    </Alert>\r\n                </Snackbar>\r\n            )}\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default ManageMobileDevices\r\n","import React, { useState, useEffect, useRef, useCallback } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport {\r\n  Checkbox,\r\n  FormControl,\r\n  InputLabel,\r\n  ListItemText,\r\n  MenuItem,\r\n  Select,\r\n  TextField,\r\n  Dialog,\r\n  DialogContent,\r\n  DialogActions,\r\n  Button,\r\n} from '@mui/material'\r\nimport ReactMapGL, { Marker, Popup } from 'react-map-gl'\r\nimport Geocoder from 'react-map-gl-geocoder'\r\nimport 'react-map-gl-geocoder/dist/mapbox-gl-geocoder.css'\r\nimport axios from 'axios'\r\nimport { API_SERVICE, MAP_STYLE, MAP_TOKEN } from '../../URI'\r\nimport { arrayRemove, arrayUnion, doc, updateDoc } from 'firebase/firestore'\r\nimport { db } from '../../Firebase'\r\nimport { updateHotspot } from '../../store/actions/hotspot'\r\n\r\nconst ITEM_HEIGHT = 48\r\nconst ITEM_PADDING_TOP = 8\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250,\r\n    },\r\n  },\r\n}\r\n\r\nconst EditHotspotDialogForm = (props) => {\r\n  const { trackingGroups, setDialogOpen, open, selectedHotspot } = props\r\n\r\n  const mapRef = useRef()\r\n\r\n  const [hotspotName, setHotspotName] = useState('')\r\n  const [selectedGroups, setSelectedGroups] = useState([])\r\n  const [newGroups, setNewGroups] = useState([])\r\n  const [location, setLocation] = useState('')\r\n  const [lat, setlat] = useState(28.6077159025)\r\n  const [long, setlong] = useState(77.224249103)\r\n  const [zipCode, setZipCode] = useState(0)\r\n  const [viewport, setViewport] = useState({\r\n    width: '100%',\r\n    height: 400,\r\n    latitude: lat,\r\n    longitude: long,\r\n    zoom: 15,\r\n  })\r\n  const [isFetching, setIsFetching] = useState(false)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    if (Object.entries(selectedHotspot).length !== 0) {\r\n      setHotspotName(selectedHotspot.hotspotName)\r\n      const groups = selectedHotspot.groups\r\n\r\n      const arr = []\r\n      groups.forEach((x) => arr.push(x._id))\r\n      setSelectedGroups(arr)\r\n\r\n      getLatLong(\r\n        selectedHotspot.location.latitude,\r\n        selectedHotspot.location.longitude,\r\n      )\r\n      setViewport({\r\n        ...viewport,\r\n        latitude: selectedHotspot.location.latitude,\r\n        longitude: selectedHotspot.location.longitude,\r\n      })\r\n      setlat(selectedHotspot.location.latitude)\r\n      setlong(selectedHotspot.location.longitude)\r\n    }\r\n  }, [selectedHotspot])\r\n\r\n  const handleViewportChange = useCallback(\r\n    (newViewport) => setViewport(newViewport),\r\n    [],\r\n  )\r\n\r\n  const handleGeocoderViewportChange = useCallback((newViewport) => {\r\n    const geocoderDefaultOverrides = { transitionDuration: 1000 }\r\n\r\n    getLatLong(newViewport.latitude, newViewport.longitude)\r\n\r\n    return handleViewportChange({\r\n      ...newViewport,\r\n      ...geocoderDefaultOverrides,\r\n    })\r\n  }, [])\r\n\r\n  const getLatLong = async (latitude, longitude) => {\r\n    axios\r\n      .get(`${API_SERVICE}/getlatlong/${latitude}/${longitude}`)\r\n      .then((res) => {\r\n        setLocation(res.data.formattedAddress)\r\n        setZipCode(res.data.zipcode)\r\n        setIsFetching(false)\r\n      })\r\n      .catch((error) => {\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n  const handleChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event\r\n    setSelectedGroups(typeof value === 'string' ? value.split(',') : value)\r\n  }\r\n\r\n  const updateDetails = () => {\r\n    const body = {\r\n      _id: selectedHotspot._id,\r\n      hotspotName,\r\n      location: {\r\n        latitude: Number(lat.toPrecision(6)),\r\n        longitude: Number(long.toPrecision(6)),\r\n        zipCode,\r\n      },\r\n      groups: selectedGroups,\r\n    }\r\n    dispatch(updateHotspot(body))\r\n    setDialogOpen(false)\r\n  }\r\n\r\n  return (\r\n    <Dialog open={open} onClose={() => setDialogOpen(false)}>\r\n      <DialogContent sx={{ width: '1200' }}>\r\n        <form noValidate style={{ marginBottom: '20px' }}>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            fullWidth\r\n            id=\"hotspotName\"\r\n            label=\"Hotspot Name\"\r\n            name=\"hotspotName\"\r\n            autoFocus\r\n            value={hotspotName}\r\n            onChange={(e) => setHotspotName(e.target.value)}\r\n          />\r\n\r\n          <FormControl margin=\"normal\" fullWidth variant=\"outlined\">\r\n            <InputLabel id=\"device-group\">Select Group</InputLabel>\r\n            <Select\r\n              labelId=\"device-group\"\r\n              label=\"Select Group\"\r\n              value={selectedGroups}\r\n              onChange={handleChange}\r\n              multiple\r\n              renderValue={(selected) => selected.join(', ')}\r\n              MenuProps={MenuProps}\r\n            >\r\n              {trackingGroups.map((item) => (\r\n                <MenuItem key={item._id} value={item._id}>\r\n                  <Checkbox checked={selectedGroups.indexOf(item._id) > -1} />\r\n                  <ListItemText primary={item.groupName} />\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            fullWidth\r\n            id=\"location\"\r\n            label=\"Set Location\"\r\n            name=\"location\"\r\n            value={location}\r\n            onChange={(e) => {}}\r\n          />\r\n        </form>\r\n        <ReactMapGL\r\n          {...viewport}\r\n          ref={mapRef}\r\n          mapboxApiAccessToken={MAP_TOKEN}\r\n          mapStyle={MAP_STYLE}\r\n          onViewportChange={(nextViewport) => setViewport(nextViewport)}\r\n          onClick={async (e) => {\r\n            setlat(e.lngLat[1])\r\n            setlong(e.lngLat[0])\r\n            setIsFetching(true)\r\n            getLatLong(e.lngLat[1], e.lngLat[0])\r\n          }}\r\n        >\r\n          <Geocoder\r\n            mapRef={mapRef}\r\n            onViewportChange={handleGeocoderViewportChange}\r\n            mapboxApiAccessToken={MAP_TOKEN}\r\n            position=\"top-left\"\r\n            marker={true}\r\n            countries=\"IN\"\r\n            reverseGeocode={true}\r\n          />\r\n          <Marker key=\"1\" latitude={lat} longitude={long}>\r\n            <button className=\"marker-btn\">\r\n              <img\r\n                alt=\"Image\"\r\n                src=\"https://www.nbp.co.uk/Content/Images/uploaded/contact-branch-details.png\"\r\n              />\r\n            </button>\r\n          </Marker>\r\n        </ReactMapGL>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={() => setDialogOpen(false)}>Cancel</Button>\r\n        <Button disabled={isFetching} onClick={() => updateDetails()}>\r\n          Update\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n}\r\n\r\nexport default EditHotspotDialogForm\r\n","import React, { useEffect, useState } from 'react'\r\nimport {\r\n  Box,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Paper,\r\n  Typography,\r\n  IconButton,\r\n} from '@mui/material'\r\nimport DeleteIcon from '@mui/icons-material/Delete'\r\nimport Create from '@mui/icons-material/Create'\r\nimport { db } from '../../Firebase/index'\r\nimport {\r\n  collection,\r\n  getDocs,\r\n  query,\r\n  where,\r\n  deleteDoc,\r\n  doc,\r\n  updateDoc,\r\n  arrayRemove,\r\n  onSnapshot,\r\n} from 'firebase/firestore'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { deleteHotspot } from '../../store/actions/hotspot'\r\n\r\nconst HotspotSetting = (props) => {\r\n  const { open, success, error, toggleEditHotspotDialog } = props\r\n\r\n  //const [hotspots, setHotspots] = useState([])\r\n\r\n  const userData = sessionStorage.getItem('userData')\r\n    ? JSON.parse(sessionStorage.getItem('userData'))\r\n    : null\r\n\r\n  const adminData = sessionStorage.getItem('adminData')\r\n    ? JSON.parse(sessionStorage.getItem('adminData'))\r\n    : null\r\n\r\n  const dispatch = useDispatch()\r\n  const hotspots = useSelector((state) => state.hotspots)\r\n  const { hotspotList } = hotspots\r\n\r\n  //Get All Hotspots\r\n  // useEffect(() => {\r\n  //   const ref = collection(db, 'trackingHotspots')\r\n  //   let q\r\n  //   let unsub\r\n  //   if (adminData === null) {\r\n  //     q = query(ref, where('createdBy', '==', userData.uid))\r\n\r\n  //     unsub = onSnapshot(q, (snapshot) => {\r\n  //       const array = []\r\n  //       snapshot.forEach((document) => {\r\n  //         array.push({ ...document.data(), id: document.id })\r\n  //       })\r\n  //       setHotspots(array)\r\n  //     })\r\n  //   } else {\r\n  //     const array = []\r\n  //     adminData.groupId.forEach((x) => {\r\n  //       q = query(\r\n  //         ref,\r\n  //         where('createdBy', '==', userData.uid),\r\n  //         where('groupId', 'array-contains-any', adminData.groupId),\r\n  //       )\r\n  //       unsub = onSnapshot(q, (snapshot) => {\r\n  //         snapshot.forEach((document) => {\r\n  //           array.push({ ...document.data(), id: document.id })\r\n  //         })\r\n  //       })\r\n  //     })\r\n\r\n  //     setHotspots(array)\r\n  //   }\r\n  // }, [])\r\n\r\n  const removeHotspot = (hotspot) => {\r\n    dispatch(deleteHotspot(hotspot._id))\r\n  }\r\n\r\n  // const deleteHotspot = async (hotspot) => {\r\n  //   await deleteDoc(doc(db, 'trackingHotspots', hotspot.id))\r\n  //     .then(() => {\r\n  //       const groups = hotspot.groups\r\n\r\n  //       for (let group of groups) {\r\n  //         const ref = doc(db, 'trackingGroups', group.id)\r\n  //         updateDoc(ref, {\r\n  //           hotspot: arrayRemove({\r\n  //             hotspotName: hotspot.hotspotName,\r\n  //             id: hotspot.id,\r\n  //             zipCode: hotspot.location.zipCode,\r\n  //           }),\r\n  //         }).catch((err) => console.log(err))\r\n  //       }\r\n  //     })\r\n  //     .then(() => {\r\n  //       success('Hotspot Deleted Successfully !!')\r\n  //       open(true)\r\n  //     })\r\n  //     .catch((err) => {\r\n  //       console.log(err)\r\n  //     })\r\n  // }\r\n\r\n  return (\r\n    <Box>\r\n      <TableContainer component={Paper} sx={{ boxShadow: 6 }}>\r\n        <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Hotspot Name</TableCell>\r\n              <TableCell align=\"center\">Address (Zip Code)</TableCell>\r\n              <TableCell align=\"center\">Groups Added</TableCell>\r\n              <TableCell align=\"center\">Action</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {hotspotList.map((row) => (\r\n              <TableRow\r\n                key={row._id}\r\n                sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n              >\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                  {row.hotspotName}\r\n                </TableCell>\r\n                <TableCell align=\"center\">{row.location.zipCode}</TableCell>\r\n                <TableCell\r\n                  align=\"center\"\r\n                  sx={{ display: 'flex', justifyContent: 'center' }}\r\n                >\r\n                  {row.groups.length === 0 && <>---</>}\r\n                  {row.groups.map((x, i) => (\r\n                    <div key={i}>\r\n                      <Typography variant=\"p\" component=\"p\">\r\n                        {x.groupName}\r\n                        {i !== row.groups.length - 1 && <>{' ,'}</>}\r\n                      </Typography>\r\n                    </div>\r\n                  ))}\r\n                </TableCell>\r\n                <TableCell align=\"center\" sx={{ p: 0 }}>\r\n                  <IconButton\r\n                    edge=\"end\"\r\n                    aria-label=\"edit\"\r\n                    color=\"primary\"\r\n                    onClick={() => toggleEditHotspotDialog(row)}\r\n                    sx={{ mr: 0.2 }}\r\n                  >\r\n                    <Create />\r\n                  </IconButton>\r\n                  <IconButton color=\"error\" onClick={() => removeHotspot(row)}>\r\n                    <DeleteIcon />\r\n                  </IconButton>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default HotspotSetting\r\n","import React, { useEffect, useState, useRef, useCallback } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {\r\n    Box,\r\n    Grid,\r\n    TextField,\r\n    FormControl,\r\n    InputLabel,\r\n    Select,\r\n    MenuItem,\r\n    Button,\r\n    ListItemText,\r\n    Checkbox,\r\n    Snackbar,\r\n    Alert,\r\n    Dialog,\r\n    DialogTitle,\r\n    DialogContent,\r\n    DialogActions,\r\n} from '@mui/material'\r\nimport ReactMapGL, { Marker, Popup } from 'react-map-gl'\r\nimport EditHotspotDialogForm from '../components/hotspot/EditHotspotDialogForm'\r\nimport Geocoder from 'react-map-gl-geocoder'\r\nimport 'react-map-gl-geocoder/dist/mapbox-gl-geocoder.css'\r\nimport axios from 'axios'\r\nimport { API_SERVICE, MAP_STYLE, MAP_TOKEN } from '../URI'\r\nimport HotspotTable from '../components/hotspot/HotspotTable'\r\nimport {\r\n    createHotspot,\r\n    getHotspots,\r\n    getAdminHotspots,\r\n} from '../store/actions/hotspot'\r\nimport { getGroups } from '../store/actions/group'\r\nimport { useNavigate } from 'react-router'\r\nimport { useSubscription } from '../hooks/useSubscription'\r\nimport { getSubscriptionDetails } from '../utils/getSubscriptionDetails'\r\n\r\nconst ITEM_HEIGHT = 48\r\nconst ITEM_PADDING_TOP = 8\r\nconst MenuProps = {\r\n    PaperProps: {\r\n        style: {\r\n            maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n            width: 250,\r\n        },\r\n    },\r\n}\r\n\r\nconst ManageHotspots = () => {\r\n    const mapRef = useRef()\r\n    const [hotspotName, setHotspotName] = useState('')\r\n    const [selectedGroups, setSelectedGroups] = useState([])\r\n    // const [groups, setGroups] = useState([])\r\n    const [location, setLocation] = useState('')\r\n    const [lat, setlat] = useState(28.6077159025)\r\n    const [long, setlong] = useState(77.224249103)\r\n    const [zipCode, setZipCode] = useState(0)\r\n    const [viewport, setViewport] = useState({\r\n        width: '100%',\r\n        height: 400,\r\n        latitude: 28.6077159025,\r\n        longitude: 77.224249103,\r\n        zoom: 15,\r\n    })\r\n    const [selectedHotspot, setSelectedHotspot] = useState({})\r\n    const [dialogOpen, setDialogOpen] = useState(false)\r\n    const [addHotspotDialog, setAddHotspotDialog] = useState(false)\r\n    // snackbar states\r\n    const [snackOpen, setSnackOpen] = useState(false)\r\n    const [successMsg, setSuccessMsg] = useState(null)\r\n    const [errorMsg, setErrorMsg] = useState(null)\r\n    // map states\r\n    const [allViewport, setAllViewport] = useState({\r\n        width: '100%',\r\n        height: '100%',\r\n        latitude: 28.52,\r\n        longitude: 77.402,\r\n        zoom: 10,\r\n    })\r\n    const [load, setLoad] = useState(false)\r\n    const [selected, setSelected] = useState(false)\r\n    const [selectedLat, setSelectedLat] = useState(null)\r\n    const [selectedLong, setSelectedLong] = useState(null)\r\n    const [locationData, setLocationData] = useState({})\r\n\r\n    // subscription state\r\n    const [subscription, setSubscription] = useState(null)\r\n\r\n    const dispatch = useDispatch()\r\n    const hotspots = useSelector((state) => state.hotspots)\r\n    const { hotspotList, success, error } = hotspots\r\n    const groups = useSelector((state) => state.groups)\r\n    const { groupList } = groups\r\n\r\n    const userData = sessionStorage.getItem('userData')\r\n        ? JSON.parse(sessionStorage.getItem('userData'))\r\n        : null\r\n\r\n    const adminData = sessionStorage.getItem('adminData')\r\n        ? JSON.parse(sessionStorage.getItem('adminData'))\r\n        : null\r\n\r\n    const navigate = useNavigate()\r\n    const { state } = useSubscription()\r\n\r\n    useEffect(() => {\r\n        const authToken = sessionStorage.getItem('authToken')\r\n\r\n        if (!authToken) {\r\n            navigate('/login')\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        const fetchSubDetail = async () => {\r\n            const details = await getSubscriptionDetails(state)\r\n            setSubscription(details)\r\n        }\r\n\r\n        fetchSubDetail()\r\n    }, [])\r\n\r\n    useEffect(async () => {\r\n        if (userData !== null) {\r\n            dispatch(getGroups(userData?.uid))\r\n        }\r\n    }, [dispatch])\r\n\r\n    useEffect(() => {\r\n        if (success) {\r\n            setSuccessMsg(success)\r\n            setSnackOpen(true)\r\n        }\r\n\r\n        if (error) {\r\n            setErrorMsg(error)\r\n            setSnackOpen(true)\r\n        }\r\n    }, [success, error])\r\n\r\n    useEffect(async () => {\r\n        if (adminData === null && userData !== null) {\r\n            dispatch(getHotspots(userData.uid))\r\n        }\r\n        if (adminData !== null && userData !== null) {\r\n            const { data } = await axios.get(\r\n                `${API_SERVICE}/get/admin/${adminData.email}`\r\n            )\r\n            dispatch(\r\n                getAdminHotspots({\r\n                    createdBy: userData.uid,\r\n                    adminGroups: data.groups,\r\n                })\r\n            )\r\n        }\r\n    }, [dispatch])\r\n\r\n    useEffect(async () => {\r\n        setLoad(true)\r\n        axios\r\n            .get(`${API_SERVICE}/getlatlong/${selectedLat}/${selectedLong}`)\r\n            .then((response) => {\r\n                console.log(response)\r\n                setLocationData(response.data)\r\n                setLoad(false)\r\n            })\r\n            .catch((err) => console.log(err))\r\n    }, [selectedLat, selectedLong])\r\n\r\n    const handleViewportChange = useCallback(\r\n        (newViewport) => setViewport(newViewport),\r\n        []\r\n    )\r\n\r\n    const handleGeocoderViewportChange = useCallback((newViewport) => {\r\n        const geocoderDefaultOverrides = { transitionDuration: 1000 }\r\n\r\n        getLatLong(newViewport.latitude, newViewport.longitude)\r\n\r\n        return handleViewportChange({\r\n            ...newViewport,\r\n            ...geocoderDefaultOverrides,\r\n        })\r\n    }, [])\r\n\r\n    const handleSnackClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return\r\n        }\r\n\r\n        setSnackOpen(false)\r\n        setErrorMsg(null)\r\n        setSuccessMsg(null)\r\n    }\r\n\r\n    const getLatLong = async (latitude, longitude) => {\r\n        axios\r\n            .get(`${API_SERVICE}/getlatlong/${latitude}/${longitude}`)\r\n            .then((res) => {\r\n                setLocation(res.data.formattedAddress)\r\n                setZipCode(res.data.zipcode)\r\n            })\r\n            .catch((errorMsg) => {\r\n                console.log(errorMsg)\r\n            })\r\n    }\r\n\r\n    const saveHotspot = () => {\r\n        if (subscription === null) {\r\n            setErrorMsg(\r\n                'You do not have any subscription. Please choose a plan'\r\n            )\r\n            setSnackOpen(true)\r\n            return\r\n        } else if (hotspotList.length === subscription.hotspotCount) {\r\n            setErrorMsg(\r\n                'You have used your hotspot quota. Please upgrade your subscription'\r\n            )\r\n            setSnackOpen(true)\r\n            return\r\n        } else if (hotspotName.length < 3) {\r\n            setErrorMsg('Hotspot name must be atleast 3 characters')\r\n            setSnackOpen(true)\r\n            return\r\n        }\r\n\r\n        const body = {\r\n            hotspotName,\r\n            groups: selectedGroups,\r\n            createdBy: userData.uid,\r\n            location: {\r\n                latitude: Number(lat.toPrecision(6)),\r\n                longitude: Number(long.toPrecision(6)),\r\n                zipCode,\r\n            },\r\n        }\r\n\r\n        dispatch(createHotspot(body))\r\n        setAddHotspotDialog(false)\r\n        setHotspotName('')\r\n        setSelectedGroups([])\r\n        setLocation('')\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n        const {\r\n            target: { value },\r\n        } = event\r\n        setSelectedGroups(typeof value === 'string' ? value.split(',') : value)\r\n    }\r\n\r\n    const toggleEditHotspotDialog = (item) => {\r\n        if (dialogOpen) {\r\n            setDialogOpen(false)\r\n        } else {\r\n            setSelectedHotspot(item)\r\n            setDialogOpen(true)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Box sx={{ width: '100%', p: 4, height: '100%' }}>\r\n            <h2>Manage Hotspots</h2>\r\n\r\n            <Grid container spacing={2} sx={{ height: '100%' }}>\r\n                <Grid item xs={12} md={6}>\r\n                    <Box\r\n                        sx={{\r\n                            width: '100%',\r\n                            display: 'flex',\r\n                            justifyContent: 'flex-end',\r\n                            flexDirection: 'row',\r\n                            gap: 2,\r\n                        }}\r\n                    >\r\n                        <Button\r\n                            variant='contained'\r\n                            sx={{\r\n                                py: 1.2,\r\n                            }}\r\n                            onClick={() => setAddHotspotDialog(true)}\r\n                        >\r\n                            Add New Hotspot\r\n                        </Button>\r\n                    </Box>\r\n\r\n                    <Box sx={{ my: 5 }}>\r\n                        <HotspotTable\r\n                            successMsg={setSuccessMsg}\r\n                            errorMsg={setErrorMsg}\r\n                            open={setSnackOpen}\r\n                            toggleEditHotspotDialog={toggleEditHotspotDialog}\r\n                        />\r\n                    </Box>\r\n                </Grid>\r\n                <Grid item xs={12} md={6} sx={{ height: '100' }}>\r\n                    <ReactMapGL\r\n                        {...allViewport}\r\n                        mapboxApiAccessToken={MAP_TOKEN}\r\n                        mapStyle={MAP_STYLE}\r\n                        onViewportChange={(nextViewport) =>\r\n                            setAllViewport(nextViewport)\r\n                        }\r\n                    >\r\n                        {hotspotList.map((hotspot) => (\r\n                            <Marker\r\n                                key={hotspot._id}\r\n                                latitude={hotspot.location.latitude}\r\n                                longitude={hotspot.location.longitude}\r\n                            >\r\n                                <button\r\n                                    className='marker-btn'\r\n                                    onMouseEnter={(e) => {\r\n                                        e.preventDefault()\r\n                                        setSelected(true)\r\n                                        setSelectedLat(\r\n                                            hotspot.location.latitude\r\n                                        )\r\n                                        setSelectedLong(\r\n                                            hotspot.location.longitude\r\n                                        )\r\n                                    }}\r\n                                    onMouseLeave={(e) => {\r\n                                        e.preventDefault()\r\n                                        setSelected(false)\r\n                                    }}\r\n                                >\r\n                                    <img\r\n                                        alt='Image'\r\n                                        src='https://www.nbp.co.uk/Content/Images/uploaded/contact-branch-details.png'\r\n                                    />\r\n                                </button>\r\n                            </Marker>\r\n                        ))}\r\n                        {selected ? (\r\n                            <Popup\r\n                                latitude={selectedLat}\r\n                                longitude={selectedLong}\r\n                                onClose={() => {\r\n                                    setSelected(false)\r\n                                    setSelectedLat(0)\r\n                                    setSelectedLong(0)\r\n                                }}\r\n                            >\r\n                                <div>\r\n                                    {load ? (\r\n                                        <p>Fetching Location ...</p>\r\n                                    ) : (\r\n                                        <p>{locationData.formattedAddress}</p>\r\n                                    )}\r\n                                </div>\r\n                            </Popup>\r\n                        ) : null}\r\n                    </ReactMapGL>\r\n                </Grid>\r\n            </Grid>\r\n\r\n            <Dialog\r\n                open={addHotspotDialog}\r\n                onClose={() => setAddHotspotDialog(false)}\r\n            >\r\n                <DialogTitle sx={{ fontSize: 22 }}>Add New Hotspot</DialogTitle>\r\n                <DialogContent sx={{ width: 600 }}>\r\n                    <form noValidate style={{ marginBottom: '20px' }}>\r\n                        <TextField\r\n                            variant='outlined'\r\n                            margin='normal'\r\n                            fullWidth\r\n                            id='hotspotName'\r\n                            label='Hotspot Name'\r\n                            name='hotspotName'\r\n                            autoFocus\r\n                            value={hotspotName}\r\n                            onChange={(e) => setHotspotName(e.target.value)}\r\n                        />\r\n\r\n                        <FormControl\r\n                            margin='normal'\r\n                            fullWidth\r\n                            variant='outlined'\r\n                        >\r\n                            <InputLabel id='device-group'>\r\n                                Select Group\r\n                            </InputLabel>\r\n                            <Select\r\n                                labelId='device-group'\r\n                                label='Select Group'\r\n                                value={selectedGroups}\r\n                                onChange={handleChange}\r\n                                multiple\r\n                                renderValue={(selected) => selected.join(', ')}\r\n                                MenuProps={MenuProps}\r\n                            >\r\n                                {groupList.map((item) => (\r\n                                    <MenuItem key={item._id} value={item._id}>\r\n                                        <Checkbox\r\n                                            checked={\r\n                                                selectedGroups.indexOf(\r\n                                                    item._id\r\n                                                ) > -1\r\n                                            }\r\n                                        />\r\n                                        <ListItemText\r\n                                            primary={item.groupName}\r\n                                        />\r\n                                    </MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </FormControl>\r\n\r\n                        <TextField\r\n                            variant='outlined'\r\n                            margin='normal'\r\n                            fullWidth\r\n                            id='location'\r\n                            label='Set Location'\r\n                            name='location'\r\n                            value={location}\r\n                            onChange={(e) => {}}\r\n                        />\r\n                    </form>\r\n                    <ReactMapGL\r\n                        {...viewport}\r\n                        ref={mapRef}\r\n                        mapboxApiAccessToken={MAP_TOKEN}\r\n                        mapStyle={MAP_STYLE}\r\n                        onViewportChange={(nextViewport) =>\r\n                            setViewport(nextViewport)\r\n                        }\r\n                        onClick={async (e) => {\r\n                            setlat(e.lngLat[1])\r\n                            setlong(e.lngLat[0])\r\n                            getLatLong(e.lngLat[1], e.lngLat[0])\r\n                        }}\r\n                    >\r\n                        <Geocoder\r\n                            mapRef={mapRef}\r\n                            onViewportChange={handleGeocoderViewportChange}\r\n                            mapboxApiAccessToken={MAP_TOKEN}\r\n                            position='top-left'\r\n                            marker={true}\r\n                            countries='IN'\r\n                            reverseGeocode={true}\r\n                        />\r\n                        <Marker key='1' latitude={lat} longitude={long}>\r\n                            <button className='marker-btn'>\r\n                                <img\r\n                                    alt='Image'\r\n                                    src='https://www.nbp.co.uk/Content/Images/uploaded/contact-branch-details.png'\r\n                                />\r\n                            </button>\r\n                        </Marker>\r\n                    </ReactMapGL>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => setAddHotspotDialog(false)}>\r\n                        Cancel\r\n                    </Button>\r\n                    <Button onClick={() => saveHotspot()}>Save Hotspot</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            {/* Dialog to Edit the Hotspot */}\r\n            <EditHotspotDialogForm\r\n                open={dialogOpen}\r\n                setDialogOpen={setDialogOpen}\r\n                selectedHotspot={selectedHotspot}\r\n                trackingGroups={groupList}\r\n                setSnackOpen={setSnackOpen}\r\n                setSuccessMsg={setSuccessMsg}\r\n                setErrorMsg={setErrorMsg}\r\n            />\r\n\r\n            {successMsg !== null && (\r\n                <Snackbar\r\n                    open={snackOpen}\r\n                    autoHideDuration={4000}\r\n                    onClose={handleSnackClose}\r\n                    anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n                >\r\n                    <Alert\r\n                        onClose={handleSnackClose}\r\n                        severity='success'\r\n                        variant='filled'\r\n                        sx={{ width: '100%' }}\r\n                    >\r\n                        {successMsg}\r\n                    </Alert>\r\n                </Snackbar>\r\n            )}\r\n            {errorMsg !== null && (\r\n                <Snackbar\r\n                    open={snackOpen}\r\n                    autoHideDuration={4000}\r\n                    onClose={handleSnackClose}\r\n                    anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n                >\r\n                    <Alert\r\n                        onClose={handleSnackClose}\r\n                        severity='error'\r\n                        variant='filled'\r\n                        sx={{ width: '100%' }}\r\n                    >\r\n                        {errorMsg}\r\n                    </Alert>\r\n                </Snackbar>\r\n            )}\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default ManageHotspots\r\n","import React, { useState } from 'react'\r\nimport { TextField, Button, Box, CircularProgress } from '@mui/material'\r\nimport { makeStyles } from '@material-ui/styles'\r\nimport { auth } from '../../Firebase/index'\r\nimport {\r\n  updatePassword,\r\n  reauthenticateWithCredential,\r\n  EmailAuthProvider,\r\n} from 'firebase/auth'\r\n\r\nconst SecuritySetting = (props) => {\r\n  const { open, success, error } = props\r\n\r\n  const [currentPassword, setCurrentPassword] = useState('')\r\n  const [newPassword, setNewPassword] = useState('')\r\n\r\n  const [isUpdating, setIsUpdating] = useState(false)\r\n\r\n  const userData = sessionStorage.getItem('userData')\r\n    ? JSON.parse(sessionStorage.getItem('userData'))\r\n    : null\r\n\r\n  const update = async () => {\r\n    try {\r\n      setIsUpdating(true)\r\n      const user = auth.currentUser\r\n\r\n      const credential = EmailAuthProvider.credential(\r\n        userData.email,\r\n        currentPassword\r\n      )\r\n\r\n      reauthenticateWithCredential(user, credential)\r\n        .then(() => {\r\n          updatePassword(user, newPassword)\r\n            .then(() => {\r\n              success('Password updated successfully')\r\n              open(true)\r\n              setNewPassword('')\r\n              setCurrentPassword('')\r\n              setIsUpdating(false)\r\n            })\r\n            .catch((err) => {\r\n              const errorCode = err.code\r\n              const errorMessage = err.message\r\n              error(`${errorCode} ${errorMessage}`)\r\n              open(true)\r\n              setIsUpdating(false)\r\n            })\r\n        })\r\n        .catch((err) => {\r\n          const errorCode = err.code\r\n          const errorMessage = err.message\r\n          error(`${errorCode} ${errorMessage}`)\r\n          open(true)\r\n          setIsUpdating(false)\r\n        })\r\n    } catch (err) {\r\n      error(err)\r\n      open(true)\r\n      setIsUpdating(false)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Box>\r\n      <form noValidate>\r\n        <TextField\r\n          variant='outlined'\r\n          margin='normal'\r\n          fullWidth\r\n          id='password'\r\n          label='Current Password'\r\n          name='password'\r\n          autoComplete='name'\r\n          value={currentPassword}\r\n          onChange={(e) => setCurrentPassword(e.target.value)}\r\n        />\r\n        <TextField\r\n          variant='outlined'\r\n          margin='normal'\r\n          fullWidth\r\n          id='password'\r\n          label='New Password'\r\n          name='password'\r\n          autoComplete='name'\r\n          value={newPassword}\r\n          onChange={(e) => setNewPassword(e.target.value)}\r\n        />\r\n        <Button\r\n          sx={{ py: 1.2, px: 4, fontSize: 15, mt: 2 }}\r\n          variant='contained'\r\n          onClick={() => update()}\r\n          startIcon={\r\n            isUpdating && <CircularProgress size={20} color='inherit' />\r\n          }\r\n        >\r\n          Update Password\r\n        </Button>\r\n      </form>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default SecuritySetting\r\n","import React, { useState, useEffect } from 'react'\r\nimport {\r\n    Box,\r\n    Grid,\r\n    TextField,\r\n    Button,\r\n    Avatar,\r\n    IconButton,\r\n    CircularProgress,\r\n    Snackbar,\r\n    Alert,\r\n} from '@mui/material'\r\nimport { makeStyles } from '@mui/styles'\r\n\r\nimport PhotoCamera from '@mui/icons-material/PhotoCamera'\r\nimport { storage, db } from '../Firebase'\r\nimport { ref, uploadBytesResumable, getDownloadURL } from 'firebase/storage'\r\nimport { updateDoc, doc } from 'firebase/firestore'\r\nimport SecuritySetting from '../components/settings/SecuritySetting'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n}))\r\n\r\nconst Profile = () => {\r\n    const classes = useStyles()\r\n\r\n    const [firstName, setFirstName] = useState('')\r\n    const [lastName, setLastName] = useState('')\r\n    const [companyName, setCompanyName] = useState('')\r\n\r\n    const [profilePhoto, setProfilePhoto] = useState('')\r\n    const [previewUrl, setPreviewUrl] = useState(null)\r\n    const [selectedFile, setSelectedFile] = useState(null)\r\n    const [isUpdating, setIsUpdating] = useState(false)\r\n    // snackbar states\r\n    const [snackOpen, setSnackOpen] = useState(false)\r\n    const [success, setSuccess] = useState(null)\r\n    const [error, setError] = useState(null)\r\n\r\n    const userData = sessionStorage.getItem('userData')\r\n        ? JSON.parse(sessionStorage.getItem('userData'))\r\n        : null\r\n\r\n    useEffect(() => {\r\n        if (userData !== null) {\r\n            setProfilePhoto(userData.profilePhoto)\r\n            setFirstName(userData.firstName)\r\n            setCompanyName(userData.companyName)\r\n            setLastName(userData.lastName)\r\n        }\r\n    }, [])\r\n\r\n    const handleSnackClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return\r\n        }\r\n\r\n        setSnackOpen(false)\r\n        setError(null)\r\n        setSuccess(null)\r\n    }\r\n\r\n    const updateProfileHandler = async () => {\r\n        try {\r\n            setIsUpdating(true)\r\n            await uploaProfilPhoto()\r\n                .then(async (photo) => {\r\n                    const userRef = doc(db, 'trackerWebUser', userData.uid)\r\n                    await updateDoc(userRef, {\r\n                        firstName,\r\n                        lastName,\r\n                        companyName,\r\n                        profilePhoto: photo,\r\n                    }).then(() => {\r\n                        const data = {\r\n                            firstName,\r\n                            lastName,\r\n                            companyName,\r\n                            profilePhoto: photo,\r\n                            uid: userData.uid,\r\n                            createdAt: userData.createdAt,\r\n                            email: userData.email,\r\n                        }\r\n                        sessionStorage.setItem('userData', JSON.stringify(data))\r\n                        setSuccess('Profile updated successfully')\r\n                        setSnackOpen(true)\r\n                        setSelectedFile(null)\r\n                        setPreviewUrl(null)\r\n                        setProfilePhoto(photo)\r\n                        setIsUpdating(false)\r\n                    })\r\n                })\r\n                .catch((error) => {\r\n                    setError(error.message)\r\n                    setSnackOpen(true)\r\n                    setIsUpdating(false)\r\n                })\r\n        } catch (err) {\r\n            setError(err.message)\r\n            setSnackOpen(true)\r\n            setIsUpdating(false)\r\n        }\r\n    }\r\n\r\n    const uploaProfilPhoto = async () => {\r\n        console.log(previewUrl, profilePhoto, selectedFile)\r\n        return new Promise((resolve) => {\r\n            if (previewUrl === null) {\r\n                resolve(userData.profilePhoto)\r\n            }\r\n\r\n            const storageRef = ref(\r\n                storage,\r\n                `superAdmin/profile/${userData.uid}`\r\n            )\r\n            const uploadTask = uploadBytesResumable(storageRef, selectedFile)\r\n\r\n            uploadTask.on(\r\n                'state_changed',\r\n                (snapshot) => {\r\n                    const progress =\r\n                        (snapshot.bytesTransferred / snapshot.totalBytes) * 100\r\n                    console.log('Upload is ' + progress + '% done')\r\n                    switch (snapshot.state) {\r\n                        case 'paused':\r\n                            console.log('Upload is paused')\r\n                            break\r\n                        case 'running':\r\n                            console.log('Upload is running')\r\n                            break\r\n                    }\r\n                },\r\n                (error) => {\r\n                    console.log(error.message)\r\n                },\r\n                () => {\r\n                    getDownloadURL(uploadTask.snapshot.ref).then(\r\n                        (downloadUrl) => {\r\n                            resolve(downloadUrl)\r\n                        }\r\n                    )\r\n                }\r\n            )\r\n        })\r\n    }\r\n\r\n    const fileSelectHandler = (e) => {\r\n        const selected = e.target.files[0]\r\n        if (selected) {\r\n            setSelectedFile(selected)\r\n\r\n            let src = URL.createObjectURL(selected)\r\n            setPreviewUrl(src)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Box\r\n            sx={{\r\n                width: '100%',\r\n                p: 4,\r\n                display: 'flex',\r\n                justifyContent: 'center',\r\n            }}\r\n        >\r\n            <Box sx={{ width: '70%' }}>\r\n                <Grid container spacing={2}>\r\n                    <Grid\r\n                        item\r\n                        md={5}\r\n                        sx={{\r\n                            display: 'flex',\r\n                            justifyContent: 'center',\r\n                            alignItems: 'center',\r\n                            flexDirection: 'column',\r\n                        }}\r\n                    >\r\n                        <Avatar\r\n                            src={\r\n                                previewUrl === null ? profilePhoto : previewUrl\r\n                            }\r\n                            alt='profiile photo'\r\n                            sx={{ my: 1.5, width: 200, height: 200 }}\r\n                        />\r\n\r\n                        <IconButton\r\n                            component='label'\r\n                            sx={{ width: 50, height: 50 }}\r\n                        >\r\n                            <PhotoCamera />\r\n                            <input\r\n                                type='file'\r\n                                hidden\r\n                                onChange={fileSelectHandler}\r\n                                accept='image/*'\r\n                            />\r\n                        </IconButton>\r\n                    </Grid>\r\n                    <Grid item md={7}>\r\n                        <form className={classes.form} noValidate>\r\n                            <TextField\r\n                                variant='outlined'\r\n                                margin='normal'\r\n                                fullWidth\r\n                                id='firstName'\r\n                                label='First Name'\r\n                                name='firstName'\r\n                                autoComplete='name'\r\n                                autoFocus\r\n                                value={firstName}\r\n                                onChange={(e) => setFirstName(e.target.value)}\r\n                            />\r\n                            <TextField\r\n                                variant='outlined'\r\n                                margin='normal'\r\n                                fullWidth\r\n                                id='lastName'\r\n                                label='Last Name'\r\n                                name='lastName'\r\n                                autoComplete='name'\r\n                                value={lastName}\r\n                                onChange={(e) => setLastName(e.target.value)}\r\n                            />\r\n                            <TextField\r\n                                variant='outlined'\r\n                                margin='normal'\r\n                                fullWidth\r\n                                id='email'\r\n                                label='Company Name'\r\n                                name='companyName'\r\n                                autoComplete='text'\r\n                                value={companyName}\r\n                                onChange={(e) => setCompanyName(e.target.value)}\r\n                            />\r\n\r\n                            <Button\r\n                                variant='contained'\r\n                                onClick={() => updateProfileHandler()}\r\n                                sx={{\r\n                                    py: 1.2,\r\n                                    px: 4,\r\n                                    fontSize: 15,\r\n                                    mt: 2,\r\n                                    mb: 4,\r\n                                }}\r\n                                startIcon={\r\n                                    isUpdating && (\r\n                                        <CircularProgress\r\n                                            size={20}\r\n                                            color='inherit'\r\n                                        />\r\n                                    )\r\n                                }\r\n                            >\r\n                                Update Profile\r\n                            </Button>\r\n                        </form>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container spacing={2}>\r\n                    <Grid item md={5}></Grid>\r\n                    <Grid item md={7}>\r\n                        <SecuritySetting\r\n                            open={setSnackOpen}\r\n                            success={setSuccess}\r\n                            error={setError}\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n            </Box>\r\n\r\n            {success !== null && (\r\n                <Snackbar\r\n                    open={snackOpen}\r\n                    autoHideDuration={4000}\r\n                    onClose={handleSnackClose}\r\n                    anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n                >\r\n                    <Alert\r\n                        onClose={handleSnackClose}\r\n                        severity='success'\r\n                        sx={{ width: '100%' }}\r\n                    >\r\n                        {success}\r\n                    </Alert>\r\n                </Snackbar>\r\n            )}\r\n            {error !== null && (\r\n                <Snackbar\r\n                    open={snackOpen}\r\n                    autoHideDuration={4000}\r\n                    onClose={handleSnackClose}\r\n                    anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n                >\r\n                    <Alert\r\n                        onClose={handleSnackClose}\r\n                        severity='error'\r\n                        sx={{ width: '100%' }}\r\n                    >\r\n                        {error}\r\n                    </Alert>\r\n                </Snackbar>\r\n            )}\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Profile\r\n","import React, { useState } from 'react'\r\nimport {\r\n  Box,\r\n  Dialog,\r\n  DialogContent,\r\n  DialogTitle,\r\n  DialogActions,\r\n  FormControl,\r\n  InputLabel,\r\n  MenuItem,\r\n  Select,\r\n  Button,\r\n} from '@mui/material'\r\nimport TimeRangePicker from '@wojtekmaj/react-timerange-picker'\r\nimport { db } from '../../Firebase/index'\r\nimport { doc, setDoc } from 'firebase/firestore'\r\n\r\nconst ScheduleForm = (props) => {\r\n  const week = [\r\n    'Sunday',\r\n    'Monday',\r\n    'Tuesday',\r\n    'Wednesday',\r\n    'Thursday',\r\n    'Friday',\r\n    'Saturday',\r\n  ]\r\n\r\n  return (\r\n    <Box>\r\n      <Box\r\n        sx={{ display: 'flex', justifyContent: 'space-between', gap: 2, mt: 2 }}\r\n      >\r\n        <FormControl fullWidth variant=\"outlined\">\r\n          <InputLabel id=\"Start Day\">Start Day</InputLabel>\r\n          <Select\r\n            labelId=\"Start Day\"\r\n            value={props.startDay}\r\n            onChange={(e) => props.setStartDay(e.target.value)}\r\n            label=\"Start Day\"\r\n          >\r\n            {week.map((day, i) => (\r\n              <MenuItem key={i} value={day} sx={{ p: 1.2 }}>\r\n                {day}\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n\r\n        <FormControl fullWidth variant=\"outlined\">\r\n          <InputLabel id=\"End Day\">End Day</InputLabel>\r\n          <Select\r\n            labelId=\"Emd Day\"\r\n            value={props.endDay}\r\n            onChange={(e) => props.setEndDay(e.target.value)}\r\n            label=\"End Day\"\r\n          >\r\n            {week.map((day, i) => (\r\n              <MenuItem key={i} value={day} sx={{ p: 1.2 }}>\r\n                {day}\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n      </Box>\r\n\r\n      <Box\r\n        sx={{\r\n          height: '58px',\r\n          display: 'flex',\r\n          mb: 2,\r\n          mt: 3,\r\n        }}\r\n      >\r\n        <TimeRangePicker\r\n          disableClock={true}\r\n          onChange={props.setTime}\r\n          value={props.time}\r\n          rangeDivider=\"-- to --\"\r\n        />\r\n      </Box>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default React.memo(ScheduleForm)\r\n","import React, { useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  TextField,\r\n  DialogActions,\r\n  Button,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  ListItemText,\r\n  Checkbox,\r\n} from '@mui/material'\r\nimport ScheduleForm from './ScheduleForm'\r\nimport { createGroup } from '../../store/actions/group'\r\n\r\nconst ITEM_HEIGHT = 48\r\nconst ITEM_PADDING_TOP = 8\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250,\r\n    },\r\n  },\r\n}\r\n\r\nconst CreateGroupDialog = (props) => {\r\n  const [groupName, setGroupName] = useState('')\r\n  //const [adminList, setAdminList] = useState([])\r\n  const [selectedAdmins, setSelectedAdmins] = useState([])\r\n  //const [admins, setAdmins] = useState([])\r\n\r\n  const [startDay, setStartDay] = useState('')\r\n  const [endDay, setEndDay] = useState('')\r\n  const [time, setTime] = useState(['', ''])\r\n\r\n  const dispatch = useDispatch()\r\n  const admins = useSelector((state) => state.admins)\r\n  const adminList = admins.adminList\r\n\r\n  const saveGroup = () => {\r\n    if (props.subscription === null) {\r\n      props.setError('You do not have any subscription. Please choose a plan')\r\n      props.setSnackOpen(true)\r\n      return\r\n    } else if (props.groupList.length === props.subscription.groupCount) {\r\n      props.setError(\r\n        'You have used your groups quota. Please upgrade your subscription',\r\n      )\r\n      props.setSnackOpen(true)\r\n      return\r\n    } else if (groupName.length < 4) {\r\n      props.setError('Group name must be atleast 4 characters')\r\n      props.setSnackOpen(true)\r\n      return\r\n    }\r\n\r\n    const body = {\r\n      groupName: groupName,\r\n      createdBy: props.createdBy.id,\r\n      members: [],\r\n      hotspot: [],\r\n      admins: selectedAdmins,\r\n      schedule: {\r\n        startDay,\r\n        endDay,\r\n        time: {\r\n          startTime: time[0],\r\n          endTime: time[1],\r\n        },\r\n      },\r\n    }\r\n    dispatch(createGroup(body))\r\n    props.setOpen(false)\r\n    setSelectedAdmins([])\r\n    setGroupName('')\r\n    setStartDay('')\r\n    setEndDay('')\r\n    setTime(['', ''])\r\n  }\r\n\r\n  const handleChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event\r\n    setSelectedAdmins(typeof value === 'string' ? value.split(',') : value)\r\n  }\r\n\r\n  return (\r\n    <Dialog open={props.open} onClose={() => props.setOpen(false)}>\r\n      <DialogTitle sx={{ fontSize: 22 }}>Add New Group</DialogTitle>\r\n      <DialogContent sx={{ width: 500 }}>\r\n        <TextField\r\n          autoFocus\r\n          margin=\"normal\"\r\n          id=\"groupName\"\r\n          label=\"Group Name\"\r\n          type=\"text\"\r\n          fullWidth\r\n          variant=\"outlined\"\r\n          value={groupName}\r\n          onChange={(e) => setGroupName(e.target.value)}\r\n        />\r\n        {props.subscription !== null &&\r\n          props.subscription.groupCount === Number.MAX_VALUE && (\r\n            <FormControl margin=\"normal\" fullWidth variant=\"outlined\">\r\n              <InputLabel id=\"admin\">Select Admin</InputLabel>\r\n              <Select\r\n                labelId=\"admin\"\r\n                label=\"Select Admin\"\r\n                value={selectedAdmins}\r\n                onChange={handleChange}\r\n                multiple\r\n                renderValue={(selected) => selected.join(', ')}\r\n                MenuProps={MenuProps}\r\n              >\r\n                {adminList.map((item) => (\r\n                  <MenuItem key={item._id} value={item._id}>\r\n                    <Checkbox checked={selectedAdmins.indexOf(item._id) > -1} />\r\n                    <ListItemText primary={item.fullName} />\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n          )}\r\n\r\n        <ScheduleForm\r\n          startDay={startDay}\r\n          endDay={endDay}\r\n          setStartDay={setStartDay}\r\n          setEndDay={setEndDay}\r\n          time={time}\r\n          setTime={setTime}\r\n        />\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={() => props.setOpen(false)}>Cancel</Button>\r\n        <Button onClick={() => saveGroup()}>Create</Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n}\r\n\r\nexport default React.memo(CreateGroupDialog)\r\n","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {\r\n  Box,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Paper,\r\n  Typography,\r\n  IconButton,\r\n} from '@mui/material'\r\nimport DeleteIcon from '@mui/icons-material/Delete'\r\nimport Create from '@mui/icons-material/Create'\r\nimport moment from 'moment'\r\nimport { getGroups, deleteGroup } from '../../store/actions/group'\r\n\r\nconst GroupTable = (props) => {\r\n  // const [groups, setGroups] = useState([])\r\n\r\n  const userData = sessionStorage.getItem('userData')\r\n    ? JSON.parse(sessionStorage.getItem('userData'))\r\n    : null\r\n\r\n  const adminData = sessionStorage.getItem('adminData')\r\n    ? JSON.parse(sessionStorage.getItem('adminData'))\r\n    : null\r\n\r\n  const dispatch = useDispatch()\r\n  const groups = useSelector((state) => state.groups)\r\n  const { groupList } = groups\r\n\r\n  useEffect(async () => {\r\n    if (userData !== null && adminData === null) {\r\n      dispatch(getGroups(userData.uid))\r\n    }\r\n\r\n    // if (adminData !== null && userData !== null) {\r\n    //   const { data } = await axios.get(\r\n    //     `${API_SERVICE}/get/admin/${adminData.email}`,\r\n    //   )\r\n\r\n    // }\r\n  }, [dispatch, userData])\r\n\r\n  const removeGroup = (row) => {\r\n    dispatch(deleteGroup(row._id))\r\n  }\r\n\r\n  return (\r\n    <Box>\r\n      <TableContainer component={Paper}>\r\n        <Table aria-label=\"simple table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell sx={{ fontWeight: 600 }}>Group Name</TableCell>\r\n              <TableCell sx={{ fontWeight: 600 }} align=\"center\">\r\n                Admins\r\n              </TableCell>\r\n              <TableCell sx={{ fontWeight: 600 }} align=\"center\">\r\n                Schedule\r\n              </TableCell>\r\n              <TableCell sx={{ fontWeight: 600 }} align=\"center\">\r\n                Hotspot/s Added\r\n              </TableCell>\r\n              <TableCell sx={{ fontWeight: 600 }} align=\"center\">\r\n                Created At\r\n              </TableCell>\r\n              <TableCell sx={{ fontWeight: 600 }} align=\"center\">\r\n                Modified At\r\n              </TableCell>\r\n              <TableCell sx={{ fontWeight: 600 }} align=\"center\">\r\n                Action\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {groupList.map((row) => (\r\n              <TableRow\r\n                key={row._id}\r\n                sx={{\r\n                  '&:last-child td, &:last-child th': { border: 0 },\r\n                }}\r\n              >\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                  {row.groupName}\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  {row.admins.length === 0 && <>---</>}\r\n                  {row.admins.map((x, i) => (\r\n                    <React.Fragment key={i}>\r\n                      {`${x.fullName}\r\n                        ${i !== row.admins.length - 1 ? ', ' : ''}`}\r\n                    </React.Fragment>\r\n                  ))}\r\n                </TableCell>\r\n\r\n                {Object.entries(row.schedule).length !== 0 ? (\r\n                  <TableCell align=\"center\">\r\n                    {`${row.schedule.startDay} to ${row.schedule.endDay} , ${row.schedule.time.startTime} to ${row.schedule.time.endTime}`}\r\n                  </TableCell>\r\n                ) : (\r\n                  <TableCell align=\"center\">---</TableCell>\r\n                )}\r\n\r\n                <TableCell align=\"center\">\r\n                  {row.hotspots.length === 0 && <>---</>}\r\n                  {row.hotspots.map((x, i) => (\r\n                    <React.Fragment key={i}>\r\n                      {`${x.hotspotName}\r\n                        ${i !== row.hotspots.length - 1 ? ' , ' : ''}`}\r\n                    </React.Fragment>\r\n                  ))}\r\n                </TableCell>\r\n\r\n                <TableCell align=\"center\" component=\"th\" scope=\"row\">\r\n                  {moment(row.createdAt).format('DD MMMM YYYY')}\r\n                </TableCell>\r\n\r\n                <TableCell align=\"center\" component=\"th\" scope=\"row\">\r\n                  {moment(row.updatedAt).format('DD MMMM YYYY')}\r\n                </TableCell>\r\n\r\n                <TableCell align=\"center\" sx={{ p: 0 }}>\r\n                  <IconButton\r\n                    color=\"success\"\r\n                    onClick={() => {\r\n                      props.setSelectedGroup(row)\r\n                      props.setEditOpen(true)\r\n                    }}\r\n                  >\r\n                    <Create />\r\n                  </IconButton>\r\n                  <IconButton color=\"error\" onClick={() => removeGroup(row)}>\r\n                    <DeleteIcon />\r\n                  </IconButton>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default React.memo(GroupTable)\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  TextField,\r\n  Checkbox,\r\n  ListItemText,\r\n  MenuItem,\r\n} from '@mui/material'\r\nimport ScheduleForm from './ScheduleForm'\r\nimport { updateGroup } from '../../store/actions/group'\r\n\r\nconst ITEM_HEIGHT = 48\r\nconst ITEM_PADDING_TOP = 8\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250,\r\n    },\r\n  },\r\n}\r\n\r\nconst EditGroupDialog = (props) => {\r\n  const [groupName, setGroupName] = useState('')\r\n  // const [adminList, setAdminList] = useState([])\r\n  const [selectedAdmins, setSelectedAdmins] = useState([])\r\n  // const [admins, setAdmins] = useState([])\r\n\r\n  const [startDay, setStartDay] = useState('Sunday')\r\n  const [endDay, setEndDay] = useState('Saturday')\r\n  const [time, setTime] = useState(['10:00', '11:00'])\r\n\r\n  const admins = useSelector((state) => state.admins)\r\n  const { adminList } = admins\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(props.selectedGroup).length !== 0) {\r\n      setGroupName(props.selectedGroup.groupName)\r\n      setStartDay(props.selectedGroup.schedule.startDay)\r\n      setEndDay(props.selectedGroup.schedule.endDay)\r\n      setTime([\r\n        props.selectedGroup.schedule.time.startTime,\r\n        props.selectedGroup.schedule.time.endTime,\r\n      ])\r\n\r\n      const arr = props.selectedGroup.admins.map((x) => x._id)\r\n      setSelectedAdmins(arr)\r\n    }\r\n  }, [props.selectedGroup])\r\n\r\n  const handleChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event\r\n    setSelectedAdmins(typeof value === 'string' ? value.split(',') : value)\r\n  }\r\n\r\n  const updateDetails = () => {\r\n    if (groupName.length < 3) {\r\n      props.setError('Group Name length must be atleast 3')\r\n      props.setSnackOpen(true)\r\n      return\r\n    } else if (admins.length === 0) {\r\n      props.setError('Select atleast one admin')\r\n      props.setSnackOpen(true)\r\n      return\r\n    }\r\n\r\n    const body = {\r\n      _id: props.selectedGroup._id,\r\n      groupName,\r\n      admins: selectedAdmins,\r\n      schedule: {\r\n        startDay,\r\n        endDay,\r\n        time: {\r\n          startTime: time[0],\r\n          endTime: time[1],\r\n        },\r\n      },\r\n    }\r\n\r\n    dispatch(updateGroup(body))\r\n    props.setOpen(false)\r\n    setGroupName('')\r\n    setSelectedAdmins([])\r\n    setStartDay('Sunday')\r\n    setEndDay('Sunday')\r\n    setTime(['10:00', '11:00'])\r\n  }\r\n\r\n  return (\r\n    <Dialog open={props.open} onClose={() => props.setOpen(false)}>\r\n      <DialogTitle sx={{ fontSize: 22 }}>Edit Group Details</DialogTitle>\r\n      <DialogContent sx={{ width: 500 }}>\r\n        <TextField\r\n          autoFocus\r\n          margin=\"normal\"\r\n          id=\"groupName\"\r\n          label=\"Group Name\"\r\n          type=\"text\"\r\n          fullWidth\r\n          variant=\"outlined\"\r\n          value={groupName}\r\n          onChange={(e) => setGroupName(e.target.value)}\r\n        />\r\n\r\n        <FormControl margin=\"normal\" fullWidth variant=\"outlined\">\r\n          <InputLabel id=\"admin\">Select Admin</InputLabel>\r\n          <Select\r\n            labelId=\"admin\"\r\n            label=\"Select Admin\"\r\n            value={selectedAdmins}\r\n            onChange={handleChange}\r\n            multiple\r\n            renderValue={(selected) => selected.join(', ')}\r\n            MenuProps={MenuProps}\r\n          >\r\n            {adminList.map((item) => (\r\n              <MenuItem key={item._id} value={item._id}>\r\n                <Checkbox checked={selectedAdmins.indexOf(item._id) > -1} />\r\n                <ListItemText primary={item.fullName} />\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n\r\n        <ScheduleForm\r\n          startDay={startDay}\r\n          endDay={endDay}\r\n          setStartDay={setStartDay}\r\n          setEndDay={setEndDay}\r\n          time={time}\r\n          setTime={setTime}\r\n        />\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={() => props.setOpen(false)}>Cancel</Button>\r\n        <Button onClick={() => updateDetails()}>Update</Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n}\r\n\r\nexport default React.memo(EditGroupDialog)\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useNavigate } from 'react-router'\r\nimport { Alert, Box, Button, Snackbar, Stack } from '@mui/material'\r\nimport CreateGroupDialog from '../components/groups/CreateGroupDialog'\r\nimport GroupTable from '../components/groups/GroupTable'\r\nimport EditGroupDialog from '../components/groups/EditGroupDialog'\r\nimport { useSubscription } from '../hooks/useSubscription'\r\nimport { getSubscriptionDetails } from '../utils/getSubscriptionDetails'\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst ManageGroups = () => {\r\n    const [createOpen, setCreateOpen] = useState(false)\r\n    const [editOpen, setEditOpen] = useState(false)\r\n    const [selectedGroup, setSelectedGroup] = useState({})\r\n    const [snackOpen, setSnackOpen] = useState(false)\r\n    const [successMsg, setSuccessMsg] = useState(null)\r\n    const [errorMsg, setErrorMsg] = useState(null)\r\n\r\n    // subscription state\r\n    const [subscription, setSubscription] = useState(null)\r\n\r\n    const userData = sessionStorage.getItem('userData')\r\n        ? JSON.parse(sessionStorage.getItem('userData'))\r\n        : null\r\n\r\n    const groups = useSelector((state) => state.groups)\r\n    const { groupList, success, error } = groups\r\n\r\n    const navigate = useNavigate()\r\n    const { state } = useSubscription()\r\n\r\n    useEffect(() => {\r\n        const authToken = sessionStorage.getItem('authToken')\r\n\r\n        if (!authToken) {\r\n            navigate('/login')\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        const fetchSubDetail = async () => {\r\n            const details = await getSubscriptionDetails(state)\r\n            setSubscription(details)\r\n        }\r\n\r\n        fetchSubDetail()\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (success) {\r\n            setSuccessMsg(success)\r\n            setSnackOpen(true)\r\n        }\r\n        if (error !== undefined) {\r\n            setErrorMsg(error)\r\n            setSnackOpen(true)\r\n        }\r\n    }, [success, error])\r\n\r\n    const handleSnackClose = (_, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return\r\n        }\r\n\r\n        setSnackOpen(false)\r\n        setErrorMsg(null)\r\n        setSuccessMsg(null)\r\n    }\r\n\r\n    return (\r\n        <Box sx={{ p: 4 }}>\r\n            <h2>Manage Groups</h2>\r\n\r\n            <Stack\r\n                direction='row'\r\n                justifyContent='flex-end'\r\n                rowGap={2}\r\n                columnGap={2}\r\n            >\r\n                <Button\r\n                    variant='contained'\r\n                    sx={{ py: 1.2 }}\r\n                    onClick={() => setCreateOpen(true)}\r\n                >\r\n                    Create New Group\r\n                </Button>\r\n            </Stack>\r\n\r\n            <Box sx={{ my: 5 }}>\r\n                <GroupTable\r\n                    success={setSuccessMsg}\r\n                    error={setErrorMsg}\r\n                    open={setSnackOpen}\r\n                    setSelectedGroup={setSelectedGroup}\r\n                    setEditOpen={setEditOpen}\r\n                />\r\n            </Box>\r\n\r\n            <Box>\r\n                <CreateGroupDialog\r\n                    open={createOpen}\r\n                    setOpen={setCreateOpen}\r\n                    createdBy={{\r\n                        id: userData?.uid,\r\n                        fullName: `${userData?.firstName} ${userData?.lastName}`,\r\n                    }}\r\n                    subscription={subscription}\r\n                    setError={setErrorMsg}\r\n                    setSnackOpen={setSnackOpen}\r\n                    setSuccess={setSuccessMsg}\r\n                    groupList={groupList}\r\n                />\r\n            </Box>\r\n\r\n            <Box>\r\n                <EditGroupDialog\r\n                    open={editOpen}\r\n                    setOpen={setEditOpen}\r\n                    selectedGroup={selectedGroup}\r\n                    setError={setErrorMsg}\r\n                    setSnackOpen={setSnackOpen}\r\n                    setSuccess={setSuccessMsg}\r\n                    createdBy={{\r\n                        id: userData?.uid,\r\n                        fullName: `${userData?.firstName} ${userData?.lastName}`,\r\n                    }}\r\n                />\r\n            </Box>\r\n\r\n            {success !== null && (\r\n                <Snackbar\r\n                    open={snackOpen}\r\n                    autoHideDuration={4000}\r\n                    onClose={handleSnackClose}\r\n                    anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n                >\r\n                    <Alert\r\n                        onClose={handleSnackClose}\r\n                        severity='success'\r\n                        sx={{ width: '100%' }}\r\n                        variant='filled'\r\n                    >\r\n                        {successMsg}\r\n                    </Alert>\r\n                </Snackbar>\r\n            )}\r\n            {error !== null && (\r\n                <Snackbar\r\n                    open={snackOpen}\r\n                    autoHideDuration={4000}\r\n                    onClose={handleSnackClose}\r\n                    anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n                >\r\n                    <Alert\r\n                        onClose={handleSnackClose}\r\n                        severity='error'\r\n                        sx={{ width: '100%' }}\r\n                        variant='filled'\r\n                    >\r\n                        {errorMsg}\r\n                    </Alert>\r\n                </Snackbar>\r\n            )}\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default ManageGroups\r\n","import React from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport {\r\n  Box,\r\n  IconButton,\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Typography,\r\n} from '@mui/material'\r\nimport { Delete, Create } from '@mui/icons-material'\r\nimport { arrayRemove, deleteDoc, doc, updateDoc } from 'firebase/firestore'\r\nimport { db } from '../../Firebase/index'\r\nimport moment from 'moment'\r\nimport { deleteAdmin } from '../../store/actions/admin'\r\n\r\nconst AdminTable = (props) => {\r\n  const admins = useSelector((state) => state.admins)\r\n  const { adminList } = admins\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const removeAdmin = (admin) => {\r\n    dispatch(deleteAdmin(admin._id))\r\n  }\r\n\r\n  return (\r\n    <Box>\r\n      <TableContainer component={Paper} sx={{ boxShadow: 6 }}>\r\n        <Table sx={{ minWidth: 650 }}>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell className=\"table-head\">Admin Name</TableCell>\r\n              <TableCell className=\"table-head\" align=\"center\">\r\n                Admin Id\r\n              </TableCell>\r\n              <TableCell className=\"table-head\" align=\"center\">\r\n                Email\r\n              </TableCell>\r\n              <TableCell className=\"table-head\" align=\"center\">\r\n                Groups\r\n              </TableCell>\r\n              <TableCell sx={{ fontWeight: 600 }} align=\"center\">\r\n                Created At\r\n              </TableCell>\r\n              <TableCell sx={{ fontWeight: 600 }} align=\"center\">\r\n                Modified At\r\n              </TableCell>\r\n              <TableCell className=\"table-head\" align=\"center\">\r\n                Action\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {adminList.map((row) => (\r\n              <TableRow\r\n                key={row._id}\r\n                sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n              >\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                  {row.fullName}\r\n                </TableCell>\r\n                <TableCell align=\"center\">{row._id}</TableCell>\r\n                <TableCell align=\"center\">{row.email}</TableCell>\r\n                <TableCell align=\"center\">\r\n                  {row.groups.length === 0 && <>---</>}\r\n                  {row.groups.map((x, i) => (\r\n                    <React.Fragment key={i}>{`${x.groupName} ${\r\n                      i !== row.groups.length - 1 ? ', ' : ''\r\n                    }`}</React.Fragment>\r\n                  ))}\r\n                </TableCell>\r\n\r\n                <TableCell align=\"center\">\r\n                  {moment(row.createdAt).format('DD MMM YYYY')}\r\n                </TableCell>\r\n\r\n                <TableCell align=\"center\">\r\n                  {moment(row.updatedAt).format('DD MMMM YYYY')}\r\n                </TableCell>\r\n\r\n                <TableCell align=\"center\" sx={{ p: 0 }}>\r\n                  <IconButton\r\n                    color=\"success\"\r\n                    onClick={() => {\r\n                      props.setSelectedAdmin(row)\r\n                      props.setShowEditDialog(true)\r\n                    }}\r\n                  >\r\n                    <Create />\r\n                  </IconButton>\r\n                  <IconButton color=\"error\" onClick={() => removeAdmin(row)}>\r\n                    <Delete />\r\n                  </IconButton>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default React.memo(AdminTable)\r\n","import React, { useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport {\r\n  Box,\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  TextField,\r\n} from '@mui/material'\r\nimport { addDoc, collection, doc, setDoc, Timestamp } from 'firebase/firestore'\r\nimport { auth, db } from '../../Firebase'\r\nimport { v4 as uuidv4 } from 'uuid'\r\nimport { createUserWithEmailAndPassword } from 'firebase/auth'\r\nimport { createAdmin, sendEmail } from '../../store/actions/admin'\r\n\r\nconst CreateAdminDialog = (props) => {\r\n  const [fullName, setFullName] = useState('')\r\n  const [email, setEmail] = useState('')\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const isValidEmail = (enteredEmail) => {\r\n    const emailRegex = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n\r\n    return emailRegex.test(enteredEmail)\r\n  }\r\n\r\n  function verifyData() {\r\n    if (props.subscription === null) {\r\n      props.error('You do not have any subscription. Please choose a plan')\r\n      props.setSnackOpen(true)\r\n      return false\r\n    } else if (props.adminList.length === props.subscription.adminCount) {\r\n      props.error(\r\n        'You have used your admin quota. Please upgrade your subscription',\r\n      )\r\n      props.setSnackOpen(true)\r\n      return false\r\n    } else if (fullName === '') {\r\n      props.error('Full Name cannot be empty')\r\n      props.setSnackOpen(true)\r\n      return false\r\n    } else if (email === '' || !isValidEmail(email)) {\r\n      props.error('Invalid Email')\r\n      props.setSnackOpen(true)\r\n      return false\r\n    }\r\n\r\n    return true\r\n  }\r\n\r\n  const saveAdmin = async () => {\r\n    if (verifyData()) {\r\n      const password = '#123321#'\r\n\r\n      await createUserWithEmailAndPassword(auth, email, password)\r\n        .then(async function (user) {\r\n          const body = {\r\n            fullName,\r\n            email,\r\n            groups: [],\r\n            createdBy: props.createdBy,\r\n            passwordChanged: false,\r\n          }\r\n          dispatch(createAdmin(body))\r\n\r\n          const emailData = {\r\n            to: email,\r\n            subject: 'GPS Tracker login credentials for admin',\r\n            body: `Your login credentials are:\\nemail: ${email}\\npassword: ${password}`,\r\n          }\r\n          dispatch(sendEmail(emailData))\r\n\r\n          setFullName('')\r\n          setEmail('')\r\n          props.setOpen(false)\r\n        })\r\n        .catch((error) => {\r\n          const errorCode = error.code\r\n          const errorMessage = error.message\r\n          alert(errorCode, errorMessage)\r\n        })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Dialog open={props.open} onClose={() => props.setOpen(false)}>\r\n      <DialogTitle sx={{ fontSize: 16 }}>Create New Admin</DialogTitle>\r\n      <DialogContent sx={{ width: 500 }}>\r\n        <TextField\r\n          fullWidth\r\n          autoFocus\r\n          margin=\"normal\"\r\n          id=\"name\"\r\n          label=\"Full Name\"\r\n          type=\"name\"\r\n          variant=\"outlined\"\r\n          value={fullName}\r\n          onChange={(e) => setFullName(e.target.value)}\r\n        />\r\n        <TextField\r\n          fullWidth\r\n          margin=\"normal\"\r\n          id=\"email\"\r\n          label=\"Email Address\"\r\n          type=\"email\"\r\n          variant=\"outlined\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n        />\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={() => props.setOpen(false)}>Cancel</Button>\r\n        <Button onClick={() => saveAdmin()}>Create</Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n}\r\n\r\nexport default React.memo(CreateAdminDialog)\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  TextField,\r\n} from '@mui/material'\r\nimport {\r\n  arrayRemove,\r\n  arrayUnion,\r\n  doc,\r\n  Timestamp,\r\n  updateDoc,\r\n} from 'firebase/firestore'\r\nimport { db } from '../../Firebase'\r\nimport { updateAdmin } from '../../store/actions/admin'\r\n\r\nconst EditAdminDialog = (props) => {\r\n  const [fullName, setFullName] = useState('')\r\n  const [email, setEmail] = useState('')\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    setFullName(props.selectedAdmin.fullName)\r\n    setEmail(props.selectedAdmin.email)\r\n  }, [props.selectedAdmin])\r\n\r\n  const isValidEmail = (enteredEmail) => {\r\n    const emailRegex = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n\r\n    return emailRegex.test(enteredEmail)\r\n  }\r\n\r\n  function verifyData() {\r\n    if (fullName === '') {\r\n      props.error('Full Name cannot be empty')\r\n      props.setSnackOpen(true)\r\n      return false\r\n    } else if (email === '' || !isValidEmail(email)) {\r\n      props.error('Invalid Email')\r\n      props.setSnackOpen(true)\r\n      return false\r\n    }\r\n\r\n    return true\r\n  }\r\n\r\n  const updateData = () => {\r\n    if (verifyData()) {\r\n      const body = {\r\n        _id: props.selectedAdmin._id,\r\n        fullName,\r\n        email,\r\n      }\r\n\r\n      dispatch(updateAdmin(body))\r\n      props.success('Admin Updated')\r\n      props.setSnackOpen(true)\r\n      setFullName('')\r\n      setEmail('')\r\n      props.setOpen(false)\r\n    }\r\n  }\r\n\r\n  //   console.log(props.selectedAdmin)\r\n\r\n  // const updateAdmin = async () => {\r\n  //   if (verifyData()) {\r\n  //     const ref = doc(db, 'trackerAdmin', props.selectedAdmin.id)\r\n  //     await updateDoc(ref, {\r\n  //       fullName,\r\n  //       email,\r\n  //       modifiedAt: Timestamp.now(),\r\n  //     })\r\n  //       .then(() => {\r\n  //         props.selectedAdmin.groups.forEach(async ({ id }) => {\r\n  //           const ref = doc(db, 'trackingGroups', id)\r\n  //           await updateDoc(ref, {\r\n  //             admins: arrayRemove({\r\n  //               fullName: props.selectedAdmin.fullName,\r\n  //               id: props.selectedAdmin.id,\r\n  //             }),\r\n  //           }).catch((error) => console.log(error))\r\n  //         })\r\n\r\n  //         props.selectedAdmin.groups.forEach(async ({ id }) => {\r\n  //           const ref = doc(db, 'trackingGroups', id)\r\n  //           await updateDoc(ref, {\r\n  //             admins: arrayUnion({\r\n  //               fullName: fullName,\r\n  //               id: props.selectedAdmin.id,\r\n  //             }),\r\n  //           }).catch((error) => console.log(error))\r\n  //         })\r\n  //       })\r\n  //       .then(() => {\r\n  //         props.success('Admin Updated')\r\n  //         props.setSnackOpen(true)\r\n  //         setFullName('')\r\n  //         setEmail('')\r\n  //         props.setOpen(false)\r\n  //       })\r\n  //       .catch((err) => console.log(err.message))\r\n  //   }\r\n  // }\r\n\r\n  return (\r\n    <Dialog open={props.open} onClose={() => props.setOpen(false)}>\r\n      <DialogTitle sx={{ fontSize: 18 }}>Edit Admin Details</DialogTitle>\r\n      <DialogContent sx={{ width: 500 }}>\r\n        <TextField\r\n          fullWidth\r\n          autoFocus\r\n          margin=\"normal\"\r\n          id=\"name\"\r\n          label=\"Full Name\"\r\n          type=\"name\"\r\n          variant=\"outlined\"\r\n          value={fullName}\r\n          onChange={(e) => setFullName(e.target.value)}\r\n        />\r\n        <TextField\r\n          fullWidth\r\n          margin=\"normal\"\r\n          id=\"email\"\r\n          label=\"Email Address\"\r\n          type=\"email\"\r\n          variant=\"outlined\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n        />\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={() => props.setOpen(false)}>Cancel</Button>\r\n        <Button onClick={() => updateData()}>Update</Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n}\r\n\r\nexport default React.memo(EditAdminDialog)\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useNavigate } from 'react-router'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { Alert, Box, Button, Snackbar, Stack } from '@mui/material'\r\nimport AdminTable from '../components/admins/AdminTable'\r\nimport CreateAdminDialog from '../components/admins/CreateAdminDialog'\r\nimport EditAdminDialog from '../components/admins/EditAdminDialog'\r\nimport { getAdmins } from '../store/actions/admin'\r\nimport { useSubscription } from '../hooks/useSubscription'\r\nimport { getSubscriptionDetails } from '../utils/getSubscriptionDetails'\r\n\r\nconst ManageAdmins = () => {\r\n    const [showCreateDialog, setShowCreateDialog] = useState(false)\r\n    const [showEditDialog, setShowEditDialog] = useState(false)\r\n    const [selectedAdmin, setSelectedAdmin] = useState({})\r\n    //const [adminList, setAdminList] = useState([])\r\n    const [snackOpen, setSnackOpen] = useState(false)\r\n    const [successMsg, setSuccess] = useState(null)\r\n    const [errorMsg, setError] = useState(null)\r\n    // subscription state\r\n    const [subscription, setSubscription] = useState(null)\r\n\r\n    const authToken = sessionStorage.getItem('authToken')\r\n    const userData = sessionStorage.getItem('userData')\r\n        ? JSON.parse(sessionStorage.getItem('userData'))\r\n        : null\r\n\r\n    const dispatch = useDispatch()\r\n    const navigate = useNavigate()\r\n    const { state } = useSubscription()\r\n\r\n    const admins = useSelector((state) => state.admins)\r\n    const { adminList, success, error } = admins\r\n\r\n    useEffect(() => {\r\n        const fetchSubDetail = async () => {\r\n            const details = await getSubscriptionDetails(state)\r\n            setSubscription(details)\r\n        }\r\n\r\n        fetchSubDetail()\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (!authToken) {\r\n            navigate('/login')\r\n        }\r\n    }, [authToken])\r\n\r\n    useEffect(() => {\r\n        if (userData !== null) {\r\n            dispatch(getAdmins(userData.uid))\r\n        }\r\n    }, [dispatch])\r\n\r\n    const handleCreateDialog = () => {\r\n        if (showCreateDialog) {\r\n            setShowCreateDialog(false)\r\n        } else {\r\n            setShowCreateDialog(true)\r\n        }\r\n    }\r\n\r\n    const handleSnackClose = (_, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return\r\n        }\r\n\r\n        setSnackOpen(false)\r\n        setError(null)\r\n        setSuccess(null)\r\n    }\r\n\r\n    return (\r\n        <Box sx={{ p: 4 }}>\r\n            <h2>Manage Admins</h2>\r\n\r\n            <Stack direction='row' justifyContent='flex-end'>\r\n                <Button\r\n                    variant='contained'\r\n                    sx={{ py: 1.2 }}\r\n                    onClick={handleCreateDialog}\r\n                >\r\n                    Create Admin\r\n                </Button>\r\n            </Stack>\r\n\r\n            <Box sx={{ my: 5 }}>\r\n                <AdminTable\r\n                    setSelectedAdmin={setSelectedAdmin}\r\n                    setShowEditDialog={setShowEditDialog}\r\n                />\r\n            </Box>\r\n\r\n            <Box>\r\n                <CreateAdminDialog\r\n                    open={showCreateDialog}\r\n                    setOpen={setShowCreateDialog}\r\n                    createdBy={userData?.uid}\r\n                    setSnackOpen={setSnackOpen}\r\n                    success={setSuccess}\r\n                    error={setError}\r\n                    adminList={adminList}\r\n                    subscription={subscription}\r\n                />\r\n            </Box>\r\n\r\n            <Box>\r\n                <EditAdminDialog\r\n                    open={showEditDialog}\r\n                    setOpen={setShowEditDialog}\r\n                    createdBy={userData?.uid}\r\n                    setSnackOpen={setSnackOpen}\r\n                    selectedAdmin={selectedAdmin}\r\n                    success={setSuccess}\r\n                    error={setError}\r\n                />\r\n            </Box>\r\n\r\n            {success !== null && (\r\n                <Snackbar\r\n                    open={snackOpen}\r\n                    autoHideDuration={4000}\r\n                    onClose={handleSnackClose}\r\n                    anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n                >\r\n                    <Alert\r\n                        onClose={handleSnackClose}\r\n                        severity='success'\r\n                        sx={{ width: '100%' }}\r\n                        variant='filled'\r\n                    >\r\n                        {successMsg}\r\n                    </Alert>\r\n                </Snackbar>\r\n            )}\r\n            {error !== null && (\r\n                <Snackbar\r\n                    open={snackOpen}\r\n                    autoHideDuration={4000}\r\n                    onClose={handleSnackClose}\r\n                    anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n                >\r\n                    <Alert\r\n                        onClose={handleSnackClose}\r\n                        severity='error'\r\n                        sx={{ width: '100%' }}\r\n                        variant='filled'\r\n                    >\r\n                        {errorMsg}\r\n                    </Alert>\r\n                </Snackbar>\r\n            )}\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default ManageAdmins\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Box, Button, CircularProgress, Backdrop } from '@mui/material'\r\n\r\nimport { db } from '../../Firebase/index'\r\nimport {\r\n  getDocs,\r\n  collection,\r\n  query,\r\n  where,\r\n  orderBy,\r\n  limit,\r\n  documentId,\r\n} from 'firebase/firestore'\r\nimport ReportTable from '../../components/report/ReportTable'\r\nimport HotspotFilter from '../../components/report/HotspotFilter'\r\nimport DeviceFilter from '../../components/report/DeviceFilter'\r\nimport MonthFilter from '../../components/report/MonthFilter'\r\nimport GroupFilter from '../../components/report/GroupFilter'\r\n\r\nconst Months = [\r\n  'January',\r\n  'February',\r\n  'March',\r\n  'April',\r\n  'May',\r\n  'June',\r\n  'July',\r\n  'August',\r\n  'September',\r\n  'October',\r\n  'November',\r\n  'December',\r\n]\r\n\r\nconst AdminReport = () => {\r\n  const [hotspotNames, setHotspotNames] = useState([])\r\n  const [groupNames, setGroupNames] = useState([])\r\n  const [tableData, setTableData] = useState([])\r\n  const [mobileDevices, setMobileDevices] = useState([])\r\n  const [phoneNumbers, setPhoneNumbers] = useState([])\r\n\r\n  const [filter, setFilter] = useState(false)\r\n  const [selectedHotspotNames, setSelectedHotspotNames] = useState([])\r\n  const [selectedGroupNames, setSelectedGroupNames] = useState([])\r\n  const [selectedHotspots, setSelectedHotspots] = useState([])\r\n  const [selectedDevices, setSelectedDevices] = useState([])\r\n  const [selectedMonth, setSelectedMonth] = useState(\r\n    Months[new Date().getMonth()]\r\n  )\r\n  const [loading, setLoading] = useState(true)\r\n\r\n  const userData = sessionStorage.getItem('userData')\r\n    ? JSON.parse(sessionStorage.getItem('userData'))\r\n    : null\r\n\r\n  const adminData = sessionStorage.getItem('adminData')\r\n    ? JSON.parse(sessionStorage.getItem('adminData'))\r\n    : null\r\n\r\n  //Get All Hotspots\r\n  useEffect(() => {\r\n    const getHotspots = async () => {\r\n      try {\r\n        const ref = collection(db, 'trackingHotspots')\r\n        const q = query(\r\n          ref,\r\n          where('createdBy', '==', userData.uid),\r\n          where('groupId', 'array-contains-any', adminData.groupId)\r\n        )\r\n\r\n        const snaps = await getDocs(q)\r\n        const array = []\r\n        snaps.forEach((document) => {\r\n          array.push({ ...document.data(), id: document.id })\r\n        })\r\n\r\n        const newArr = array.map((item) => {\r\n          return { hotspotName: item.hotspotName, id: item.id }\r\n        })\r\n\r\n        setHotspotNames(newArr)\r\n      } catch (error) {\r\n        console.log(error)\r\n      }\r\n    }\r\n\r\n    getHotspots()\r\n  }, [])\r\n\r\n  //Get All Groups\r\n  useEffect(() => {\r\n    const getGroups = async () => {\r\n      try {\r\n        const ref = collection(db, 'trackingGroups')\r\n        const q = query(\r\n          ref,\r\n          where('createdBy', '==', userData.uid),\r\n          where(documentId(), 'in', adminData.groupId)\r\n        )\r\n\r\n        const snaps = await getDocs(q)\r\n        const array = []\r\n        snaps.forEach((document) => {\r\n          array.push({ ...document.data(), id: document.id })\r\n        })\r\n\r\n        const newArr = array.map((item) => {\r\n          return { groupName: item.groupName, id: item.id }\r\n        })\r\n\r\n        setGroupNames(newArr)\r\n      } catch (error) {\r\n        console.log(error)\r\n      }\r\n    }\r\n\r\n    getGroups()\r\n  }, [])\r\n\r\n  // Get All Users\r\n  useEffect(() => {\r\n    const getPhoneNumbers = async () => {\r\n      try {\r\n        const trackingUserRef = collection(db, 'trackingUsers')\r\n        const q = query(\r\n          trackingUserRef,\r\n          where('senderId', '==', userData.uid),\r\n          where('groupId', 'array-contains-any', adminData.groupId)\r\n        )\r\n\r\n        const snaps = await getDocs(q)\r\n        const users = []\r\n        const numbers = []\r\n        snaps.forEach((document) => {\r\n          users.push({ ...document.data(), id: document.id })\r\n          numbers.push(document.data().phoneNumber)\r\n        })\r\n        setPhoneNumbers(numbers)\r\n        setMobileDevices(users)\r\n      } catch (error) {\r\n        console.log(error)\r\n      }\r\n    }\r\n\r\n    getPhoneNumbers()\r\n  }, [])\r\n\r\n  const getFromDB = async (device, hotspot) => {\r\n    return new Promise(async (resolve) => {\r\n      const ref = collection(\r\n        db,\r\n        'trackingAttendance',\r\n        device.phoneNumber,\r\n        userData.uid\r\n      )\r\n\r\n      const q = query(ref, where('hotspotId', '==', hotspot.id))\r\n      await getDocs(q).then((res) => {\r\n        resolve({ count: res.docs.length, hotspot: hotspot.hotspotName })\r\n      })\r\n    })\r\n  }\r\n\r\n  const getHotspotsData = async (device, hotspots) => {\r\n    return new Promise(async (resolve) => {\r\n      const arr = []\r\n      for (let hotspot of hotspots) {\r\n        const data = await getFromDB(device, hotspot)\r\n        arr.push(data)\r\n      }\r\n      resolve(arr)\r\n    })\r\n  }\r\n\r\n  const getCollapseData = async (device, hotspots) => {\r\n    return new Promise(async (resolve) => {\r\n      const hotspotName = hotspots.map((x) => {\r\n        return x.hotspotName\r\n      })\r\n      const ref = collection(\r\n        db,\r\n        'trackingLocations',\r\n        device.phoneNumber,\r\n        'locations'\r\n      )\r\n      let q\r\n      console.log(Months.indexOf(selectedMonth), selectedMonth)\r\n      if (selectedGroupNames.length !== 0) {\r\n        q = query(\r\n          ref,\r\n          where('trackerId', '==', userData.uid),\r\n          where('group', 'in', selectedGroupNames),\r\n          where('month', '==', Months.indexOf(selectedMonth) + 1),\r\n          orderBy('createdAt', 'desc'),\r\n          limit(100)\r\n        )\r\n      } else {\r\n        q = query(\r\n          ref,\r\n          where('trackerId', '==', userData.uid),\r\n          where('hotspot', 'in', hotspotName),\r\n          where('month', '==', Months.indexOf(selectedMonth) + 1),\r\n          orderBy('createdAt', 'desc'),\r\n          limit(100)\r\n        )\r\n      }\r\n\r\n      const snaps = await getDocs(q)\r\n      const arr = []\r\n      snaps.forEach((snap) => {\r\n        const data = snap.data()\r\n        arr.push(data)\r\n      })\r\n      console.log(arr)\r\n      resolve(arr)\r\n    })\r\n  }\r\n\r\n  const getDocuments = async (devices, hotspots) => {\r\n    const dataArr = []\r\n\r\n    for (let device of devices) {\r\n      const finalData = {}\r\n      const history = await getCollapseData(device, hotspots)\r\n      const data = await getHotspotsData(device, hotspots)\r\n      finalData['history'] = history\r\n      finalData['data'] = data\r\n      finalData['device'] = {\r\n        phoneNumber: device.phoneNumber,\r\n        fullName: device.fullName,\r\n      }\r\n      dataArr.push(finalData)\r\n    }\r\n\r\n    setTableData(dataArr)\r\n    setLoading(false)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (phoneNumbers.length !== 0 && mobileDevices.length !== 0) {\r\n      setLoading(true)\r\n      if (!filter) {\r\n        getDocuments(mobileDevices, hotspotNames)\r\n      }\r\n    }\r\n  }, [phoneNumbers, mobileDevices, filter])\r\n\r\n  // handling hotspot selection\r\n  const handleHotspotSelect = async (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event\r\n    setSelectedHotspotNames(\r\n      typeof value === 'string' ? value.split(',') : value\r\n    )\r\n  }\r\n\r\n  // handling group selection\r\n  const handleGroupSelect = async (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event\r\n    setSelectedGroupNames(typeof value === 'string' ? value.split(',') : value)\r\n  }\r\n\r\n  // handling device selection\r\n  const handleSelectedDevice = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event\r\n    setSelectedDevices(typeof value === 'string' ? value.split(',') : value)\r\n  }\r\n\r\n  // applying filter\r\n  useEffect(async () => {\r\n    setLoading(true)\r\n    let hotspots = []\r\n    if (selectedHotspotNames.length !== 0) {\r\n      selectedHotspotNames.forEach((x) => {\r\n        const temp = hotspotNames\r\n        const filterArr = temp.filter((item) => item.hotspotName === x)\r\n        hotspots.push(...filterArr)\r\n      })\r\n      setFilter(true)\r\n    } else {\r\n      hotspots = hotspotNames\r\n      setFilter(false)\r\n    }\r\n\r\n    setSelectedHotspots(hotspots)\r\n    let devices = []\r\n    if (selectedDevices.length !== 0) {\r\n      mobileDevices.forEach((d) => {\r\n        selectedDevices.forEach((x, i) => {\r\n          const number = x.split(' - ')[1]\r\n          if (d.phoneNumber === number) {\r\n            devices.push(d)\r\n          }\r\n        })\r\n      })\r\n      setFilter(true)\r\n    } else {\r\n      devices = mobileDevices\r\n      setFilter(false)\r\n    }\r\n\r\n    if (selectedGroupNames.length === 0) {\r\n      setFilter(false)\r\n    }\r\n\r\n    await getDocuments(devices, hotspots)\r\n  }, [selectedDevices, selectedHotspotNames, selectedGroupNames, selectedMonth])\r\n\r\n  return (\r\n    <Box sx={{ p: 5 }}>\r\n      <Box\r\n        sx={{\r\n          display: 'flex',\r\n          justifyContent: 'flex-end',\r\n          gap: 2,\r\n          mt: 4,\r\n        }}\r\n      >\r\n        <MonthFilter\r\n          Months={Months}\r\n          selectedMonth={selectedMonth}\r\n          setSelectedMonth={setSelectedMonth}\r\n        />\r\n\r\n        <HotspotFilter\r\n          handleHotspotSelect={handleHotspotSelect}\r\n          selectedHotspotNames={selectedHotspotNames}\r\n          hotspotNames={hotspotNames}\r\n        />\r\n\r\n        <GroupFilter\r\n          handleGroupSelect={handleGroupSelect}\r\n          selectedGroupNames={selectedGroupNames}\r\n          groupNames={groupNames}\r\n        />\r\n\r\n        <DeviceFilter\r\n          handleSelectedDevice={handleSelectedDevice}\r\n          selectedDevices={selectedDevices}\r\n          mobileDevices={mobileDevices}\r\n        />\r\n\r\n        <Button variant='outlined' sx={{ py: 1.3, px: 4, fontSize: 15 }}>\r\n          Export Report\r\n        </Button>\r\n      </Box>\r\n\r\n      <Box sx={{ my: 4 }}>\r\n        {!loading ? (\r\n          <ReportTable\r\n            tableData={tableData}\r\n            hotspotNames={\r\n              selectedHotspotNames.length === 0\r\n                ? hotspotNames\r\n                : selectedHotspots\r\n            }\r\n          />\r\n        ) : (\r\n          <Box\r\n            sx={{\r\n              display: 'flex',\r\n              justifyContent: 'center',\r\n              mt: '300px',\r\n            }}\r\n          >\r\n            <CircularProgress color='inherit' />\r\n          </Box>\r\n        )}\r\n      </Box>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default AdminReport\r\n","import React, { useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { useNavigate, Link as RouterLink } from 'react-router-dom'\r\nimport Avatar from '@mui/material/Avatar'\r\nimport Button from '@mui/material/Button'\r\nimport CssBaseline from '@mui/material/CssBaseline'\r\nimport TextField from '@mui/material/TextField'\r\nimport Paper from '@mui/material/Paper'\r\nimport Grid from '@mui/material/Grid'\r\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined'\r\nimport Typography from '@mui/material/Typography'\r\nimport { CircularProgress } from '@mui/material'\r\nimport { makeStyles } from '@mui/styles'\r\nimport { auth, db } from '../../Firebase'\r\nimport {\r\n    EmailAuthProvider,\r\n    reauthenticateWithCredential,\r\n    signInWithEmailAndPassword,\r\n    updatePassword,\r\n} from 'firebase/auth'\r\nimport { doc, getDoc, updateDoc } from 'firebase/firestore'\r\nimport { updateAdmin } from '../../store/actions/admin'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    image: {\r\n        backgroundImage: 'url(https://source.unsplash.com/random)',\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundColor:\r\n            theme.palette.type === 'light'\r\n                ? theme.palette.grey[50]\r\n                : theme.palette.grey[900],\r\n        backgroundSize: 'cover',\r\n        backgroundPosition: 'center',\r\n    },\r\n    paper: {\r\n        margin: theme.spacing(8, 4),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    login: {\r\n        margin: theme.spacing(3, 0, 2),\r\n        padding: theme.spacing(1.4),\r\n        fontSize: 15,\r\n    },\r\n    googleLogin: {\r\n        margin: theme.spacing(2, 0, 2),\r\n        fontSize: 15,\r\n    },\r\n}))\r\n\r\nconst ChangePassword = () => {\r\n    const classes = useStyles()\r\n    const navigate = useNavigate()\r\n\r\n    const [currentPassword, setCurrentPassword] = useState('')\r\n    const [newPassword, setNewPassword] = useState('')\r\n\r\n    const adminData = sessionStorage.getItem('adminData')\r\n        ? JSON.parse(sessionStorage.getItem('adminData'))\r\n        : null\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const submitHandler = async () => {\r\n        if (adminData === null) {\r\n            return\r\n        }\r\n\r\n        if (newPassword.length < 6) {\r\n            alert('Password must be atleast 6 characters long.')\r\n            return\r\n        }\r\n\r\n        const user = auth.currentUser\r\n        const credential = EmailAuthProvider.credential(\r\n            adminData.email,\r\n            currentPassword\r\n        )\r\n\r\n        reauthenticateWithCredential(user, credential)\r\n            .then(() => {\r\n                updatePassword(user, newPassword)\r\n                    .then(async () => {\r\n                        const body = {\r\n                            _id: adminData._id,\r\n                            passwordChanged: true,\r\n                        }\r\n                        dispatch(updateAdmin(body))\r\n                    })\r\n                    .then(() => {\r\n                        setNewPassword('')\r\n                        setCurrentPassword('')\r\n                        alert('Password updated successfully')\r\n\r\n                        navigate('/app/dashboard', { replace: true })\r\n                    })\r\n                    .catch((err) => {\r\n                        const errorCode = err.code\r\n                        const errorMessage = err.message\r\n                        alert(errorCode, errorMessage)\r\n                    })\r\n            })\r\n            .catch((err) => {\r\n                const errorCode = err.code\r\n                const errorMessage = err.message\r\n                alert(errorCode, errorMessage)\r\n            })\r\n    }\r\n\r\n    return (\r\n        <Grid\r\n            sx={{ height: '100%' }}\r\n            container\r\n            component='main'\r\n            className={classes.root}\r\n        >\r\n            <CssBaseline />\r\n            <Grid item xs={false} sm={4} md={7} className={classes.image} />\r\n            <Grid\r\n                item\r\n                xs={12}\r\n                sm={8}\r\n                md={5}\r\n                component={Paper}\r\n                elevation={6}\r\n                square\r\n            >\r\n                <div className={classes.paper}>\r\n                    <Avatar className={classes.avatar}>\r\n                        <LockOutlinedIcon />\r\n                    </Avatar>\r\n                    <Typography\r\n                        component='h1'\r\n                        variant='h1'\r\n                        sx={{ mt: 1, mb: 4 }}\r\n                    >\r\n                        Change Password\r\n                    </Typography>\r\n                    <form className={classes.form} noValidate>\r\n                        <TextField\r\n                            variant='outlined'\r\n                            margin='normal'\r\n                            fullWidth\r\n                            id='password'\r\n                            label='Current Password'\r\n                            name='password'\r\n                            autoComplete='name'\r\n                            type='password'\r\n                            value={currentPassword}\r\n                            onChange={(e) => setCurrentPassword(e.target.value)}\r\n                        />\r\n                        <TextField\r\n                            variant='outlined'\r\n                            margin='normal'\r\n                            fullWidth\r\n                            id='password'\r\n                            label='New Password'\r\n                            name='password'\r\n                            type='password'\r\n                            autoComplete='name'\r\n                            value={newPassword}\r\n                            onChange={(e) => setNewPassword(e.target.value)}\r\n                        />\r\n                        <Button\r\n                            fullWidth\r\n                            variant='contained'\r\n                            color='primary'\r\n                            className={classes.login}\r\n                            onClick={() => submitHandler()}\r\n                        >\r\n                            Change Password\r\n                        </Button>\r\n                    </form>\r\n                </div>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default ChangePassword\r\n","import React from 'react'\r\nimport {\r\n    Button,\r\n    Card,\r\n    Chip,\r\n    List,\r\n    ListItem,\r\n    ListItemIcon,\r\n    ListItemText,\r\n    Slider,\r\n    Stack,\r\n    Typography,\r\n    Box,\r\n} from '@mui/material'\r\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle'\r\n\r\nconst ProCard = (props) => {\r\n    const benefits = [\r\n        'Unlimited Hotspots',\r\n        'Unlimited Devices',\r\n        'Unlimited Groups',\r\n        'Unlimited Admins',\r\n        'Get Report of Unlimited Period',\r\n    ]\r\n    return (\r\n        <Card\r\n            className='pricing-card pro'\r\n            sx={{\r\n                boxShadow: 15,\r\n                py: 5,\r\n                px: 4,\r\n            }}\r\n        >\r\n            <Box>\r\n                <Stack\r\n                    spacing={2}\r\n                    direction='row'\r\n                    sx={{ mb: 1 }}\r\n                    alignItems='center'\r\n                    justifyContent='space-between'\r\n                >\r\n                    {/* <FavoriteBorderOutlinedIcon\r\n                                sx={{\r\n                                    fontSize: 50,\r\n                                }}\r\n                                htmlColor='#e91e63'\r\n                            /> */}\r\n\r\n                    <Typography\r\n                        variant='h1'\r\n                        sx={{ my: 2, fontSize: 40, color: 'white' }}\r\n                    >\r\n                        {`$${props.value}`}\r\n                    </Typography>\r\n                    {props.isCurrent && (\r\n                        <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                            <div\r\n                                style={{\r\n                                    width: '15px',\r\n                                    height: '15px',\r\n                                    backgroundColor: '#4CAF50',\r\n                                    borderRadius: '50%',\r\n                                }}\r\n                            ></div>\r\n                            <Typography\r\n                                variant='h4'\r\n                                sx={{ my: 2, color: '#4CAF50', ml: 1 }}\r\n                            >\r\n                                Active\r\n                            </Typography>\r\n                        </Box>\r\n                    )}\r\n                </Stack>\r\n                <Chip\r\n                    label='Pro Account'\r\n                    variant='outlined'\r\n                    className='chip'\r\n                    sx={{\r\n                        my: 2,\r\n                        color: '#fb8c00',\r\n                        border: '1.5px solid #fb8c00',\r\n                        width: '100%',\r\n                    }}\r\n                />\r\n\r\n                <Stack direction='row' justifyContent='space-between'>\r\n                    <Typography\r\n                        variant='h1'\r\n                        sx={{ my: 2, fontSize: 40, color: 'white' }}\r\n                    >\r\n                        $1{' '}\r\n                        <span\r\n                            style={{\r\n                                color: 'gray',\r\n                                fontSize: 15,\r\n                                textTransform: 'uppercase',\r\n                            }}\r\n                        >\r\n                            / user\r\n                        </span>\r\n                    </Typography>\r\n\r\n                    <Typography\r\n                        variant='h1'\r\n                        sx={{ my: 2, fontSize: 40, color: 'white' }}\r\n                    >\r\n                        {`${props.value}`}\r\n                    </Typography>\r\n                </Stack>\r\n\r\n                <Stack\r\n                    spacing={2}\r\n                    direction='row'\r\n                    sx={{ mb: 1 }}\r\n                    alignItems='center'\r\n                >\r\n                    <Typography variant='h5' color='white'>\r\n                        0\r\n                    </Typography>\r\n                    <Slider\r\n                        sx={{ color: 'whitesmoke' }}\r\n                        value={props.value}\r\n                        onChange={props.handleValueChange}\r\n                        max={1000}\r\n                    />\r\n                    <Typography variant='h5' color='white'>\r\n                        1000\r\n                    </Typography>\r\n                </Stack>\r\n\r\n                <List sx={{ my: 3 }}>\r\n                    {benefits.map((x) => (\r\n                        <ListItem disablePadding key={x}>\r\n                            <ListItemIcon>\r\n                                <CheckCircleIcon\r\n                                    htmlColor='#4CAF50'\r\n                                    sx={{ fontSize: 27, my: 0.5, ml: 0.5 }}\r\n                                />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={x} sx={{ color: 'white' }} />\r\n                        </ListItem>\r\n                    ))}\r\n                </List>\r\n            </Box>\r\n\r\n            <Button\r\n                className='pro-btn btn'\r\n                variant='contained'\r\n                //</Card>disabled={props.isCurrent}\r\n                sx={{\r\n                    py: 1.4,\r\n                    borderRadius: 25,\r\n                    boxShadow: 5,\r\n                }}\r\n                onClick={props.action}\r\n            >\r\n                Pay as you go\r\n            </Button>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default ProCard\r\n","import React from 'react'\r\nimport {\r\n    Button,\r\n    Card,\r\n    Chip,\r\n    List,\r\n    ListItem,\r\n    ListItemIcon,\r\n    ListItemText,\r\n    Slider,\r\n    Stack,\r\n    Typography,\r\n    Box,\r\n} from '@mui/material'\r\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle'\r\nimport CancelIcon from '@mui/icons-material/Cancel'\r\nimport FavoriteBorderOutlinedIcon from '@mui/icons-material/FavoriteBorderOutlined'\r\n\r\nconst FreeCard = (props) => {\r\n    const benefits = [\r\n        'Only 10 Hotspots',\r\n        'Unlimited Devices',\r\n        'Only 2 Groups',\r\n        'No Admins',\r\n        'Get Report of last 1 month',\r\n    ]\r\n    return (\r\n        <Card\r\n            className='pricing-card'\r\n            sx={{\r\n                py: 5,\r\n                px: 4,\r\n            }}\r\n        >\r\n            <Box>\r\n                <Stack\r\n                    spacing={2}\r\n                    direction='row'\r\n                    sx={{ mb: 1 }}\r\n                    alignItems='center'\r\n                    justifyContent='space-between'\r\n                >\r\n                    <Typography variant='h1' sx={{ my: 2, fontSize: 40 }}>\r\n                        $0\r\n                    </Typography>\r\n                    {props.isCurrent && (\r\n                        <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                            <div\r\n                                style={{\r\n                                    width: '15px',\r\n                                    height: '15px',\r\n                                    backgroundColor: 'green',\r\n                                    borderRadius: '50%',\r\n                                }}\r\n                            ></div>\r\n                            <Typography\r\n                                variant='h4'\r\n                                sx={{ my: 2, color: '#4CAF50', ml: 1 }}\r\n                            >\r\n                                Active\r\n                            </Typography>\r\n                        </Box>\r\n                    )}\r\n                </Stack>\r\n                <Chip\r\n                    label='Free Account'\r\n                    variant='outlined'\r\n                    className='chip'\r\n                    sx={{\r\n                        my: 2,\r\n                        color: '#e91e63',\r\n                        border: '1.5px solid #e91e63',\r\n                        width: '100%',\r\n                    }}\r\n                />\r\n                <Typography variant='h1' sx={{ my: 2, fontSize: 40 }}>\r\n                    $0{' '}\r\n                    <span\r\n                        style={{\r\n                            color: 'gray',\r\n                            fontSize: 15,\r\n                            textTransform: 'uppercase',\r\n                        }}\r\n                    >\r\n                        / user\r\n                    </span>\r\n                </Typography>\r\n\r\n                <List sx={{ my: 3, mt: 8 }}>\r\n                    {benefits.map((x, i) => (\r\n                        <ListItem key={i} disablePadding>\r\n                            <ListItemIcon>\r\n                                {i === 1 ? (\r\n                                    <CheckCircleIcon\r\n                                        htmlColor='#4CAF50'\r\n                                        sx={{ fontSize: 27, my: 0.5, ml: 0.5 }}\r\n                                    />\r\n                                ) : (\r\n                                    <CancelIcon\r\n                                        htmlColor='#e91e63'\r\n                                        sx={{ fontSize: 27, my: 0.5, ml: 0.5 }}\r\n                                    />\r\n                                )}\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={x} />\r\n                        </ListItem>\r\n                    ))}\r\n                </List>\r\n            </Box>\r\n\r\n            <Button\r\n                className='free-btn btn'\r\n                variant='outlined'\r\n                disabled={props.isCurrent}\r\n                sx={{\r\n                    py: 1.4,\r\n                    borderRadius: 25,\r\n                    boxShadow: 5,\r\n                }}\r\n                onClick={props.action}\r\n            >\r\n                Pick free plan\r\n            </Button>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default FreeCard\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useLocation, useNavigate } from 'react-router'\r\nimport { Box, Typography } from '@mui/material'\r\n\r\nimport ProCard from '../components/pricing/ProCard'\r\nimport FreeCard from '../components/pricing/FreeCard'\r\nimport { useSubscription } from '../hooks/useSubscription'\r\nimport axios from 'axios'\r\nimport { API_SERVICE } from '../URI'\r\n\r\nconst Pricing = () => {\r\n    const [quantity, setQuantity] = React.useState(500)\r\n    const [currentPlan, setCurrentPlan] = useState('')\r\n    const [prices, setPrices] = useState([])\r\n\r\n    const navigate = useNavigate()\r\n\r\n    const { state, dispatch } = useSubscription()\r\n    const customerId = state?.customerId\r\n\r\n    useEffect(() => {\r\n        if (state.subscriptions) {\r\n            let subscription\r\n            for (let sub of state?.subscriptions?.data) {\r\n                if (sub.status === 'active') {\r\n                    subscription = sub\r\n                    break\r\n                }\r\n            }\r\n\r\n            const plan = subscription ? subscription.plan.id : ''\r\n            const subQuantity = subscription ? subscription.quantity : 0\r\n\r\n            setCurrentPlan(plan)\r\n            setQuantity(subQuantity)\r\n        }\r\n    }, [state])\r\n\r\n    useEffect(() => {\r\n        const fetchPrices = async () => {\r\n            const { data } = await axios.get(\r\n                `${API_SERVICE}/subscription/config`\r\n            )\r\n\r\n            console.log(data)\r\n            setPrices(data.prices)\r\n        }\r\n\r\n        fetchPrices()\r\n    }, [])\r\n\r\n    const handleValueChange = (_, newValue) => {\r\n        setQuantity(newValue)\r\n    }\r\n\r\n    const createSubscription = async (product, amount) => {\r\n        if (amount <= 0) {\r\n            alert('Please select atlest one user')\r\n            return\r\n        }\r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n            }\r\n            const body = {\r\n                customerId,\r\n                priceId: product.id,\r\n                quantity: amount,\r\n            }\r\n            const { data } = await axios.post(\r\n                `${API_SERVICE}/create/subscription`,\r\n                body,\r\n                config\r\n            )\r\n\r\n            console.log(data)\r\n            const { clientSecret } = data\r\n\r\n            if (!clientSecret) {\r\n                console.log('Cannot create Subscription')\r\n                dispatch({\r\n                    type: 'SELECT_PRODUCT',\r\n                    payload: {\r\n                        cart: { product, clientSecret },\r\n                    },\r\n                })\r\n                console.log('Here')\r\n\r\n                if (product.product.name === 'Free Plan') {\r\n                    window.location.reload()\r\n                }\r\n            } else {\r\n                dispatch({\r\n                    type: 'SELECT_PRODUCT',\r\n                    payload: {\r\n                        cart: { product, clientSecret },\r\n                    },\r\n                })\r\n\r\n                if (product.product.name === 'Free Plan') {\r\n                    window.location.reload()\r\n                }\r\n                navigate('/subscribe', { state: { quantity } })\r\n            }\r\n        } catch (error) {\r\n            console.log(error.message)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Box sx={{ p: 2 }}>\r\n            <Box sx={{ mt: 2, mb: 5 }}>\r\n                <Typography variant='h2' sx={{ textAlign: 'center' }}>\r\n                    Choose your plan\r\n                </Typography>\r\n                <Typography\r\n                    vanriant='h6'\r\n                    sx={{\r\n                        textAlign: 'center',\r\n                        mt: 2,\r\n                        letterSpacing: 0.6,\r\n                        color: 'gray',\r\n                    }}\r\n                >\r\n                    Select one of our plans below as per your convenience\r\n                </Typography>\r\n            </Box>\r\n            <Box\r\n                className='card-container'\r\n                sx={{\r\n                    mt: 6,\r\n                }}\r\n            >\r\n                {prices.map((price) => (\r\n                    <Box key={price.id}>\r\n                        {price.product.name === 'Pro Plan' && (\r\n                            <ProCard\r\n                                value={quantity}\r\n                                handleValueChange={handleValueChange}\r\n                                isCurrent={currentPlan === price.id}\r\n                                action={() =>\r\n                                    createSubscription(price, quantity)\r\n                                }\r\n                            />\r\n                        )}\r\n                        {price.product.name === 'Free Plan' && (\r\n                            <FreeCard\r\n                                isCurrent={currentPlan === price.id}\r\n                                action={() => createSubscription(price, 1)}\r\n                            />\r\n                        )}\r\n                    </Box>\r\n                ))}\r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Pricing\r\n","import React, { useState } from 'react'\r\nimport { CardElement, PaymentElement } from '@stripe/react-stripe-js'\r\nimport Box from '@mui/material/Box'\r\nimport Card from '@mui/material/Card'\r\nimport CardActions from '@mui/material/CardActions'\r\nimport CardContent from '@mui/material/CardContent'\r\nimport Button from '@mui/material/Button'\r\nimport Typography from '@mui/material/Typography'\r\nimport { Grid, TextField } from '@mui/material'\r\nimport { useSubscription } from '../../hooks/useSubscription'\r\nimport ArrowBackIosNewOutlinedIcon from '@mui/icons-material/ArrowBackIosNewOutlined'\r\n\r\nfunction CardSection({ handleBack, handleSubmit, quantity }) {\r\n    const { state } = useSubscription()\r\n    console.log(state)\r\n\r\n    return (\r\n        <Box>\r\n            <Grid container spacing={3}>\r\n                <Grid item xs={12}>\r\n                    <h4>Enter Card Details</h4>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Box>\r\n                        <CardElement />\r\n                    </Box>\r\n                </Grid>\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n                <Box\r\n                    mt={5}\r\n                    alignItems='center'\r\n                    justifyContent='space-between'\r\n                    display='flex'\r\n                >\r\n                    <Button\r\n                        startIcon={<ArrowBackIosNewOutlinedIcon />}\r\n                        onClick={handleBack}\r\n                    >\r\n                        Go Back\r\n                    </Button>\r\n                    <Button\r\n                        type='submit'\r\n                        variant='contained'\r\n                        onClick={handleSubmit}\r\n                        sx={{ py: 1.2, fontSize: 14, px: '40px' }}\r\n                    >\r\n                        {`PAY  $${quantity}`}\r\n                    </Button>\r\n                </Box>\r\n            </Grid>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default CardSection\r\n","export const countries = [\r\n    { name: 'Afghanistan', code: 'AF' },\r\n    { name: 'Åland Islands', code: 'AX' },\r\n    { name: 'Albania', code: 'AL' },\r\n    { name: 'Algeria', code: 'DZ' },\r\n    { name: 'American Samoa', code: 'AS' },\r\n    { name: 'AndorrA', code: 'AD' },\r\n    { name: 'Angola', code: 'AO' },\r\n    { name: 'Anguilla', code: 'AI' },\r\n    { name: 'Antarctica', code: 'AQ' },\r\n    { name: 'Antigua and Barbuda', code: 'AG' },\r\n    { name: 'Argentina', code: 'AR' },\r\n    { name: 'Armenia', code: 'AM' },\r\n    { name: 'Aruba', code: 'AW' },\r\n    { name: 'Australia', code: 'AU' },\r\n    { name: 'Austria', code: 'AT' },\r\n    { name: 'Azerbaijan', code: 'AZ' },\r\n    { name: 'Bahamas', code: 'BS' },\r\n    { name: 'Bahrain', code: 'BH' },\r\n    { name: 'Bangladesh', code: 'BD' },\r\n    { name: 'Barbados', code: 'BB' },\r\n    { name: 'Belarus', code: 'BY' },\r\n    { name: 'Belgium', code: 'BE' },\r\n    { name: 'Belize', code: 'BZ' },\r\n    { name: 'Benin', code: 'BJ' },\r\n    { name: 'Bermuda', code: 'BM' },\r\n    { name: 'Bhutan', code: 'BT' },\r\n    { name: 'Bolivia', code: 'BO' },\r\n    { name: 'Bosnia and Herzegovina', code: 'BA' },\r\n    { name: 'Botswana', code: 'BW' },\r\n    { name: 'Bouvet Island', code: 'BV' },\r\n    { name: 'Brazil', code: 'BR' },\r\n    { name: 'British Indian Ocean Territory', code: 'IO' },\r\n    { name: 'Brunei Darussalam', code: 'BN' },\r\n    { name: 'Bulgaria', code: 'BG' },\r\n    { name: 'Burkina Faso', code: 'BF' },\r\n    { name: 'Burundi', code: 'BI' },\r\n    { name: 'Cambodia', code: 'KH' },\r\n    { name: 'Cameroon', code: 'CM' },\r\n    { name: 'Canada', code: 'CA' },\r\n    { name: 'Cape Verde', code: 'CV' },\r\n    { name: 'Cayman Islands', code: 'KY' },\r\n    { name: 'Central African Republic', code: 'CF' },\r\n    { name: 'Chad', code: 'TD' },\r\n    { name: 'Chile', code: 'CL' },\r\n    { name: 'China', code: 'CN' },\r\n    { name: 'Christmas Island', code: 'CX' },\r\n    { name: 'Cocos (Keeling) Islands', code: 'CC' },\r\n    { name: 'Colombia', code: 'CO' },\r\n    { name: 'Comoros', code: 'KM' },\r\n    { name: 'Congo', code: 'CG' },\r\n    { name: 'Congo, The Democratic Republic of the', code: 'CD' },\r\n    { name: 'Cook Islands', code: 'CK' },\r\n    { name: 'Costa Rica', code: 'CR' },\r\n    { name: \"Cote D'Ivoire\", code: 'CI' },\r\n    { name: 'Croatia', code: 'HR' },\r\n    { name: 'Cuba', code: 'CU' },\r\n    { name: 'Cyprus', code: 'CY' },\r\n    { name: 'Czech Republic', code: 'CZ' },\r\n    { name: 'Denmark', code: 'DK' },\r\n    { name: 'Djibouti', code: 'DJ' },\r\n    { name: 'Dominica', code: 'DM' },\r\n    { name: 'Dominican Republic', code: 'DO' },\r\n    { name: 'Ecuador', code: 'EC' },\r\n    { name: 'Egypt', code: 'EG' },\r\n    { name: 'El Salvador', code: 'SV' },\r\n    { name: 'Equatorial Guinea', code: 'GQ' },\r\n    { name: 'Eritrea', code: 'ER' },\r\n    { name: 'Estonia', code: 'EE' },\r\n    { name: 'Ethiopia', code: 'ET' },\r\n    { name: 'Falkland Islands (Malvinas)', code: 'FK' },\r\n    { name: 'Faroe Islands', code: 'FO' },\r\n    { name: 'Fiji', code: 'FJ' },\r\n    { name: 'Finland', code: 'FI' },\r\n    { name: 'France', code: 'FR' },\r\n    { name: 'French Guiana', code: 'GF' },\r\n    { name: 'French Polynesia', code: 'PF' },\r\n    { name: 'French Southern Territories', code: 'TF' },\r\n    { name: 'Gabon', code: 'GA' },\r\n    { name: 'Gambia', code: 'GM' },\r\n    { name: 'Georgia', code: 'GE' },\r\n    { name: 'Germany', code: 'DE' },\r\n    { name: 'Ghana', code: 'GH' },\r\n    { name: 'Gibraltar', code: 'GI' },\r\n    { name: 'Greece', code: 'GR' },\r\n    { name: 'Greenland', code: 'GL' },\r\n    { name: 'Grenada', code: 'GD' },\r\n    { name: 'Guadeloupe', code: 'GP' },\r\n    { name: 'Guam', code: 'GU' },\r\n    { name: 'Guatemala', code: 'GT' },\r\n    { name: 'Guernsey', code: 'GG' },\r\n    { name: 'Guinea', code: 'GN' },\r\n    { name: 'Guinea-Bissau', code: 'GW' },\r\n    { name: 'Guyana', code: 'GY' },\r\n    { name: 'Haiti', code: 'HT' },\r\n    { name: 'Heard Island and Mcdonald Islands', code: 'HM' },\r\n    { name: 'Holy See (Vatican City State)', code: 'VA' },\r\n    { name: 'Honduras', code: 'HN' },\r\n    { name: 'Hong Kong', code: 'HK' },\r\n    { name: 'Hungary', code: 'HU' },\r\n    { name: 'Iceland', code: 'IS' },\r\n    { name: 'India', code: 'IN' },\r\n    { name: 'Indonesia', code: 'ID' },\r\n    { name: 'Iran, Islamic Republic Of', code: 'IR' },\r\n    { name: 'Iraq', code: 'IQ' },\r\n    { name: 'Ireland', code: 'IE' },\r\n    { name: 'Isle of Man', code: 'IM' },\r\n    { name: 'Israel', code: 'IL' },\r\n    { name: 'Italy', code: 'IT' },\r\n    { name: 'Jamaica', code: 'JM' },\r\n    { name: 'Japan', code: 'JP' },\r\n    { name: 'Jersey', code: 'JE' },\r\n    { name: 'Jordan', code: 'JO' },\r\n    { name: 'Kazakhstan', code: 'KZ' },\r\n    { name: 'Kenya', code: 'KE' },\r\n    { name: 'Kiribati', code: 'KI' },\r\n    { name: \"Korea, Democratic People'S Republic of\", code: 'KP' },\r\n    { name: 'Korea, Republic of', code: 'KR' },\r\n    { name: 'Kuwait', code: 'KW' },\r\n    { name: 'Kyrgyzstan', code: 'KG' },\r\n    { name: \"Lao People'S Democratic Republic\", code: 'LA' },\r\n    { name: 'Latvia', code: 'LV' },\r\n    { name: 'Lebanon', code: 'LB' },\r\n    { name: 'Lesotho', code: 'LS' },\r\n    { name: 'Liberia', code: 'LR' },\r\n    { name: 'Libyan Arab Jamahiriya', code: 'LY' },\r\n    { name: 'Liechtenstein', code: 'LI' },\r\n    { name: 'Lithuania', code: 'LT' },\r\n    { name: 'Luxembourg', code: 'LU' },\r\n    { name: 'Macao', code: 'MO' },\r\n    { name: 'Macedonia, The Former Yugoslav Republic of', code: 'MK' },\r\n    { name: 'Madagascar', code: 'MG' },\r\n    { name: 'Malawi', code: 'MW' },\r\n    { name: 'Malaysia', code: 'MY' },\r\n    { name: 'Maldives', code: 'MV' },\r\n    { name: 'Mali', code: 'ML' },\r\n    { name: 'Malta', code: 'MT' },\r\n    { name: 'Marshall Islands', code: 'MH' },\r\n    { name: 'Martinique', code: 'MQ' },\r\n    { name: 'Mauritania', code: 'MR' },\r\n    { name: 'Mauritius', code: 'MU' },\r\n    { name: 'Mayotte', code: 'YT' },\r\n    { name: 'Mexico', code: 'MX' },\r\n    { name: 'Micronesia, Federated States of', code: 'FM' },\r\n    { name: 'Moldova, Republic of', code: 'MD' },\r\n    { name: 'Monaco', code: 'MC' },\r\n    { name: 'Mongolia', code: 'MN' },\r\n    { name: 'Montserrat', code: 'MS' },\r\n    { name: 'Morocco', code: 'MA' },\r\n    { name: 'Mozambique', code: 'MZ' },\r\n    { name: 'Myanmar', code: 'MM' },\r\n    { name: 'Namibia', code: 'NA' },\r\n    { name: 'Nauru', code: 'NR' },\r\n    { name: 'Nepal', code: 'NP' },\r\n    { name: 'Netherlands', code: 'NL' },\r\n    { name: 'Netherlands Antilles', code: 'AN' },\r\n    { name: 'New Caledonia', code: 'NC' },\r\n    { name: 'New Zealand', code: 'NZ' },\r\n    { name: 'Nicaragua', code: 'NI' },\r\n    { name: 'Niger', code: 'NE' },\r\n    { name: 'Nigeria', code: 'NG' },\r\n    { name: 'Niue', code: 'NU' },\r\n    { name: 'Norfolk Island', code: 'NF' },\r\n    { name: 'Northern Mariana Islands', code: 'MP' },\r\n    { name: 'Norway', code: 'NO' },\r\n    { name: 'Oman', code: 'OM' },\r\n    { name: 'Pakistan', code: 'PK' },\r\n    { name: 'Palau', code: 'PW' },\r\n    { name: 'Palestinian Territory, Occupied', code: 'PS' },\r\n    { name: 'Panama', code: 'PA' },\r\n    { name: 'Papua New Guinea', code: 'PG' },\r\n    { name: 'Paraguay', code: 'PY' },\r\n    { name: 'Peru', code: 'PE' },\r\n    { name: 'Philippines', code: 'PH' },\r\n    { name: 'Pitcairn', code: 'PN' },\r\n    { name: 'Poland', code: 'PL' },\r\n    { name: 'Portugal', code: 'PT' },\r\n    { name: 'Puerto Rico', code: 'PR' },\r\n    { name: 'Qatar', code: 'QA' },\r\n    { name: 'Reunion', code: 'RE' },\r\n    { name: 'Romania', code: 'RO' },\r\n    { name: 'Russian Federation', code: 'RU' },\r\n    { name: 'RWANDA', code: 'RW' },\r\n    { name: 'Saint Helena', code: 'SH' },\r\n    { name: 'Saint Kitts and Nevis', code: 'KN' },\r\n    { name: 'Saint Lucia', code: 'LC' },\r\n    { name: 'Saint Pierre and Miquelon', code: 'PM' },\r\n    { name: 'Saint Vincent and the Grenadines', code: 'VC' },\r\n    { name: 'Samoa', code: 'WS' },\r\n    { name: 'San Marino', code: 'SM' },\r\n    { name: 'Sao Tome and Principe', code: 'ST' },\r\n    { name: 'Saudi Arabia', code: 'SA' },\r\n    { name: 'Senegal', code: 'SN' },\r\n    { name: 'Serbia and Montenegro', code: 'CS' },\r\n    { name: 'Seychelles', code: 'SC' },\r\n    { name: 'Sierra Leone', code: 'SL' },\r\n    { name: 'Singapore', code: 'SG' },\r\n    { name: 'Slovakia', code: 'SK' },\r\n    { name: 'Slovenia', code: 'SI' },\r\n    { name: 'Solomon Islands', code: 'SB' },\r\n    { name: 'Somalia', code: 'SO' },\r\n    { name: 'South Africa', code: 'ZA' },\r\n    { name: 'South Georgia and the South Sandwich Islands', code: 'GS' },\r\n    { name: 'Spain', code: 'ES' },\r\n    { name: 'Sri Lanka', code: 'LK' },\r\n    { name: 'Sudan', code: 'SD' },\r\n    { name: 'Suriname', code: 'SR' },\r\n    { name: 'Svalbard and Jan Mayen', code: 'SJ' },\r\n    { name: 'Swaziland', code: 'SZ' },\r\n    { name: 'Sweden', code: 'SE' },\r\n    { name: 'Switzerland', code: 'CH' },\r\n    { name: 'Syrian Arab Republic', code: 'SY' },\r\n    { name: 'Taiwan, Province of China', code: 'TW' },\r\n    { name: 'Tajikistan', code: 'TJ' },\r\n    { name: 'Tanzania, United Republic of', code: 'TZ' },\r\n    { name: 'Thailand', code: 'TH' },\r\n    { name: 'Timor-Leste', code: 'TL' },\r\n    { name: 'Togo', code: 'TG' },\r\n    { name: 'Tokelau', code: 'TK' },\r\n    { name: 'Tonga', code: 'TO' },\r\n    { name: 'Trinidad and Tobago', code: 'TT' },\r\n    { name: 'Tunisia', code: 'TN' },\r\n    { name: 'Turkey', code: 'TR' },\r\n    { name: 'Turkmenistan', code: 'TM' },\r\n    { name: 'Turks and Caicos Islands', code: 'TC' },\r\n    { name: 'Tuvalu', code: 'TV' },\r\n    { name: 'Uganda', code: 'UG' },\r\n    { name: 'Ukraine', code: 'UA' },\r\n    { name: 'United Arab Emirates', code: 'AE' },\r\n    { name: 'United Kingdom', code: 'GB' },\r\n    { name: 'United States', code: 'US' },\r\n    { name: 'United States Minor Outlying Islands', code: 'UM' },\r\n    { name: 'Uruguay', code: 'UY' },\r\n    { name: 'Uzbekistan', code: 'UZ' },\r\n    { name: 'Vanuatu', code: 'VU' },\r\n    { name: 'Venezuela', code: 'VE' },\r\n    { name: 'Viet Nam', code: 'VN' },\r\n    { name: 'Virgin Islands, British', code: 'VG' },\r\n    { name: 'Virgin Islands, U.S.', code: 'VI' },\r\n    { name: 'Wallis and Futuna', code: 'WF' },\r\n    { name: 'Western Sahara', code: 'EH' },\r\n    { name: 'Yemen', code: 'YE' },\r\n    { name: 'Zambia', code: 'ZM' },\r\n    { name: 'Zimbabwe', code: 'ZW' },\r\n]\r\n","import React, { useState } from 'react'\r\nimport Box from '@mui/material/Box'\r\n\r\nimport Button from '@mui/material/Button'\r\nimport InputLabel from '@mui/material/InputLabel'\r\nimport MenuItem from '@mui/material/MenuItem'\r\nimport FormControl from '@mui/material/FormControl'\r\nimport Select from '@mui/material/Select'\r\nimport { Grid, TextField } from '@mui/material'\r\nimport { countries } from '../../utils/getCountryCode'\r\nimport { useSubscription } from '../../hooks/useSubscription'\r\n\r\nfunction Details(props) {\r\n    const { state } = useSubscription()\r\n    const info = state?.cart?.details\r\n    const [details, setDetails] = useState(\r\n        info\r\n            ? info\r\n            : {\r\n                  name: '',\r\n                  address: '',\r\n                  city: '',\r\n                  state: '',\r\n                  country: '',\r\n              }\r\n    )\r\n\r\n    const handleChange = (e) => {\r\n        setDetails({ ...details, [e.target.name]: e.target.value })\r\n    }\r\n\r\n    const handleDetails = (data) => {\r\n        if (Object.values(data).includes('')) {\r\n            props.setErrorMsg('All Fields are required')\r\n            props.setSnackOpen(true)\r\n            return\r\n        }\r\n        props.handleNext(data)\r\n    }\r\n\r\n    return (\r\n        <Box>\r\n            <Grid container spacing={3}>\r\n                <Grid item xs={12}>\r\n                    <h4>Payment Details</h4>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <TextField\r\n                        autoFocus\r\n                        fullWidth\r\n                        label='Card Holder Name'\r\n                        name='name'\r\n                        required\r\n                        value={details.name}\r\n                        onChange={handleChange}\r\n                    />\r\n                </Grid>\r\n\r\n                <Grid item md={12} xs={12}>\r\n                    <h4>Billing Details</h4>\r\n                </Grid>\r\n                <Grid item md={6} xs={12}>\r\n                    <TextField\r\n                        fullWidth\r\n                        label='Street Address'\r\n                        name='address'\r\n                        required\r\n                        value={details.address}\r\n                        onChange={handleChange}\r\n                    />\r\n                </Grid>\r\n\r\n                <Grid item md={6} xs={12}>\r\n                    <FormControl fullWidth>\r\n                        <InputLabel id='country-select'>Country</InputLabel>\r\n                        <Select\r\n                            required\r\n                            labelId='country-select'\r\n                            name='country'\r\n                            value={details.country}\r\n                            label='Country'\r\n                            onChange={handleChange}\r\n                        >\r\n                            {countries.map((x) => (\r\n                                <MenuItem\r\n                                    sx={{ py: 1 }}\r\n                                    key={x.code}\r\n                                    value={x.code}\r\n                                >{`${x.name} - ${x.code}`}</MenuItem>\r\n                            ))}\r\n                        </Select>\r\n                    </FormControl>\r\n                </Grid>\r\n                <Grid item md={6} xs={12}>\r\n                    <TextField\r\n                        fullWidth\r\n                        label='State'\r\n                        name='state'\r\n                        required\r\n                        value={details.state}\r\n                        onChange={handleChange}\r\n                    />\r\n                </Grid>\r\n                <Grid item md={6} xs={12}>\r\n                    <TextField\r\n                        fullWidth\r\n                        label='City'\r\n                        name='city'\r\n                        required\r\n                        value={details.city}\r\n                        onChange={handleChange}\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <Box\r\n                    mt={5}\r\n                    alignItems='center'\r\n                    justifyContent='space-between'\r\n                    display='flex'\r\n                >\r\n                    <Button\r\n                        type='submit'\r\n                        variant='contained'\r\n                        onClick={() => handleDetails(details)}\r\n                        sx={{\r\n                            width: '100%',\r\n                            py: 1.5,\r\n                        }}\r\n                    >\r\n                        Continue to Pay\r\n                    </Button>\r\n                </Box>\r\n            </Grid>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Details\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useNavigate, useHref } from 'react-router'\r\nimport { Dialog, DialogContent, Box } from '@mui/material'\r\nimport LinearProgress from '@mui/material/LinearProgress'\r\n\r\nconst SuccessDialog = (props) => {\r\n    const [progress, setProgress] = useState(0)\r\n    const [intervalId, setIntervalId] = useState(0)\r\n\r\n    const navigate = useNavigate()\r\n\r\n    useEffect(() => {\r\n        if (props.open === false) {\r\n            return\r\n        }\r\n\r\n        const interval = setInterval(() => {\r\n            setProgress((progress) => progress + 5)\r\n        }, 250)\r\n\r\n        setIntervalId(interval)\r\n\r\n        return () => clearInterval(interval)\r\n    }, [props])\r\n\r\n    useEffect(() => {\r\n        if (progress > 100) {\r\n            clearInterval(intervalId)\r\n            navigate('/app/pricing', { replace: true })\r\n        }\r\n    }, [progress])\r\n\r\n    console.log('Here')\r\n\r\n    return (\r\n        <Dialog open={props.open} onClose={props.handleClose}>\r\n            <DialogContent>\r\n                <Box>\r\n                    <img\r\n                        src='https://firebasestorage.googleapis.com/v0/b/evencloud-26d32.appspot.com/o/success.png?alt=media&token=14200909-edb3-4628-bfe5-36e346709737'\r\n                        alt='Success Image'\r\n                        style={{ width: '250px', height: '250px' }}\r\n                    />\r\n\r\n                    <LinearProgress\r\n                        variant='determinate'\r\n                        value={progress}\r\n                        color='success'\r\n                    />\r\n                </Box>\r\n            </DialogContent>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nexport default React.memo(SuccessDialog)\r\n","import React, { useState } from 'react'\r\nimport { useNavigate, useLocation } from 'react-router'\r\nimport { Alert, Box, Button, Paper, Snackbar, Typography } from '@mui/material'\r\nimport ArrowBackIosNewOutlinedIcon from '@mui/icons-material/ArrowBackIosNewOutlined'\r\nimport { useStripe, useElements, CardElement } from '@stripe/react-stripe-js'\r\n\r\nimport CardSection from './CardSection.js'\r\nimport Details from './Details.js'\r\nimport { useSubscription } from '../../hooks/useSubscription'\r\nimport SuccessDialog from './SuccessDialog.js'\r\n\r\nexport default function CheckoutForm() {\r\n    const stripe = useStripe()\r\n    const elements = useElements()\r\n    const { state, dispatch } = useSubscription()\r\n    const { cart } = state\r\n\r\n    const [messages, _setMessages] = useState('')\r\n    //const [paymentIntent, setPaymentIntent] = useState()\r\n    const [isPaying, setIsPaying] = useState(false)\r\n\r\n    const [snackOpen, setSnackOpen] = useState(false)\r\n    const [errorMsg, setErrorMsg] = useState(null)\r\n\r\n    const [successDialog, setSuccessDialog] = useState(false)\r\n\r\n    const navigate = useNavigate()\r\n    const location = useLocation()\r\n    const quantity = location.state ? location.state.quantity : 0\r\n\r\n    // helper for displaying status messages.\r\n    const setMessage = (message) => {\r\n        _setMessages(`${messages}\\n\\n${message}`)\r\n    }\r\n\r\n    const handleSubmit = async (event) => {\r\n        // We don't want to let default form submission happen here,\r\n        // which would refresh the page.\r\n        event.preventDefault()\r\n\r\n        if (!stripe || !elements) {\r\n            // Stripe.js has not yet loaded.\r\n            // Make sure to disable form submission until Stripe.js has loaded.\r\n            return\r\n        }\r\n\r\n        console.log(state?.cart)\r\n\r\n        const { error, paymentIntent } = await stripe.confirmCardPayment(\r\n            state?.cart?.clientSecret,\r\n            {\r\n                payment_method: {\r\n                    card: elements.getElement(CardElement),\r\n                    billing_details: {\r\n                        name: cart?.details.name,\r\n                        address: {\r\n                            line1: cart?.details.address,\r\n                            postal_code: cart?.details.zip || '38483',\r\n                            city: cart?.details?.city,\r\n                            country: cart?.details?.country,\r\n                        },\r\n                    },\r\n                },\r\n            }\r\n        )\r\n\r\n        if (error) {\r\n            // Show error to your customer (for example, insufficient funds)\r\n            setMessage(error.message)\r\n            setErrorMsg(error.message)\r\n            setSnackOpen(true)\r\n            console.log(error.message)\r\n        } else {\r\n            // The payment has been processed!\r\n            if (paymentIntent.status === 'succeeded') {\r\n                // Show a success message to your customer\r\n                // There's a risk of the customer closing the window before callback\r\n                // execution. Set up a webhook or plugin to listen for the\r\n                // payment_intent.succeeded event that handles any business critical\r\n                // post-payment actions.\r\n                console.log('Success')\r\n                setSuccessDialog(true)\r\n            }\r\n        }\r\n        //setPaymentIntent(paymentIntent)\r\n    }\r\n\r\n    // if (paymentIntent && paymentIntent.status === 'succeeded') {\r\n    //     //return <div>Success </div>\r\n    //     setSuccessDialog(true)\r\n    // }\r\n\r\n    const handleSnackClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return\r\n        }\r\n\r\n        setSnackOpen(false)\r\n        setErrorMsg(null)\r\n    }\r\n\r\n    const handleDialogClose = () => {\r\n        setSuccessDialog(false)\r\n    }\r\n\r\n    return (\r\n        <Box sx={{ p: 4, background: '#f0f2f5', minHeight: '100%' }}>\r\n            <Box>\r\n                <Button\r\n                    startIcon={<ArrowBackIosNewOutlinedIcon />}\r\n                    onClick={() => navigate('/app/pricing')}\r\n                >\r\n                    Go Back\r\n                </Button>\r\n            </Box>\r\n            <Box sx={{ mt: 2, mb: 5 }}>\r\n                <Typography variant='h2' sx={{ textAlign: 'center' }}>\r\n                    Make a payment\r\n                </Typography>\r\n                <Typography\r\n                    vanriant='h6'\r\n                    sx={{\r\n                        textAlign: 'center',\r\n                        mt: 2,\r\n                        letterSpacing: 0.6,\r\n                        color: 'gray',\r\n                    }}\r\n                >\r\n                    Fill the payment form with Billing Address, Card Holder Name\r\n                    and Card Details\r\n                </Typography>\r\n            </Box>\r\n\r\n            <Paper\r\n                sx={{\r\n                    borderRadius: 3,\r\n                    boxShadow: 10,\r\n                    margin: '40px auto',\r\n                    backgroundColor: 'background.paper',\r\n                    p: 5,\r\n                    maxWidth: '600px',\r\n                    mt: 8,\r\n                }}\r\n            >\r\n                {isPaying && (\r\n                    <CardSection\r\n                        handleBack={() => {\r\n                            setIsPaying(false)\r\n                        }}\r\n                        handleSubmit={handleSubmit}\r\n                        quantity={quantity}\r\n                    />\r\n                )}\r\n                {!isPaying && (\r\n                    <Details\r\n                        handleNext={(details) => {\r\n                            dispatch({\r\n                                type: 'PAYMENT_DETAILS',\r\n                                payload: {\r\n                                    details: details,\r\n                                },\r\n                            })\r\n                            setIsPaying(true)\r\n                        }}\r\n                        setErrorMsg={setErrorMsg}\r\n                        setSnackOpen={setSnackOpen}\r\n                    />\r\n                )}\r\n            </Paper>\r\n\r\n            <SuccessDialog\r\n                open={successDialog}\r\n                handleClose={handleDialogClose}\r\n            />\r\n\r\n            {/* {!isPaying ? (\r\n                <Details\r\n                    handleNext={(details) => {\r\n                        dispatch({\r\n                            type: 'PAYMENT_DETAILS',\r\n                            payload: {\r\n                                details: details,\r\n                            },\r\n                        })\r\n                        setIsPaying(true)\r\n                    }}\r\n                />\r\n            ) : (\r\n                <CardSection\r\n                    handleBack={() => {\r\n                        setIsPaying(false)\r\n                    }}\r\n                    handleSubmit={handleSubmit}\r\n                />\r\n            )}\r\n            <div>{messages}</div> */}\r\n\r\n            {errorMsg !== null && (\r\n                <Snackbar\r\n                    open={snackOpen}\r\n                    autoHideDuration={4000}\r\n                    onClose={handleSnackClose}\r\n                    anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n                >\r\n                    <Alert\r\n                        onClose={handleSnackClose}\r\n                        severity='error'\r\n                        sx={{ width: '100%' }}\r\n                        variant='filled'\r\n                    >\r\n                        {errorMsg}\r\n                    </Alert>\r\n                </Snackbar>\r\n            )}\r\n        </Box>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { loadStripe } from '@stripe/stripe-js'\r\nimport { Elements } from '@stripe/react-stripe-js'\r\nimport CheckoutForm from '../components/pricing/CheckOutForm'\r\n\r\nconst stripePromise = loadStripe(\r\n    'pk_test_51LERE7SHgzLT4nCoLBiNHxLi1VA6lbqcTOnrkwtNlduP9Ht93k7NbY5OF4GXR8vdid3eig3lV1DAxS2XSshACkUe00hDCZvx5x'\r\n)\r\n\r\nconst Subscribe = () => {\r\n    return (\r\n        <Elements stripe={stripePromise}>\r\n            <CheckoutForm />\r\n        </Elements>\r\n    )\r\n}\r\n\r\nexport default Subscribe\r\n","import { Navigate } from 'react-router-dom'\r\nimport DashboardLayout from './components/DashboardLayout'\r\nimport MainLayout from './components/MainLayout'\r\nimport Dashboard from './pages/Dashboard'\r\nimport Login from './pages/Login'\r\nimport NotFound from './pages/NotFound'\r\nimport Register from './pages/Register'\r\n\r\nimport Locationview from './pages/Locationview'\r\nimport Report from './pages/Report'\r\nimport Notification from './pages/Notification'\r\nimport ManageMobileDevices from './pages/ManageMobileDevices'\r\nimport ManageHotspots from './pages/ManageHotspots'\r\nimport Profile from './pages/Profile'\r\nimport ManageGroups from './pages/ManageGroups'\r\nimport ManageAdmins from './pages/ManageAdmins'\r\nimport AdminReport from './pages/admin/Report'\r\nimport ChangePassword from './pages/admin/ChangePassword'\r\nimport Pricing from './pages/Pricing'\r\nimport Subscribe from './pages/Subscribe'\r\n\r\nconst routes = [\r\n    {\r\n        path: 'app',\r\n        element: <DashboardLayout />,\r\n        children: [\r\n            { path: 'dashboard', element: <Dashboard /> },\r\n            { path: 'manage-devices', element: <ManageMobileDevices /> },\r\n            { path: 'manage-hotspots', element: <ManageHotspots /> },\r\n            { path: 'manage-groups', element: <ManageGroups /> },\r\n            { path: 'manage-admins', element: <ManageAdmins /> },\r\n            { path: 'pricing', element: <Pricing /> },\r\n            { path: 'notifications', element: <Notification /> },\r\n            { path: 'reports', element: <Report /> },\r\n            {\r\n                path: 'locationview/:phoneNumber/:requestId',\r\n                element: <Locationview />,\r\n            },\r\n            { path: 'profile', element: <Profile /> },\r\n\r\n            { path: '/admin/reports', element: <AdminReport /> },\r\n            { path: '*', element: <Navigate to='/404' /> },\r\n        ],\r\n    },\r\n    {\r\n        path: '/',\r\n        element: <MainLayout />,\r\n        children: [\r\n            { path: 'login', element: <Login /> },\r\n            { path: 'register', element: <Register /> },\r\n            { path: 'subscribe', element: <Subscribe /> },\r\n            { path: '/admin/change-password', element: <ChangePassword /> },\r\n            { path: '404', element: <NotFound /> },\r\n            { path: '/', element: <Navigate to='/app/dashboard' /> },\r\n            { path: '*', element: <Navigate to='/404' /> },\r\n        ],\r\n    },\r\n]\r\n\r\nexport default routes\r\n","import 'react-perfect-scrollbar/dist/css/styles.css'\r\nimport { useRoutes, useNavigate } from 'react-router-dom'\r\nimport { ThemeProvider, StyledEngineProvider } from '@mui/material'\r\nimport GlobalStyles from './components/GlobalStyles'\r\nimport theme from './theme'\r\nimport routes from './routes'\r\nimport './App.css'\r\nimport { useEffect } from 'react'\r\nimport { getDevices, getAdminDevices } from './store/actions/device'\r\n\r\nimport axios from 'axios'\r\nimport { API_SERVICE } from './URI'\r\nimport { getAdminHotspots, getHotspots } from './store/actions/hotspot'\r\nimport { getAdmins } from './store/actions/admin'\r\nimport { getGroups } from './store/actions/group'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nconst App = () => {\r\n    const content = useRoutes(routes)\r\n    const navigate = useNavigate()\r\n    const dispatch = useDispatch()\r\n\r\n    const authToken = sessionStorage.getItem('authToken')\r\n    const userData = sessionStorage.getItem('userData')\r\n        ? JSON.parse(sessionStorage.getItem('userData'))\r\n        : null\r\n\r\n    const adminData = sessionStorage.getItem('adminData')\r\n        ? JSON.parse(sessionStorage.getItem('adminData'))\r\n        : null\r\n\r\n    useEffect(async () => {\r\n        if (adminData === null && userData !== null) {\r\n            dispatch(getDevices(userData.uid))\r\n            dispatch(getHotspots(userData.uid))\r\n            dispatch(getGroups(userData.uid))\r\n            dispatch(getAdmins(userData.uid))\r\n        }\r\n\r\n        if (adminData !== null && userData !== null) {\r\n            const { data } = await axios.get(\r\n                `${API_SERVICE}/get/admin/${adminData.email}`\r\n            )\r\n            dispatch(\r\n                getAdminDevices({\r\n                    createdBy: userData.uid,\r\n                    adminGroups: data.groups,\r\n                })\r\n            )\r\n            dispatch(\r\n                getAdminHotspots({\r\n                    createdBy: userData.uid,\r\n                    adminGroups: data.groups,\r\n                })\r\n            )\r\n        }\r\n    }, [dispatch])\r\n\r\n    useEffect(() => {\r\n        if (!authToken) {\r\n            navigate('/login')\r\n        }\r\n    }, [authToken])\r\n\r\n    return (\r\n        <StyledEngineProvider injectFirst>\r\n            <ThemeProvider theme={theme}>\r\n                <GlobalStyles />\r\n                {content}\r\n            </ThemeProvider>\r\n        </StyledEngineProvider>\r\n    )\r\n}\r\n\r\nexport default App\r\n","import * as types from '../constants'\r\n\r\nexport const hotspotReducer = (state = { hotspotList: [] }, action) => {\r\n    switch (action.type) {\r\n        case types.GET_HOTSPOT_SUCCESS:\r\n            return {\r\n                hotspotList: action.payload,\r\n            }\r\n        case types.GET_HOTSPOT_FAIL:\r\n            return {\r\n                error: action.payload,\r\n                hotspotList: [],\r\n            }\r\n\r\n        case types.CREATE_HOTSPOT_SUCCESS: {\r\n            const item = action.payload\r\n            console.log(item)\r\n            const exitHotspot = state.hotspotList.find(\r\n                (x) => x._id === item._id\r\n            )\r\n\r\n            if (exitHotspot) {\r\n                return {\r\n                    ...state,\r\n                    hotspotList: state.hotspotList.map((x) =>\r\n                        x._id === exitHotspot._id ? item : x\r\n                    ),\r\n                    success: 'Hotspot created succssfully',\r\n                }\r\n            }\r\n            return {\r\n                ...state,\r\n                hotspotList: [...state.hotspotList, item],\r\n                success: 'Hotspot created succssfully',\r\n            }\r\n        }\r\n        case types.CREATE_HOTSPOT_FAIL:\r\n            return {\r\n                hotspotList: [...state.hotspotList],\r\n                error: action.payload,\r\n            }\r\n\r\n        case types.UPDATE_HOTSPOT_SUCCESS: {\r\n            const item = action.payload\r\n            console.log(item)\r\n            const exitHotspot = state.hotspotList.find(\r\n                (x) => x._id === item._id\r\n            )\r\n\r\n            if (exitHotspot) {\r\n                return {\r\n                    ...state,\r\n                    hotspotList: state.hotspotList.map((x) =>\r\n                        x._id === exitHotspot._id ? item : x\r\n                    ),\r\n                    success: 'Hotspot updated succssfully',\r\n                }\r\n            }\r\n            return {\r\n                ...state,\r\n                hotspotList: [...state.hotspotList, item],\r\n                success: 'Hotspot updated succssfully',\r\n            }\r\n        }\r\n\r\n        case types.UPDATE_HOTSPOT_FAIL:\r\n            return {\r\n                hotspotList: [...state.hotspotList],\r\n                error: action.payload,\r\n            }\r\n\r\n        case types.DELETE_HOTSPOT_SUCCESS:\r\n            return {\r\n                ...state,\r\n                hotspotList: state.hotspotList.filter(\r\n                    (x) => x._id !== action.payload\r\n                ),\r\n                success: 'Hotspot deleted succssfully',\r\n            }\r\n        case types.DELETE_HOTSPOT_FAIL:\r\n            return {\r\n                error: action.payload,\r\n                hotspotList: [...state.hotspotList],\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import { createStore, applyMiddleware, combineReducers } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\n\r\nimport { hotspotReducer } from './reducers/hotspotReducer'\r\nimport { groupReducer } from './reducers/groupReducer'\r\nimport { adminReducer } from './reducers/adminReducer'\r\nimport { deviceReducer } from './reducers/deviceReducer'\r\n\r\nconst reducer = combineReducers({\r\n    hotspots: hotspotReducer,\r\n    groups: groupReducer,\r\n    admins: adminReducer,\r\n    devices: deviceReducer,\r\n})\r\n\r\nconst hotspotFromStorage = sessionStorage.getItem('hotspotList')\r\n    ? JSON.parse(sessionStorage.getItem('hotspotList'))\r\n    : []\r\n\r\nconst groupFromStorage = sessionStorage.getItem('groupList')\r\n    ? JSON.parse(sessionStorage.getItem('groupList'))\r\n    : []\r\n\r\nconst adminFromStorage = sessionStorage.getItem('adminList')\r\n    ? JSON.parse(sessionStorage.getItem('adminList'))\r\n    : []\r\n\r\nconst deviceFromStorage = sessionStorage.getItem('deviceList')\r\n    ? JSON.parse(sessionStorage.getItem('deviceList'))\r\n    : []\r\n\r\nconst initialState = {\r\n    hotspots: { hotspotList: hotspotFromStorage },\r\n    groups: { groupList: groupFromStorage },\r\n    admins: { adminList: adminFromStorage },\r\n    devices: { deviceList: deviceFromStorage },\r\n}\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(\r\n    reducer,\r\n    initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n)\r\n\r\nexport default store\r\n","import * as types from '../constants'\r\n\r\nexport const groupReducer = (state = { groupList: [] }, action) => {\r\n    switch (action.type) {\r\n        case types.GET_GROUP_SUCCESS:\r\n            return {\r\n                groupList: action.payload,\r\n            }\r\n        case types.GET_GROUP_FAIL:\r\n            return {\r\n                error: action.payload,\r\n                groupList: [],\r\n            }\r\n\r\n        case types.CREATE_GROUP_SUCCESS: {\r\n            const item = action.payload\r\n            const existgroup = state.groupList.find((x) => x._id === item._id)\r\n\r\n            if (existgroup) {\r\n                return {\r\n                    ...state,\r\n                    groupList: state.groupList.map((x) =>\r\n                        x._id === existgroup._id ? item : x\r\n                    ),\r\n                    success: 'Group created succssfully',\r\n                }\r\n            }\r\n            return {\r\n                ...state,\r\n                groupList: [...state.groupList, item],\r\n                success: 'Group created succssfully',\r\n            }\r\n        }\r\n        case types.CREATE_GROUP_FAIL:\r\n            return {\r\n                groupList: [...state.groupList],\r\n                error: action.payload,\r\n            }\r\n\r\n        case types.UPDATE_GROUP_SUCCESS: {\r\n            const item = action.payload\r\n            const existgroup = state.groupList.find((x) => x._id === item._id)\r\n\r\n            if (existgroup) {\r\n                return {\r\n                    ...state,\r\n                    groupList: state.groupList.map((x) =>\r\n                        x._id === existgroup._id ? item : x\r\n                    ),\r\n                    success: 'Group created succssfully',\r\n                }\r\n            }\r\n            return {\r\n                ...state,\r\n                groupList: [...state.groupList, item],\r\n                success: 'Group created succssfully',\r\n            }\r\n        }\r\n        case types.UPDATE_GROUP_FAIL:\r\n            return {\r\n                groupList: [...state.groupList],\r\n                error: action.payload,\r\n            }\r\n\r\n        case types.DELETE_GROUP_SUCCESS:\r\n            return {\r\n                ...state,\r\n                groupList: state.groupList.filter(\r\n                    (x) => x._id !== action.payload\r\n                ),\r\n                success: 'Group deleted succssfully',\r\n            }\r\n        case types.DELETE_GROUP_FAIL:\r\n            return {\r\n                error: action.payload,\r\n                groupList: [...state.groupList],\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import * as types from '../constants'\r\n\r\nexport const adminReducer = (state = { adminList: [] }, action) => {\r\n    switch (action.type) {\r\n        case types.GET_ADMIN_SUCCESS:\r\n            return {\r\n                adminList: action.payload,\r\n            }\r\n        case types.GET_ADMIN_FAIL:\r\n            return {\r\n                error: action.payload,\r\n                adminList: [],\r\n            }\r\n\r\n        case types.CREATE_ADMIN_SUCCESS: {\r\n            const item = action.payload\r\n            const existadmin = state.adminList.find((x) => x._id === item._id)\r\n\r\n            if (existadmin) {\r\n                return {\r\n                    ...state,\r\n                    adminList: state.adminList.map((x) =>\r\n                        x._id === existadmin._id ? item : x\r\n                    ),\r\n                    success: 'Admin created succssfully',\r\n                }\r\n            }\r\n            return {\r\n                ...state,\r\n                adminList: [...state.adminList, item],\r\n                success: 'Admin created succssfully',\r\n            }\r\n        }\r\n        case types.CREATE_ADMIN_FAIL:\r\n            return {\r\n                adminList: [...state.adminList],\r\n                error: action.payload,\r\n            }\r\n\r\n        case types.UPDATE_ADMIN_SUCCESS: {\r\n            const item = action.payload\r\n            const existadmin = state.adminList.find((x) => x._id === item._id)\r\n\r\n            if (existadmin) {\r\n                return {\r\n                    ...state,\r\n                    adminList: state.adminList.map((x) =>\r\n                        x._id === existadmin._id ? item : x\r\n                    ),\r\n                    success: 'Admin updated succssfully',\r\n                }\r\n            }\r\n            return {\r\n                ...state,\r\n                adminList: [...state.adminList, item],\r\n                success: 'Admin updated succssfully',\r\n            }\r\n        }\r\n        case types.UPDATE_ADMIN_FAIL:\r\n            return {\r\n                adminList: [...state.adminList],\r\n                error: action.payload,\r\n            }\r\n\r\n        case types.DELETE_ADMIN_SUCCESS:\r\n            return {\r\n                ...state,\r\n                adminList: state.adminList.filter(\r\n                    (x) => x._id !== action.payload\r\n                ),\r\n                success: 'Admin deleted successfully',\r\n            }\r\n        case types.DELETE_ADMIN_FAIL:\r\n            return {\r\n                error: action.payload,\r\n                hotspotList: [...state.adminList],\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import * as types from '../constants'\r\n\r\nexport const deviceReducer = (state = { deviceList: [] }, action) => {\r\n    switch (action.type) {\r\n        case types.GET_DEVICE_SUCCESS:\r\n            return {\r\n                deviceList: action.payload,\r\n            }\r\n        case types.GET_DEVICE_FAIL:\r\n            return {\r\n                error: action.payload,\r\n                deviceList: [],\r\n            }\r\n\r\n        case types.CREATE_DEVICE_SUCCESS: {\r\n            const item = action.payload\r\n            const existdevice = state.deviceList.find((x) => x._id === item._id)\r\n\r\n            if (existdevice) {\r\n                return {\r\n                    ...state,\r\n                    deviceList: state.deviceList.map((x) =>\r\n                        x._id === existdevice._id ? item : x\r\n                    ),\r\n                    success: 'Device added succssfully',\r\n                }\r\n            }\r\n            return {\r\n                ...state,\r\n                deviceList: [...state.deviceList, item],\r\n                success: 'Device added succssfully',\r\n            }\r\n        }\r\n\r\n        case types.CREATE_DEVICE_FAIL:\r\n            return {\r\n                deviceList: [...state.deviceList],\r\n                error: action.payload,\r\n            }\r\n\r\n        case types.UPDATE_DEVICE_SUCCESS: {\r\n            const item = action.payload\r\n            console.log(item)\r\n            const existDevice = state.deviceList.find((x) => x._id === item._id)\r\n\r\n            if (existDevice) {\r\n                return {\r\n                    ...state,\r\n                    deviceList: state.deviceList.map((x) =>\r\n                        x._id === existDevice._id ? item : x\r\n                    ),\r\n                    success: 'Device updated succssfully',\r\n                }\r\n            }\r\n            return {\r\n                ...state,\r\n                deviceList: [...state.deviceList, item],\r\n                success: 'Device updated succssfully',\r\n            }\r\n        }\r\n\r\n        case types.UPDATE_DEVICE_FAIL:\r\n            return {\r\n                deviceList: [...state.deviceList],\r\n                error: action.payload,\r\n            }\r\n\r\n        case types.DELETE_DEVICE_SUCCESS:\r\n            return {\r\n                ...state,\r\n                deviceList: state.deviceList.filter(\r\n                    (x) => x._id !== action.payload\r\n                ),\r\n                success: 'Device deleted succssfully',\r\n            }\r\n        case types.DELETE_DEVICE_FAIL:\r\n            return {\r\n                error: action.payload,\r\n                deviceList: [...state.deviceList],\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import ReactDOM from 'react-dom'\r\nimport { BrowserRouter } from 'react-router-dom'\r\nimport { Provider } from 'react-redux'\r\nimport App from './App'\r\nimport store from './store/store'\r\nimport {\r\n    SubscriptionConsumer,\r\n    SubscriptionProvider,\r\n} from './contexts/subscriptionContext'\r\n\r\nReactDOM.render(\r\n    <SubscriptionProvider>\r\n        <SubscriptionConsumer>\r\n            {(sub) =>\r\n                sub.state.isInitialized && (\r\n                    <Provider store={store}>\r\n                        <BrowserRouter>\r\n                            <App />\r\n                        </BrowserRouter>\r\n                    </Provider>\r\n                )\r\n            }\r\n        </SubscriptionConsumer>\r\n    </SubscriptionProvider>,\r\n\r\n    document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}