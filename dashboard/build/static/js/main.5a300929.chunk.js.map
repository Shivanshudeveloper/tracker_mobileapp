{"version":3,"sources":["components/GlobalStyles.js","theme/index.js","Firebase/index.js","components/DashboardNavbar.js","components/DashboardSidebar.js","components/DashboardLayout.js","components/MainLayout.js","URI.js","components/dashboard/LocationTimeline.jsx","pages/Locationview.js","pages/AllLocationView.js","store/constants.js","store/actions/device.js","store/actions/hotspot.js","store/actions/admin.js","store/actions/group.js","pages/Dashboard.js","pages/Login.js","pages/NotFound.js","pages/Register.js","components/report/ReportTable.jsx","components/report/HotspotFilter.jsx","components/report/DeviceFilter.jsx","components/report/MonthFilter.jsx","components/report/GroupFilter.jsx","contexts/subscriptionContext.js","hooks/useSubscription.js","utils/getSubscriptionDetails.js","components/report/HiddenReportTable.jsx","pages/Report.js","pages/Notification.js","components/devices/EditDeviceDialog.jsx","components/devices/DeviceTable.jsx","pages/ManageMobileDevices.js","components/hotspot/EditHotspotDialogForm.jsx","components/hotspot/HotspotTable.jsx","pages/ManageHotspots.js","components/settings/SecuritySetting.js","pages/Profile.js","components/groups/ScheduleForm.jsx","components/groups/CreateGroupDialog.jsx","components/groups/GroupTable.jsx","components/groups/EditGroupDialog.jsx","pages/ManageGroups.js","components/admins/AdminTable.jsx","components/admins/CreateAdminDialog.jsx","components/admins/EditAdminDialog.jsx","pages/ManageAdmins.js","components/pricing/ProCard.js","components/pricing/FreeCard.js","pages/Pricing.js","components/pricing/CardSection.js","utils/getCountryCode.js","components/pricing/Details.js","components/pricing/SuccessDialog.js","components/pricing/CheckOutForm.js","pages/Subscribe.js","pages/ForgotPassword.js","routes.js","App.js","store/reducers/hotspotReducer.js","store/store.js","store/reducers/groupReducer.js","store/reducers/adminReducer.js","store/reducers/deviceReducer.js","index.js"],"names":["useStyles","makeStyles","createStyles","boxSizing","margin","padding","html","height","width","body","backgroundColor","a","textDecoration","GlobalStyles","theme","createTheme","palette","background","default","paper","primary","contrastText","main","text","secondary","shadows","typography","h1","fontWeight","fontSize","letterSpacing","h2","h3","h4","h5","h6","overline","app","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","db","getAnalytics","getFirestore","auth","getAuth","storage","getStorage","DashboardNavbar","onMobileNavOpen","rest","notifications","setNotifications","useState","anchorEl","setAnchorEl","open","setOpen","navigate","useNavigate","userData","localStorage","getItem","JSON","parse","useEffect","notificationRef","collection","uid","q","query","orderBy","limit","unsub","onSnapshot","snapshots","list","forEach","snap","push","data","getTime","sec","str","moment","Date","fromNow","first","split","mid","AppBar","elevation","Toolbar","sx","display","justifyContent","gap","IconButton","onClick","event","currentTarget","color","Popover","id","onClose","anchorOrigin","vertical","horizontal","className","List","map","x","i","Box","style","ListItem","mt","ListItemAvatar","requestStatus","Avatar","src","ListItemText","message","createdAt","seconds","Divider","to","removeItem","signOut","then","replace","catch","error","console","log","root","drawer","flexShrink","whiteSpace","appBar","marginLeft","toolbar","alignItems","spacing","mixins","listContainer","flexDirection","DashboardSidebar","classes","adminData","sessionStorage","paths","names","CssBaseline","Drawer","variant","HomeOutlined","index","pt","pb","px","borderBottomColor","borderBottomWidth","Typography","DashboardLayoutRoot","styled","overflow","DashboardLayoutWrapper","flex","paddingTop","breakpoints","up","paddingLeft","DashboardLayoutContainer","DashboardLayoutContent","DashboardLayout","isMobileNavOpen","setMobileNavOpen","onMobileClose","openMobile","MainLayoutRoot","MainLayoutWrapper","MainLayoutContainer","MainLayoutContent","MainLayout","dotenv","config","API_SERVICE","process","MAP_TOKEN","MAP_STYLE","LocationTimeline","props","Timeline","mr","locations","location","TimelineItem","TimelineSeparator","TimelineDot","TimelineConnector","TimelineContent","component","address","format","React","memo","Locationview","user","phoneNumber","createdBy","lat","setlat","long","setlong","viewport","setViewport","latitude","longitude","zoom","selected","setSelected","selectedLat","setSelectedLat","selectedLong","setSelectedLong","userlocationdata","setuserlocationdata","imgUri","setImgUri","load","setLoad","showDetails","setShowDetails","setLocations","async","axios","get","response","err","getMonth","handleShowDetails","Helmet","minHeight","Container","maxWidth","trackingStatus","mapboxApiAccessToken","mapStyle","onViewportChange","nextViewport","onMouseEnter","e","preventDefault","onMouseLeave","name","arr","initials","length","toUpperCase","getInitials","fullName","textAlign","formattedAddress","position","zIndex","borderRadius","right","bottom","transform","overflowY","AllLocationView","userList","senderId","trackingList","selectedLocation","setSelectedLocation","selectedDevice","setSelectedDevice","trackingData","setTrackingData","item","marginBottom","CREATE_HOTSPOT_SUCCESS","CREATE_HOTSPOT_FAIL","GET_HOTSPOT_SUCCESS","GET_HOTSPOT_FAIL","UPDATE_HOTSPOT_SUCCESS","UPDATE_HOTSPOT_FAIL","DELETE_HOTSPOT_SUCCESS","DELETE_HOTSPOT_FAIL","CREATE_GROUP_SUCCESS","CREATE_GROUP_FAIL","GET_GROUP_SUCCESS","GET_GROUP_FAIL","UPDATE_GROUP_SUCCESS","UPDATE_GROUP_FAIL","DELETE_GROUP_SUCCESS","DELETE_GROUP_FAIL","CREATE_ADMIN_SUCCESS","CREATE_ADMIN_FAIL","GET_ADMIN_SUCCESS","GET_ADMIN_FAIL","UPDATE_ADMIN_SUCCESS","UPDATE_ADMIN_FAIL","DELETE_ADMIN_SUCCESS","DELETE_ADMIN_FAIL","CREATE_DEVICE_SUCCESS","CREATE_DEVICE_FAIL","GET_DEVICE_SUCCESS","GET_DEVICE_FAIL","UPDATE_DEVICE_SUCCESS","UPDATE_DEVICE_FAIL","DELETE_DEVICE_SUCCESS","DELETE_DEVICE_FAIL","getDevices","dispatch","type","types","payload","getAdminDevices","headers","post","getAdminHotspots","getHotspots","getAdmins","getGroups","Dashboard","selectedIndex","setSelectedIndex","userLocations","setUserLocations","search","setSearch","searchResult","setSearchResult","snackOpen","setSnackOpen","success","setSuccess","setError","filter","setFilter","menuOpen","Boolean","useDispatch","devices","useSelector","state","deviceList","handleFilterClose","handleSnackClose","_","reason","email","adminGroups","groups","getHotspotAndDevices","phoneNumberArr","phoneNumbers","getUserLocations","filterArr","toLowerCase","includes","handleListItemClick","changeFilter","val","Grid","container","xs","Paper","TextField","fullWidth","InputProps","startAdornment","InputAdornment","SvgIcon","endAdornment","placeholder","onChange","target","value","Menu","MenuItem","py","button","mb","undefined","disabled","borderLeft","Stack","direction","Snackbar","autoHideDuration","Alert","severity","image","backgroundImage","backgroundRepeat","grey","backgroundSize","backgroundPosition","avatar","form","marginTop","login","googleLogin","Login","setEmail","password","setPassword","errorMsg","setErrMsg","clicked","setClicked","showPass","setShowPass","emailRegex","adminLogin","signInWithEmailAndPassword","setItem","credential","accessToken","superAdminRef","doc","superData","getDoc","exists","stringify","passwordChanged","errorCode","code","getErrMsg","superAdminLogin","userCredential","docRef","docSnap","msg","join","Fragment","sm","md","square","noValidate","required","label","autoComplete","autoFocus","FormControl","my","InputLabel","htmlFor","OutlinedInput","edge","Link","RouterLink","underline","LoadingButton","loadingPosition","startIcon","CircularProgress","size","Button","match","superRef","where","getDocs","docs","submitHandler","NotFound","align","alt","Register","firstName","setFirstName","lastName","setLastName","companyName","setCompanyName","policy","setPolicy","setErrorMsg","signUp","createUserWithEmailAndPassword","updateProfile","currentUser","displayName","profilePhoto","serverTimestamp","userRef","setDoc","p","FormControlLabel","control","Checkbox","checked","href","Row","row","hotspotList","selectedHotspots","selectedGroups","selectedMonth","history","setHistory","hotspots","hotspot","checkExist","findIndex","_id","Promise","resolve","group","filterGroup","TableRow","borderBottom","TableCell","scope","device","total","paddingBottom","colSpan","Collapse","in","timeout","unmountOnExit","Table","TableHead","TableBody","historyRow","borderWidth","hotspotName","groupName","ReportTable","tableData","TableContainer","MenuProps","PaperProps","maxHeight","ITEM_HEIGHT","HotspotFilter","ml","Select","multiple","handleHotspotSelect","input","renderValue","selectedHotspotsNames","hotspotNames","indexOf","DeviceFilter","selectedDevices","handleSelectedDevice","mobileDevices","MonthFilter","isDisable","setIsDisable","subscription","reportCount","setSelectedMonth","Months","month","GroupFilter","handleGroupSelect","selectedGroupsNames","groupNames","initialState","customerId","subscriptions","cart","reducer","action","isInitialized","details","SubscriptionContext","createContext","SubscriptionProvider","children","useReducer","onAuthStateChanged","ref","_email","customer","fetchCustomer","fetchSubscriptions","userId","result","Provider","SubscriptionConsumer","Consumer","useSubscription","useContext","getSubscriptionDetails","subscriptionDetail","sub","status","plans","prices","fetchPlans","planArr","plan","productName","product","planId","productId","hotspotCount","Number","MAX_VALUE","deviceCount","quantity","groupCount","adminCount","HiddenReportTable","hidden","Report","setTableData","selectedHotspotsIds","setSelectedHotspotsIds","setSelectedHotspotsNames","setSelectedGroups","setSelectedGroupsNames","setSelectedHotspots","setSelectedDevices","loading","setLoading","filteredData","setFilteredData","setSubscription","groupList","fetchData","fetchSubDetail","temp","number","table","filename","sheet","buttonText","Notification","notificationList","setNotificationList","filterList","setFilterList","currDate","getDate","start","end","m","lg","xl","boxShadow","Image","EditDeviceDialog","setEditDialogOpen","editDialogOpen","trackingGroups","newFullName","setNewFullName","Object","entries","updateDetails","getState","put","updateDevice","Dialog","DialogTitle","DialogContent","labelId","DialogActions","DeviceTable","toggleEditDeviceDialog","removeDevice","delete","requestRef","querySnapshot","deleteDoc","minWidth","border","Chip","ManageMobileDevices","setFullName","setPhoneNumber","addDeviceDialog","setAddDeviceDialog","scheduleDialog","setScheduleDialog","successMsg","sendTrackingRequest","sendNotificationToDevice","addDoc","recieverFullName","sender","Timestamp","now","androidRef","seen","addNewDevice","startsWith","bodyData","closeAddDeviceDialog","EditHotspotDialogForm","setDialogOpen","selectedHotspot","mapRef","useRef","setHotspotName","setLocation","zipCode","setZipCode","isFetching","setIsFetching","getLatLong","handleViewportChange","useCallback","newViewport","handleGeocoderViewportChange","transitionDuration","res","zipcode","toPrecision","updateHotspot","lngLat","marker","countries","reverseGeocode","HotspotSetting","toggleEditHotspotDialog","removeHotspot","ManageHotspots","setSelectedHotspot","dialogOpen","addHotspotDialog","setAddHotspotDialog","setSuccessMsg","allViewport","setAllViewport","locationData","setLocationData","saveHotspot","handleAddDialogClose","HotspotTable","SecuritySetting","currentPassword","setCurrentPassword","newPassword","setNewPassword","isUpdating","setIsUpdating","EmailAuthProvider","reauthenticateWithCredential","updatePassword","errorMessage","update","Profile","setProfilePhoto","previewUrl","setPreviewUrl","selectedFile","setSelectedFile","uploaProfilPhoto","storageRef","uploadTask","uploadBytesResumable","on","snapshot","progress","bytesTransferred","totalBytes","getDownloadURL","downloadUrl","files","URL","createObjectURL","accept","updateDoc","photo","updateProfileHandler","ScheduleForm","week","startDay","setStartDay","day","endDay","setEndDay","LocalizationProvider","dateAdapter","AdapterDateFns","TimePicker","time","startTime","newValue","setTime","renderInput","params","endTime","CreateGroupDialog","setGroupName","selectedAdmins","setSelectedAdmins","selectedAdminsNames","setSelectedAdminsNames","adminList","admins","saveGroup","members","schedule","GroupTable","removeGroup","updatedAt","setSelectedGroup","setEditOpen","EditGroupDialog","keys","selectedGroup","updateGroup","ManageGroups","createOpen","setCreateOpen","editOpen","rowGap","columnGap","AdminTable","removeAdmin","admin","setSelectedAdmin","setShowEditDialog","CreateAdminDialog","saveAdmin","test","emailData","sendEmail","subject","alert","EditAdminDialog","selectedAdmin","updateData","updateAdmin","ManageAdmins","showCreateDialog","setShowCreateDialog","showEditDialog","ProCard","Card","isCurrent","textTransform","Slider","handleValueChange","max","disablePadding","ListItemIcon","htmlColor","FreeCard","Pricing","setQuantity","currentPlan","setCurrentPlan","setPrices","subQuantity","fetchPrices","createSubscription","amount","priceId","clientSecret","window","reload","vanriant","price","CardSection","handleBack","handleSubmit","Details","info","setDetails","city","country","handleChange","values","handleNext","handleDetails","SuccessDialog","setProgress","intervalId","setIntervalId","interval","setInterval","clearInterval","handleClose","LinearProgress","CheckoutForm","stripe","useStripe","elements","useElements","messages","_setMessages","isPaying","setIsPaying","successDialog","setSuccessDialog","useLocation","paymentIntent","confirmCardPayment","payment_method","card","getElement","CardElement","billing_details","line1","postal_code","zip","stripePromise","loadStripe","Subscribe","ForgotPassword","sendPasswordResetEmail","setTimeout","routes","path","element","App","content","useRoutes","getAdminData","StyledEngineProvider","injectFirst","ThemeProvider","combineReducers","exitHotspot","find","existgroup","existadmin","existdevice","existDevice","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5a300929.chunk.js","sourcesContent":["import { createStyles, makeStyles } from '@mui/styles'\r\n\r\nconst useStyles = makeStyles(() =>\r\n    createStyles({\r\n        '@global': {\r\n            '*': {\r\n                boxSizing: 'border-box',\r\n                margin: 0,\r\n                padding: 0,\r\n            },\r\n            html: {\r\n                '-webkit-font-smoothing': 'antialiased',\r\n                '-moz-osx-font-smoothing': 'grayscale',\r\n                height: '100%',\r\n                width: '100%',\r\n            },\r\n            body: {\r\n                backgroundColor: '#f4f6f8',\r\n                height: '100%',\r\n                width: '100%',\r\n            },\r\n            a: {\r\n                textDecoration: 'none',\r\n            },\r\n            '#root': {\r\n                height: '100%',\r\n                width: '100%',\r\n            },\r\n        },\r\n    })\r\n)\r\n\r\nconst GlobalStyles = () => {\r\n    useStyles()\r\n\r\n    return null\r\n}\r\n\r\nexport default GlobalStyles\r\n","import { createTheme } from '@mui/material'\r\n\r\nconst theme = createTheme({\r\n  palette: {\r\n    background: {\r\n      default: '#f4f6f8',\r\n      paper: '#ffffff',\r\n    },\r\n    primary: {\r\n      contrastText: '#ffffff',\r\n      main: '#5664d2',\r\n    },\r\n    text: {\r\n      primary: '#172b4d',\r\n      secondary: '#6b778c',\r\n    },\r\n  },\r\n  shadows: [\r\n    'none',\r\n    '0 0 0 1px rgba(63,63,68,0.05), 0 1px 2px 0 rgba(63,63,68,0.15)',\r\n    '0 0 1px 0 rgba(0,0,0,0.31), 0 2px 2px -2px rgba(0,0,0,0.25)',\r\n    '0 0 1px 0 rgba(0,0,0,0.31), 0 3px 4px -2px rgba(0,0,0,0.25)',\r\n    '0 0 1px 0 rgba(0,0,0,0.31), 0 3px 4px -2px rgba(0,0,0,0.25)',\r\n    '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 6px -2px rgba(0,0,0,0.25)',\r\n    '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 6px -2px rgba(0,0,0,0.25)',\r\n    '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 8px -2px rgba(0,0,0,0.25)',\r\n    '0 0 1px 0 rgba(0,0,0,0.31), 0 5px 8px -2px rgba(0,0,0,0.25)',\r\n    '0 0 1px 0 rgba(0,0,0,0.31), 0 6px 12px -4px rgba(0,0,0,0.25)',\r\n    '0 0 1px 0 rgba(0,0,0,0.31), 0 7px 12px -4px rgba(0,0,0,0.25)',\r\n    '0 0 1px 0 rgba(0,0,0,0.31), 0 6px 16px -4px rgba(0,0,0,0.25)',\r\n    '0 0 1px 0 rgba(0,0,0,0.31), 0 7px 16px -4px rgba(0,0,0,0.25)',\r\n    '0 0 1px 0 rgba(0,0,0,0.31), 0 8px 18px -8px rgba(0,0,0,0.25)',\r\n    '0 0 1px 0 rgba(0,0,0,0.31), 0 9px 18px -8px rgba(0,0,0,0.25)',\r\n    '0 0 1px 0 rgba(0,0,0,0.31), 0 10px 20px -8px rgba(0,0,0,0.25)',\r\n    '0 0 1px 0 rgba(0,0,0,0.31), 0 11px 20px -8px rgba(0,0,0,0.25)',\r\n    '0 0 1px 0 rgba(0,0,0,0.31), 0 12px 22px -8px rgba(0,0,0,0.25)',\r\n    '0 0 1px 0 rgba(0,0,0,0.31), 0 13px 22px -8px rgba(0,0,0,0.25)',\r\n    '0 0 1px 0 rgba(0,0,0,0.31), 0 14px 24px -8px rgba(0,0,0,0.25)',\r\n    '0 0 1px 0 rgba(0,0,0,0.31), 0 16px 28px -8px rgba(0,0,0,0.25)',\r\n    '0 0 1px 0 rgba(0,0,0,0.31), 0 18px 30px -8px rgba(0,0,0,0.25)',\r\n    '0 0 1px 0 rgba(0,0,0,0.31), 0 20px 32px -8px rgba(0,0,0,0.25)',\r\n    '0 0 1px 0 rgba(0,0,0,0.31), 0 22px 34px -8px rgba(0,0,0,0.25)',\r\n    '0 0 1px 0 rgba(0,0,0,0.31), 0 24px 36px -8px rgba(0,0,0,0.25)',\r\n  ],\r\n  typography: {\r\n    h1: {\r\n      fontWeight: 500,\r\n      fontSize: 35,\r\n      letterSpacing: '-0.24px',\r\n    },\r\n    h2: {\r\n      fontWeight: 500,\r\n      fontSize: 29,\r\n      letterSpacing: '-0.24px',\r\n    },\r\n    h3: {\r\n      fontWeight: 500,\r\n      fontSize: 24,\r\n      letterSpacing: '-0.06px',\r\n    },\r\n    h4: {\r\n      fontWeight: 500,\r\n      fontSize: 20,\r\n      letterSpacing: '-0.06px',\r\n    },\r\n    h5: {\r\n      fontWeight: 500,\r\n      fontSize: 16,\r\n      letterSpacing: '-0.05px',\r\n    },\r\n    h6: {\r\n      fontWeight: 500,\r\n      fontSize: 14,\r\n      letterSpacing: '-0.05px',\r\n    },\r\n    overline: {\r\n      fontWeight: 500,\r\n    },\r\n  },\r\n})\r\n\r\nexport default theme\r\n","import { initializeApp } from 'firebase/app'\r\nimport { getAnalytics } from 'firebase/analytics'\r\nimport { getAuth } from 'firebase/auth'\r\nimport { getFirestore } from 'firebase/firestore'\r\nimport { getStorage } from 'firebase/storage'\r\n\r\n// const firebaseConfig = {\r\n//   apiKey: 'AIzaSyDGpc3IFaTYM-3CQnF6YHdapasZBcpZrEo',\r\n//   authDomain: 'evencloud-26d32.firebaseapp.com',\r\n//   databaseURL: 'https://evencloud-26d32.firebaseio.com',\r\n//   projectId: 'evencloud-26d32',\r\n//   storageBucket: 'evencloud-26d32.appspot.com',\r\n//   messagingSenderId: '599725599274',\r\n//   appId: '1:599725599274:web:0a3c20e350260df4a1f153',\r\n//   measurementId: 'G-PXGR5P46SP',\r\n// }\r\n\r\nconst firebaseConfig = {\r\n    apiKey: 'AIzaSyCB3eqMf02L6kH_F7MAuwXUQVd1dFZfVFQ',\r\n    authDomain: 'mobiletracking-cd8f2.firebaseapp.com',\r\n    databaseURL: 'https://mobiletracking-cd8f2.firebaseio.com',\r\n    projectId: 'mobiletracking-cd8f2',\r\n    storageBucket: 'mobiletracking-cd8f2.appspot.com',\r\n    messagingSenderId: '448981545000',\r\n    appId: '1:448981545000:web:14011a88c4a6079456051d',\r\n    measurementId: 'G-M9EEMS9J5G',\r\n}\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig)\r\nconst analytics = getAnalytics(app)\r\nconst db = getFirestore(app)\r\nconst auth = getAuth(app)\r\nconst storage = getStorage(app)\r\n\r\nexport { db, auth, app, storage }\r\n","import { useState, useEffect } from 'react'\r\nimport {\r\n    Link,\r\n    Link as RouterLink,\r\n    Navigate,\r\n    useNavigate,\r\n} from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\nimport {\r\n    AppBar,\r\n    Avatar,\r\n    Box,\r\n    Divider,\r\n    IconButton,\r\n    List,\r\n    ListItem,\r\n    ListItemAvatar,\r\n    ListItemText,\r\n    Popover,\r\n    Toolbar,\r\n} from '@mui/material'\r\nimport MenuIcon from '@mui/icons-material/Menu'\r\nimport NotificationsIcon from '@mui/icons-material/Notifications'\r\nimport Account from '@mui/icons-material/AccountCircle'\r\nimport { auth, db } from '../Firebase/index'\r\nimport {\r\n    onSnapshot,\r\n    doc,\r\n    query,\r\n    orderBy,\r\n    collection,\r\n    limit,\r\n} from 'firebase/firestore'\r\nimport moment from 'moment'\r\nimport { Image } from '@mui/icons-material'\r\nimport { signOut } from 'firebase/auth'\r\nimport LogoutIcon from '@mui/icons-material/Logout'\r\n\r\nconst DashboardNavbar = ({ onMobileNavOpen, ...rest }) => {\r\n    const [notifications, setNotifications] = useState([])\r\n    const [anchorEl, setAnchorEl] = useState(null)\r\n    const [open, setOpen] = useState(false)\r\n\r\n    const accept =\r\n        'https://firebasestorage.googleapis.com/v0/b/mobiletracking-cd8f2.appspot.com/o/accept.png?alt=media&token=83902429-f4af-40b8-852c-faca1e144a92'\r\n    const pending =\r\n        'https://firebasestorage.googleapis.com/v0/b/mobiletracking-cd8f2.appspot.com/o/pending.png?alt=media&token=20afc88a-6914-4657-962e-ba9d5e684ae5'\r\n    const reject =\r\n        'https://firebasestorage.googleapis.com/v0/b/mobiletracking-cd8f2.appspot.com/o/reject.png?alt=media&token=25da312f-2ec2-492d-97d9-1d47ecd1afd5'\r\n\r\n    const handleMenu = (event) => {\r\n        setAnchorEl(event.currentTarget)\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null)\r\n        setOpen(false)\r\n    }\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget)\r\n        setOpen(true)\r\n    }\r\n\r\n    const navigate = useNavigate()\r\n\r\n    const userData = localStorage.getItem('userData')\r\n        ? JSON.parse(localStorage.getItem('userData'))\r\n        : null\r\n\r\n    useEffect(() => {\r\n        if (userData !== null) {\r\n            const notificationRef = collection(\r\n                db,\r\n                'trackingWebNotification',\r\n                userData?.uid,\r\n                'notifications'\r\n            )\r\n            const q = query(\r\n                notificationRef,\r\n                orderBy('createdAt', 'desc'),\r\n                limit(100)\r\n            )\r\n\r\n            const unsub = onSnapshot(q, (snapshots) => {\r\n                const list = []\r\n                snapshots.forEach((snap) => {\r\n                    list.push(snap.data())\r\n                })\r\n\r\n                setNotifications(list)\r\n            })\r\n\r\n            return () => unsub()\r\n        }\r\n    }, [])\r\n\r\n    const getTime = (sec) => {\r\n        const str = moment(new Date(sec * 1000)).fromNow()\r\n\r\n        switch (str) {\r\n            case 'in a few seconds':\r\n                return 'few sec'\r\n            case 'a few seconds ago':\r\n                return 'few sec'\r\n            case 'a minute ago':\r\n                return '1m'\r\n            case 'an hour ago':\r\n                return '1h'\r\n            case 'a day ago':\r\n                return '1day'\r\n            default:\r\n                const first = str.split(' ')[0]\r\n                let mid = str.split(' ')[1]\r\n                if (mid === 'minutes' || mid === 'minute') {\r\n                    mid = 'm'\r\n                }\r\n                if (mid === 'hours' || mid === 'hour') {\r\n                    mid = 'h'\r\n                }\r\n                if (mid === 'days' || mid === 'day') {\r\n                    mid = 'd'\r\n                }\r\n                return first + mid\r\n        }\r\n    }\r\n\r\n    const logout = () => {\r\n        localStorage.removeItem('userData')\r\n        localStorage.removeItem('authToken')\r\n        signOut(auth)\r\n            .then(() => navigate('/login', { replace: true }))\r\n            .catch((error) => console.log(error))\r\n    }\r\n\r\n    return (\r\n        <AppBar elevation={0} {...rest}>\r\n            <Toolbar\r\n                sx={{\r\n                    backgroundColor: '#007bff',\r\n                    display: 'flex',\r\n                    justifyContent: 'flex-end',\r\n                    gap: 1,\r\n                }}\r\n            >\r\n                <IconButton onClick={handleClick}>\r\n                    <NotificationsIcon sx={{ color: 'white' }} />\r\n                </IconButton>\r\n                <Popover\r\n                    id='notification'\r\n                    open={open}\r\n                    anchorEl={anchorEl}\r\n                    onClose={handleClose}\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'left',\r\n                    }}\r\n                    className='notification'\r\n                >\r\n                    <List sx={{ padding: 2 }}>\r\n                        {notifications.map((x, i) => (\r\n                            <Box key={++i} style={{ padding: 2 }}>\r\n                                <ListItem sx={{ mt: 1.5 }}>\r\n                                    <ListItemAvatar>\r\n                                        {x.requestStatus === 'pending' && (\r\n                                            <Avatar src={pending} />\r\n                                        )}\r\n                                        {x.requestStatus === 'accepted' && (\r\n                                            <Avatar src={accept} />\r\n                                        )}\r\n                                        {x.requestStatus === 'rejected' && (\r\n                                            <Avatar src={reject} />\r\n                                        )}\r\n                                    </ListItemAvatar>\r\n                                    <ListItemText\r\n                                        primary={x.message}\r\n                                        secondary={\r\n                                            getTime(x.createdAt.seconds) +\r\n                                            ' ago'\r\n                                        }\r\n                                    />\r\n                                </ListItem>\r\n                                <Divider />\r\n                            </Box>\r\n                        ))}\r\n                    </List>\r\n                </Popover>\r\n\r\n                <Link to='/app/profile'>\r\n                    <IconButton onClick={handleMenu}>\r\n                        <Account sx={{ color: 'white' }} />\r\n                    </IconButton>\r\n                </Link>\r\n\r\n                <IconButton onClick={logout}>\r\n                    <LogoutIcon sx={{ color: 'white' }} />\r\n                </IconButton>\r\n            </Toolbar>\r\n        </AppBar>\r\n    )\r\n}\r\n\r\nDashboardNavbar.propTypes = {\r\n    onMobileNavOpen: PropTypes.func,\r\n}\r\n\r\nexport default DashboardNavbar\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { makeStyles } from '@mui/styles'\r\nimport Drawer from '@mui/material/Drawer'\r\nimport List from '@mui/material/List'\r\nimport CssBaseline from '@mui/material/CssBaseline'\r\nimport ListItem from '@mui/material/ListItem'\r\nimport LocationOnIcon from '@mui/icons-material/LocationOnOutlined'\r\nimport PhoneAndroidIcon from '@mui/icons-material/PhoneAndroidOutlined'\r\nimport GroupsIcon from '@mui/icons-material/GroupsOutlined'\r\nimport AdminPanelSettingsIcon from '@mui/icons-material/AdminPanelSettingsRounded'\r\nimport SignalCellularAltIcon from '@mui/icons-material/SignalCellularAltOutlined'\r\nimport MonetizationOnOutlinedIcon from '@mui/icons-material/MonetizationOnOutlined'\r\nimport { HomeOutlined } from '@mui/icons-material'\r\nimport { Typography } from '@mui/material'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    drawer: {\r\n        width: 60,\r\n        flexShrink: 0,\r\n        whiteSpace: 'nowrap',\r\n    },\r\n\r\n    appBar: {\r\n        width: `calc(100% - ${60}px)`,\r\n        marginLeft: 60,\r\n    },\r\n\r\n    toolbar: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n    },\r\n    listContainer: {\r\n        display: 'flex',\r\n        height: '100%',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n    },\r\n}))\r\n\r\nconst DashboardSidebar = () => {\r\n    const classes = useStyles()\r\n\r\n    const adminData = sessionStorage.getItem('adminData')\r\n        ? JSON.parse(sessionStorage.getItem('adminData'))\r\n        : null\r\n\r\n    const paths = [\r\n        '/app/dashboard',\r\n        '/app/manage-hotspots',\r\n        '/app/manage-devices',\r\n        '/app/reports',\r\n        '/app/manage-groups',\r\n        '/app/manage-admins',\r\n        '/app/pricing',\r\n    ]\r\n\r\n    const names = [\r\n        'Overview',\r\n        'Hotspots',\r\n        'Devices',\r\n        'Reports',\r\n        'Groups',\r\n        'Admins',\r\n        'Pricing',\r\n    ]\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline />\r\n            <Drawer variant='permanent'>\r\n                <div className={classes.listContainer}>\r\n                    <List>\r\n                        {adminData === null\r\n                            ? [\r\n                                  <HomeOutlined\r\n                                      fontSize='large'\r\n                                      sx={{ color: '#6600cc' }}\r\n                                  />,\r\n                                  <LocationOnIcon\r\n                                      fontSize='large'\r\n                                      sx={{ color: 'red' }}\r\n                                  />,\r\n                                  <PhoneAndroidIcon\r\n                                      fontSize='large'\r\n                                      sx={{ color: '#007bff' }}\r\n                                  />,\r\n                                  <SignalCellularAltIcon\r\n                                      fontSize='large'\r\n                                      sx={{ color: '#fc6a03' }}\r\n                                  />,\r\n                                  <GroupsIcon\r\n                                      fontSize='large'\r\n                                      sx={{ color: 'green' }}\r\n                                  />,\r\n                                  <AdminPanelSettingsIcon\r\n                                      fontSize='large'\r\n                                      sx={{ color: '#cc33ff' }}\r\n                                  />,\r\n                                  <MonetizationOnOutlinedIcon\r\n                                      fontSize='large'\r\n                                      sx={{ color: '#3F00FF' }}\r\n                                  />,\r\n                              ].map((text, index) => (\r\n                                  <Link key={index} to={paths[index]}>\r\n                                      <ListItem\r\n                                          sx={{\r\n                                              pt: 1.5,\r\n                                              pb: 1.5,\r\n                                              px: 1,\r\n                                              display: 'flex',\r\n                                              flexDirection: 'column',\r\n                                              borderBottomColor: '#007bff',\r\n                                              borderBottomWidth: 10,\r\n                                          }}\r\n                                      >\r\n                                          <div>{text}</div>\r\n\r\n                                          <Typography\r\n                                              color='black'\r\n                                              sx={{\r\n                                                  fontSize: 12,\r\n                                              }}\r\n                                          >\r\n                                              {names[index]}\r\n                                          </Typography>\r\n                                      </ListItem>\r\n                                  </Link>\r\n                              ))\r\n                            : [\r\n                                  <HomeOutlined\r\n                                      fontSize='large'\r\n                                      sx={{ color: '#6600cc' }}\r\n                                  />,\r\n                                  <LocationOnIcon\r\n                                      fontSize='large'\r\n                                      sx={{ color: 'red' }}\r\n                                  />,\r\n                                  <PhoneAndroidIcon\r\n                                      fontSize='large'\r\n                                      sx={{ color: '#007bff' }}\r\n                                  />,\r\n                                  <SignalCellularAltIcon\r\n                                      fontSize='large'\r\n                                      sx={{ color: 'orange' }}\r\n                                  />,\r\n                              ].map((text, index) => (\r\n                                  <Link key={index} to={paths[index]}>\r\n                                      <ListItem\r\n                                          sx={{\r\n                                              pt: 1.5,\r\n                                              pb: 1.5,\r\n                                              px: 1,\r\n                                              display: 'flex',\r\n                                              flexDirection: 'column',\r\n                                              borderBottomColor: '#007bff',\r\n                                              borderBottomWidth: 10,\r\n                                          }}\r\n                                      >\r\n                                          <div>{text}</div>\r\n\r\n                                          <Typography\r\n                                              color='black'\r\n                                              sx={{\r\n                                                  fontSize: 12,\r\n                                              }}\r\n                                          >\r\n                                              {names[index]}\r\n                                          </Typography>\r\n                                      </ListItem>\r\n                                  </Link>\r\n                              ))}\r\n                    </List>\r\n                </div>\r\n            </Drawer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DashboardSidebar\r\n","import { useState } from 'react'\r\nimport { Outlet } from 'react-router-dom'\r\nimport { styled } from '@mui/material'\r\nimport DashboardNavbar from './DashboardNavbar'\r\nimport DashboardSidebar from './DashboardSidebar'\r\n\r\nconst DashboardLayoutRoot = styled('div')(({ theme }) => ({\r\n  backgroundColor: theme.palette.background.default,\r\n  display: 'flex',\r\n  height: '100%',\r\n  overflow: 'hidden',\r\n  width: '100%',\r\n}))\r\n\r\nconst DashboardLayoutWrapper = styled('div')(({ theme }) => ({\r\n  display: 'flex',\r\n  flex: '1 1 auto',\r\n  overflow: 'hidden',\r\n  paddingTop: 64,\r\n  [theme.breakpoints.up('md')]: {\r\n    paddingLeft: 68,\r\n  },\r\n}))\r\n\r\nconst DashboardLayoutContainer = styled('div')({\r\n  display: 'flex',\r\n  flex: '1 1 auto',\r\n  overflow: 'hidden',\r\n})\r\n\r\nconst DashboardLayoutContent = styled('div')({\r\n  flex: '1 1 auto',\r\n  height: '100%',\r\n  overflow: 'auto',\r\n})\r\n\r\nconst DashboardLayout = () => {\r\n  const [isMobileNavOpen, setMobileNavOpen] = useState(false)\r\n\r\n  return (\r\n    <DashboardLayoutRoot>\r\n      <DashboardNavbar onMobileNavOpen={() => setMobileNavOpen(true)} />\r\n      <DashboardSidebar\r\n        onMobileClose={() => setMobileNavOpen(false)}\r\n        openMobile={isMobileNavOpen}\r\n      />\r\n      <DashboardLayoutWrapper>\r\n        <DashboardLayoutContainer>\r\n          <DashboardLayoutContent>\r\n            <Outlet />\r\n          </DashboardLayoutContent>\r\n        </DashboardLayoutContainer>\r\n      </DashboardLayoutWrapper>\r\n    </DashboardLayoutRoot>\r\n  )\r\n}\r\n\r\nexport default DashboardLayout\r\n","import { Outlet } from 'react-router-dom'\r\nimport { styled } from '@mui/material'\r\nimport MainNavbar from './MainNavbar'\r\n\r\nconst MainLayoutRoot = styled('div')(({ theme }) => ({\r\n  backgroundColor: theme.palette.background.paper,\r\n  display: 'flex',\r\n  height: '100%',\r\n  overflow: 'hidden',\r\n  width: '100%',\r\n}))\r\n\r\nconst MainLayoutWrapper = styled('div')({\r\n  display: 'flex',\r\n  flex: '1 1 auto',\r\n  overflow: 'hidden',\r\n})\r\n\r\nconst MainLayoutContainer = styled('div')({\r\n  display: 'flex',\r\n  flex: '1 1 auto',\r\n  overflow: 'hidden',\r\n})\r\n\r\nconst MainLayoutContent = styled('div')({\r\n  flex: '1 1 auto',\r\n  height: '100%',\r\n  overflow: 'auto',\r\n})\r\n\r\nconst MainLayout = () => (\r\n  <MainLayoutRoot>\r\n    <MainLayoutWrapper>\r\n      <MainLayoutContainer>\r\n        <MainLayoutContent>\r\n          <Outlet />\r\n        </MainLayoutContent>\r\n      </MainLayoutContainer>\r\n    </MainLayoutWrapper>\r\n  </MainLayoutRoot>\r\n)\r\n\r\nexport default MainLayout\r\n","import dotenv from 'dotenv'\r\n\r\ndotenv.config()\r\n\r\nconst API_SERVICE = process.env.REACT_APP_API_SERVICE\r\n// const API_SERVICE = 'http://localhost:5000/api/v1/main'\r\nconst SECRET_KEY = process.env.REACT_APP_SECRET_KEY\r\nconst MAP_TOKEN = process.env.REACT_APP_MAP_TOKEN\r\nconst MAP_STYLE = process.env.REACT_APP_MAP_STYLE\r\n\r\n// const API_SERVICE = \"https://trackermobileapp.herokuapp.com\";\r\n\r\nexport { API_SERVICE, SECRET_KEY, MAP_TOKEN, MAP_STYLE }\r\n","import React from 'react'\r\nimport { Box, Stack, Typography } from '@mui/material'\r\nimport {\r\n  Timeline,\r\n  TimelineConnector,\r\n  TimelineContent,\r\n  TimelineDot,\r\n  TimelineItem,\r\n  TimelineSeparator,\r\n} from '@mui/lab'\r\nimport moment from 'moment'\r\n\r\nconst LocationTimeline = (props) => {\r\n  return (\r\n    <Box>\r\n      <Timeline sx={{ px: 0, mr: 4 }}>\r\n        {props.locations.map((location) => (\r\n          <TimelineItem>\r\n            <TimelineSeparator>\r\n              <TimelineDot variant=\"outlined\" color=\"error\" />\r\n              <TimelineConnector />\r\n            </TimelineSeparator>\r\n            <TimelineContent>\r\n              <Box sx={{ pb: 1.3 }}>\r\n                <Typography component=\"h6\">{location.address}</Typography>\r\n                <Typography component=\"p\" sx={{ fontSize: 12 }}>\r\n                  {moment(location.createdAt).format('DD MMMM YYYY - hh:mm a')}\r\n                </Typography>\r\n              </Box>\r\n            </TimelineContent>\r\n          </TimelineItem>\r\n        ))}\r\n      </Timeline>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default React.memo(LocationTimeline)\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Helmet } from 'react-helmet'\r\nimport { Avatar, Box, Container, Typography } from '@mui/material'\r\nimport ReactMapGL, { Marker, Popup } from 'react-map-gl'\r\nimport axios from 'axios'\r\nimport { API_SERVICE, MAP_STYLE, MAP_TOKEN } from '../URI'\r\nimport LocationTimeline from '../components/dashboard/LocationTimeline'\r\n\r\nconst Locationview = (props) => {\r\n    const { user } = props\r\n    const { phoneNumber, createdBy } = user\r\n\r\n    const [lat, setlat] = useState(0)\r\n    const [long, setlong] = useState(0)\r\n    const [viewport, setViewport] = useState({\r\n        width: '100%',\r\n        height: '100%',\r\n        latitude: lat,\r\n        longitude: long,\r\n        zoom: 15,\r\n    })\r\n\r\n    const [selected, setSelected] = useState(false)\r\n    const [selectedLat, setSelectedLat] = useState(null)\r\n    const [selectedLong, setSelectedLong] = useState(null)\r\n    const [userlocationdata, setuserlocationdata] = useState({})\r\n    const [imgUri, setImgUri] = useState('')\r\n    const [load, setLoad] = useState(false)\r\n    const [showDetails, setShowDetails] = useState(false)\r\n    const [locations, setLocations] = useState([])\r\n\r\n    useEffect(async () => {\r\n        setLoad(true)\r\n        if (lat === 0 || long === 0) {\r\n            return\r\n        }\r\n        axios\r\n            .get(`${API_SERVICE}/getlatlong/${selectedLat}/${selectedLong}`)\r\n            .then((response) => {\r\n                console.log('SETTING DATA')\r\n                setuserlocationdata(response.data)\r\n                setLoad(false)\r\n            })\r\n            .catch((err) => console.log(err))\r\n    }, [selectedLat, selectedLong])\r\n\r\n    useEffect(async () => {\r\n        try {\r\n            const { data } = await axios.get(\r\n                `${API_SERVICE}/get/livelocation/${phoneNumber}`\r\n            )\r\n            console.log(data)\r\n            setlat(data.location.latitude)\r\n            setlong(data.location.longitude)\r\n            setViewport({\r\n                ...viewport,\r\n                latitude: data.location.latitude,\r\n                longitude: data.location.longitude,\r\n            })\r\n        } catch (error) {\r\n            console.log(error.message)\r\n        }\r\n    }, [phoneNumber])\r\n\r\n    useEffect(async () => {\r\n        try {\r\n            const { data } = await axios.get(\r\n                `${API_SERVICE}/get/location/${createdBy}/${phoneNumber}/${\r\n                    new Date().getMonth() + 1\r\n                }`\r\n            )\r\n\r\n            setLocations(data)\r\n        } catch (error) {\r\n            console.log(error.message)\r\n        }\r\n    }, [phoneNumber])\r\n\r\n    const handleShowDetails = () => {\r\n        if (showDetails) {\r\n            setShowDetails(false)\r\n            setViewport({ ...viewport, width: '100%' })\r\n        } else {\r\n            setShowDetails(true)\r\n            setViewport({ ...viewport, width: '100%' })\r\n        }\r\n    }\r\n\r\n    const getInitials = (name) => {\r\n        const arr = name.split(' ')\r\n        let initials\r\n        if (arr.length === 1) {\r\n            initials = arr[0].split('')[0].toUpperCase()\r\n        } else {\r\n            initials =\r\n                arr[0].split('')[0].toUpperCase() +\r\n                arr[1].split('')[0].toUpperCase()\r\n        }\r\n\r\n        return initials\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Helmet>\r\n                <title>Dashboard</title>\r\n            </Helmet>\r\n            <Box\r\n                sx={{\r\n                    backgroundColor: 'background.default',\r\n                    minHeight: '100%',\r\n                    display: 'flex',\r\n                }}\r\n            >\r\n                <Container maxWidth={true} sx={{ px: 0, height: '100' }}>\r\n                    {user.trackingStatus === 'accepted' && (\r\n                        <ReactMapGL\r\n                            {...viewport}\r\n                            mapboxApiAccessToken={MAP_TOKEN}\r\n                            mapStyle={MAP_STYLE}\r\n                            onViewportChange={(nextViewport) =>\r\n                                setViewport(nextViewport)\r\n                            }\r\n                        >\r\n                            <Marker\r\n                                key='India Gate1'\r\n                                latitude={lat}\r\n                                longitude={long}\r\n                            >\r\n                                <button\r\n                                    className='marker-btn'\r\n                                    onMouseEnter={(e) => {\r\n                                        e.preventDefault()\r\n                                        setSelected(true)\r\n                                        setSelectedLat(lat)\r\n                                        setSelectedLong(long)\r\n                                    }}\r\n                                    onMouseLeave={(e) => {\r\n                                        e.preventDefault()\r\n                                        setSelected(false)\r\n                                    }}\r\n                                    onClick={handleShowDetails}\r\n                                >\r\n                                    <Avatar\r\n                                        src={imgUri}\r\n                                        sx={{\r\n                                            backgroundColor: 'orange',\r\n                                        }}\r\n                                    >\r\n                                        {getInitials(user.fullName)}\r\n                                    </Avatar>\r\n                                </button>\r\n                            </Marker>\r\n                            {selected ? (\r\n                                <Popup\r\n                                    latitude={selectedLat}\r\n                                    longitude={selectedLong}\r\n                                >\r\n                                    <div>\r\n                                        <h2 style={{ textAlign: 'center' }}>\r\n                                            {user.fullName}\r\n                                        </h2>\r\n                                        {load ? (\r\n                                            <p>Fetching Location ...</p>\r\n                                        ) : (\r\n                                            <p>\r\n                                                {\r\n                                                    userlocationdata.formattedAddress\r\n                                                }\r\n                                            </p>\r\n                                        )}\r\n                                    </div>\r\n                                </Popup>\r\n                            ) : null}\r\n                        </ReactMapGL>\r\n                    )}\r\n\r\n                    {user.trackingStatus === 'pending' && (\r\n                        <Typography\r\n                            sx={{ margin: 10, textAlign: 'center' }}\r\n                            component='h1'\r\n                        >\r\n                            Tracking request is in pending\r\n                        </Typography>\r\n                    )}\r\n\r\n                    {user.trackingStatus === 'rejected' && (\r\n                        <Box sx={{ position: 'relative' }}>\r\n                            <Box\r\n                                sx={{\r\n                                    position: 'absolute',\r\n                                    zIndex: 1000,\r\n                                    backgroundColor: '#f5f5f5',\r\n                                    borderRadius: 25,\r\n                                    right: '50%',\r\n                                    bottom: '30px',\r\n                                    transform: 'translate(50%)',\r\n                                    px: 2,\r\n                                }}\r\n                            >\r\n                                <Typography\r\n                                    sx={{\r\n                                        margin: 2,\r\n                                        textAlign: 'center',\r\n                                        color: 'red',\r\n                                        fontWeight: 'bold',\r\n                                    }}\r\n                                    component='h1'\r\n                                >\r\n                                    Tracking request is rejected\r\n                                </Typography>\r\n                            </Box>\r\n\r\n                            <ReactMapGL\r\n                                {...viewport}\r\n                                mapboxApiAccessToken={MAP_TOKEN}\r\n                                mapStyle={MAP_STYLE}\r\n                                onViewportChange={(nextViewport) =>\r\n                                    setViewport(nextViewport)\r\n                                }\r\n                            >\r\n                                <Marker\r\n                                    key='India Gate1'\r\n                                    latitude={lat}\r\n                                    longitude={long}\r\n                                >\r\n                                    <button\r\n                                        className='marker-btn'\r\n                                        onMouseEnter={(e) => {\r\n                                            e.preventDefault()\r\n                                            setSelected(true)\r\n                                            setSelectedLat(lat)\r\n                                            setSelectedLong(long)\r\n                                        }}\r\n                                        onMouseLeave={(e) => {\r\n                                            e.preventDefault()\r\n                                            setSelected(false)\r\n                                        }}\r\n                                        onClick={handleShowDetails}\r\n                                    >\r\n                                        <Avatar\r\n                                            src={imgUri}\r\n                                            sx={{\r\n                                                backgroundColor: 'orange',\r\n                                            }}\r\n                                        />\r\n                                    </button>\r\n                                </Marker>\r\n                                {selected ? (\r\n                                    <Popup\r\n                                        latitude={selectedLat}\r\n                                        longitude={selectedLong}\r\n                                    >\r\n                                        <div>\r\n                                            <h2 style={{ textAlign: 'center' }}>\r\n                                                {user.fullName}\r\n                                            </h2>\r\n                                            {load ? (\r\n                                                <p>Fetching Location ...</p>\r\n                                            ) : (\r\n                                                <p>\r\n                                                    {\r\n                                                        userlocationdata.formattedAddress\r\n                                                    }\r\n                                                </p>\r\n                                            )}\r\n                                        </div>\r\n                                    </Popup>\r\n                                ) : null}\r\n                            </ReactMapGL>\r\n                        </Box>\r\n                    )}\r\n                </Container>\r\n                {showDetails && (\r\n                    <Box\r\n                        className='location-history'\r\n                        sx={{\r\n                            width: 400,\r\n                            display: 'flex',\r\n                            justifyContent: 'flex-start',\r\n                            height: '82vh',\r\n                            overflowY: 'scroll',\r\n                        }}\r\n                    >\r\n                        {locations.length !== 0 ? (\r\n                            <LocationTimeline locations={locations} />\r\n                        ) : (\r\n                            <Box\r\n                                sx={{\r\n                                    width: 300,\r\n                                    display: 'flex',\r\n                                    alignItems: 'center',\r\n                                    justifyContent: 'center',\r\n                                }}\r\n                            >\r\n                                <Typography component='h5' variant='h5'>\r\n                                    No History Found\r\n                                </Typography>\r\n                            </Box>\r\n                        )}\r\n                    </Box>\r\n                )}\r\n            </Box>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default React.memo(Locationview)\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Helmet } from 'react-helmet'\r\nimport { Avatar, Box, Container, Typography } from '@mui/material'\r\nimport ReactMapGL, { Marker, Popup } from 'react-map-gl'\r\nimport axios from 'axios'\r\nimport LocationTimeline from '../components/dashboard/LocationTimeline'\r\n\r\nimport { API_SERVICE, MAP_STYLE, MAP_TOKEN } from '../URI'\r\n\r\nconst AllLocationView = (props) => {\r\n    const { userList, senderId, trackingList } = props\r\n\r\n    const [selected, setSelected] = useState(false)\r\n    const [selectedLat, setSelectedLat] = useState(null)\r\n    const [selectedLong, setSelectedLong] = useState(null)\r\n    const [selectedLocation, setSelectedLocation] = useState(0)\r\n    const [selectedDevice, setSelectedDevice] = useState('')\r\n    const [userlocationdata, setuserlocationdata] = useState({})\r\n    const [lat, setlat] = useState(28.598)\r\n    const [long, setlong] = useState(77.3)\r\n    const [load, setLoad] = useState(false)\r\n    const [showDetails, setShowDetails] = useState(false)\r\n    const [locations, setLocations] = useState([])\r\n    const [trackingData, setTrackingData] = useState([])\r\n\r\n    const [viewport, setViewport] = useState({\r\n        width: '100%',\r\n        height: '100%',\r\n        latitude: lat,\r\n        longitude: long,\r\n        zoom: 11,\r\n    })\r\n\r\n    useEffect(() => {\r\n        const data = []\r\n        trackingList.forEach((list) => {\r\n            userList.forEach((item) => {\r\n                if (list.phoneNumber === item.phoneNumber) {\r\n                    list['location'] = item.location\r\n                    data.push(list)\r\n                }\r\n            })\r\n        })\r\n\r\n        setTrackingData(data)\r\n    }, [trackingList, userList])\r\n\r\n    useEffect(async () => {\r\n        setLoad(true)\r\n        axios\r\n            .get(`${API_SERVICE}/getlatlong/${selectedLat}/${selectedLong}`)\r\n            .then((response) => {\r\n                setuserlocationdata(response.data)\r\n                setLoad(false)\r\n            })\r\n            .catch((err) => console.log(err))\r\n    }, [selectedLat, selectedLong])\r\n\r\n    useEffect(async () => {\r\n        if (selectedDevice.length === 0) {\r\n            return\r\n        }\r\n        try {\r\n            const { data } = await axios.get(\r\n                `${API_SERVICE}/get/location/${senderId}/${selectedDevice}/${\r\n                    new Date().getMonth() + 1\r\n                }`\r\n            )\r\n\r\n            setLocations(data)\r\n        } catch (error) {\r\n            console.log(error.message)\r\n        }\r\n    }, [selectedDevice])\r\n\r\n    const handleShowDetails = (user) => {\r\n        if (showDetails) {\r\n            setShowDetails(false)\r\n            setViewport({ ...viewport, width: '100%' })\r\n        } else {\r\n            setShowDetails(true)\r\n            setViewport({ ...viewport, width: '100%' })\r\n            setSelectedDevice(user.phoneNumber)\r\n        }\r\n    }\r\n\r\n    const getInitials = (name) => {\r\n        const arr = name.split(' ')\r\n        let initials\r\n        if (arr.length === 1) {\r\n            initials = arr[0].split('')[0].toUpperCase()\r\n        } else {\r\n            initials =\r\n                arr[0].split('')[0].toUpperCase() +\r\n                arr[1].split('')[0].toUpperCase()\r\n        }\r\n\r\n        return initials\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Helmet>\r\n                <title>Dashboard</title>\r\n            </Helmet>\r\n            <Box\r\n                sx={{\r\n                    backgroundColor: 'background.default',\r\n                    minHeight: '100%',\r\n                    display: 'flex',\r\n                }}\r\n            >\r\n                <Container maxWidth sx={{ height: '100' }}>\r\n                    <ReactMapGL\r\n                        {...viewport}\r\n                        mapboxApiAccessToken={MAP_TOKEN}\r\n                        mapStyle={MAP_STYLE}\r\n                        onViewportChange={(nextViewport) =>\r\n                            setViewport(nextViewport)\r\n                        }\r\n                    >\r\n                        {trackingData.map((user, index) => (\r\n                            <Marker\r\n                                key={user.phoneNumber}\r\n                                latitude={user.location.latitude}\r\n                                longitude={user.location.longitude}\r\n                            >\r\n                                <button\r\n                                    className='marker-btn'\r\n                                    onMouseEnter={(e) => {\r\n                                        e.preventDefault()\r\n                                        setSelected(true)\r\n                                        setSelectedLat(user.location.latitude)\r\n                                        setSelectedLong(user.location.longitude)\r\n                                        setlat(user.location.latitude)\r\n                                        setlong(user.location.longitude)\r\n\r\n                                        setSelectedLocation(index)\r\n                                    }}\r\n                                    onMouseLeave={(e) => {\r\n                                        e.preventDefault()\r\n                                        setSelected(false)\r\n                                    }}\r\n                                    onClick={() => handleShowDetails(user)}\r\n                                >\r\n                                    <Avatar sx={{ backgroundColor: 'orange' }}>\r\n                                        {getInitials(user.fullName)}\r\n                                    </Avatar>\r\n                                </button>\r\n                            </Marker>\r\n                        ))}\r\n                        {selected ? (\r\n                            <Popup\r\n                                latitude={selectedLat}\r\n                                longitude={selectedLong}\r\n                                onClose={() => {\r\n                                    setSelected(false)\r\n                                    setSelectedLat(0)\r\n                                    setSelectedLong(0)\r\n                                }}\r\n                            >\r\n                                <div>\r\n                                    <h2\r\n                                        style={{\r\n                                            textAlign: 'center',\r\n                                            marginBottom: '10px',\r\n                                        }}\r\n                                    >\r\n                                        {\r\n                                            trackingData[selectedLocation]\r\n                                                .fullName\r\n                                        }\r\n                                    </h2>\r\n                                    {load ? (\r\n                                        <p>Fetching Location ...</p>\r\n                                    ) : (\r\n                                        <p>\r\n                                            {userlocationdata.formattedAddress}\r\n                                        </p>\r\n                                    )}\r\n                                </div>\r\n                            </Popup>\r\n                        ) : null}\r\n                    </ReactMapGL>\r\n                </Container>\r\n                {showDetails && (\r\n                    <Box\r\n                        className='location-history'\r\n                        sx={{\r\n                            width: 400,\r\n                            display: 'flex',\r\n                            justifyContent: 'flex-start',\r\n                            height: '82vh',\r\n                            overflowY: 'scroll',\r\n                        }}\r\n                    >\r\n                        {locations.length !== 0 ? (\r\n                            <LocationTimeline locations={locations} />\r\n                        ) : (\r\n                            <Box\r\n                                sx={{\r\n                                    width: 300,\r\n                                    display: 'flex',\r\n                                    alignItems: 'center',\r\n                                    justifyContent: 'center',\r\n                                }}\r\n                            >\r\n                                <Typography component='h5' variant='h5'>\r\n                                    No History Found\r\n                                </Typography>\r\n                            </Box>\r\n                        )}\r\n                    </Box>\r\n                )}\r\n            </Box>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default React.memo(AllLocationView)\r\n","export const ADD_FORM_SUCCESS = 'ADD_FORM_SUCCESS'\r\nexport const GET_FORM_SUCCESS = 'GET_FORM_SUCCESS'\r\nexport const DELETE_FORM_SUCCESS = 'DELETE_FORM_SUCCESS'\r\n\r\nexport const ADD_FORM_FAIL = 'ADD_FORM_FAIL'\r\nexport const GET_FORM_FAIL = 'GET_FORM_FAIL'\r\nexport const DELETE_FORM_FAIL = 'DELETE_FORM_FAIL'\r\n\r\n// ***************** HOTSPOT ******************* //\r\n\r\nexport const CREATE_HOTSPOT_SUCCESS = 'CREATE_HOTSPOT_SUCCESS'\r\nexport const CREATE_HOTSPOT_FAIL = 'CREATE_HOTSPOT_FAIL'\r\n\r\nexport const GET_HOTSPOT_SUCCESS = 'GET_HOTSPOT_SUCCESS'\r\nexport const GET_HOTSPOT_FAIL = 'GET_HOTSPOT_FAIL'\r\n\r\nexport const UPDATE_HOTSPOT_SUCCESS = 'UPDATE_HOTSPOT_SUCCESS'\r\nexport const UPDATE_HOTSPOT_FAIL = 'UPDATE_HOTSPOT_FAIL'\r\n\r\nexport const DELETE_HOTSPOT_SUCCESS = 'DELETE_HOTSPOT_SUCCESS'\r\nexport const DELETE_HOTSPOT_FAIL = 'DELETE_HOTSPOT_FAIL'\r\n\r\n// ***************** GROUP ******************* //\r\n\r\nexport const CREATE_GROUP_SUCCESS = 'CREATE_GROUP_SUCCESS'\r\nexport const CREATE_GROUP_FAIL = 'CREATE_GROUP_FAIL'\r\n\r\nexport const GET_GROUP_SUCCESS = 'GET_GROUP_SUCCESS'\r\nexport const GET_GROUP_FAIL = 'GET_GROUP_FAIL'\r\n\r\nexport const UPDATE_GROUP_SUCCESS = 'UPDATE_GROUP_SUCCESS'\r\nexport const UPDATE_GROUP_FAIL = 'UPDATE_GROUP_FAIL'\r\n\r\nexport const DELETE_GROUP_SUCCESS = 'DELETE_GROUP_SUCCESS'\r\nexport const DELETE_GROUP_FAIL = 'DELETE_GROUP_FAIL'\r\n\r\n// ***************** ADMIN ******************* //\r\n\r\nexport const CREATE_ADMIN_SUCCESS = 'CREATE_ADMIN_SUCCESS'\r\nexport const CREATE_ADMIN_FAIL = 'CREATE_ADMIN_FAIL'\r\n\r\nexport const GET_ADMIN_SUCCESS = 'GET_ADMIN_SUCCESS'\r\nexport const GET_ADMIN_FAIL = 'GET_ADMIN_FAIL'\r\n\r\nexport const UPDATE_ADMIN_SUCCESS = 'UPDATE_ADMIN_SUCCESS'\r\nexport const UPDATE_ADMIN_FAIL = 'UPDATE_ADMIN_FAIL'\r\n\r\nexport const DELETE_ADMIN_SUCCESS = 'DELETE_ADMIN_SUCCESS'\r\nexport const DELETE_ADMIN_FAIL = 'DELETE_ADMIN_FAIL'\r\n\r\n// ***************** DEVICE ******************* //\r\n\r\nexport const CREATE_DEVICE_SUCCESS = 'CREATE_DEVICE_SUCCESS'\r\nexport const CREATE_DEVICE_FAIL = 'CREATE_DEVICE_FAIL'\r\n\r\nexport const GET_DEVICE_SUCCESS = 'GET_DEVICE_SUCCESS'\r\nexport const GET_DEVICE_FAIL = 'GET_DEVICE_FAIL'\r\n\r\nexport const UPDATE_DEVICE_SUCCESS = 'UPDATE_DEVICE_SUCCESS'\r\nexport const UPDATE_DEVICE_FAIL = 'UPDATE_DEVICE_FAIL'\r\n\r\nexport const DELETE_DEVICE_SUCCESS = 'DELETE_DEVICE_SUCCESS'\r\nexport const DELETE_DEVICE_FAIL = 'DELETE_DEVICE_FAIL'\r\n","import * as types from '../constants'\r\nimport axios from 'axios'\r\nimport { API_SERVICE } from '../../URI'\r\n\r\nconst createDevice = (bodyData) => async (dispatch, getState) => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n\r\n        const body = {\r\n            body: bodyData,\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `${API_SERVICE}/create/device`,\r\n            body,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: types.CREATE_DEVICE_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n        sessionStorage.setItem(\r\n            'deviceList',\r\n            JSON.stringify(getState().devices.deviceList)\r\n        )\r\n    } catch (error) {\r\n        console.log()\r\n        dispatch({\r\n            type: types.CREATE_DEVICE_FAIL,\r\n            payload: error.response.data.message,\r\n        })\r\n    }\r\n}\r\n\r\nconst getDevices = (createdBy) => async (dispatch) => {\r\n    try {\r\n        const { data } = await axios.get(\r\n            `${API_SERVICE}/get/devices/${createdBy}`\r\n        )\r\n        dispatch({\r\n            type: types.GET_DEVICE_SUCCESS,\r\n            payload: data,\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: types.GET_DEVICE_FAIL,\r\n            payload: error.message,\r\n        })\r\n    }\r\n}\r\n\r\nconst getAdminDevices = (body) => async (dispatch) => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n        const { data } = await axios.post(\r\n            `${API_SERVICE}/get/devices/admin`,\r\n            body,\r\n            config\r\n        )\r\n        dispatch({\r\n            type: types.GET_DEVICE_SUCCESS,\r\n            payload: data,\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: types.GET_DEVICE_FAIL,\r\n            payload: error.message,\r\n        })\r\n    }\r\n}\r\n\r\nconst updateDevice = (body) => async (dispatch, getState) => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `${API_SERVICE}/update/device`,\r\n            body,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: types.UPDATE_DEVICE_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n        sessionStorage.setItem(\r\n            'deviceList',\r\n            JSON.stringify(getState().devices.deviceList)\r\n        )\r\n    } catch (error) {\r\n        dispatch({\r\n            type: types.UPDATE_DEVICE_FAIL,\r\n            payload: error.message,\r\n        })\r\n    }\r\n}\r\n\r\nconst deleteDevice = (_id) => async (dispatch, getState) => {\r\n    try {\r\n        await axios.delete(`${API_SERVICE}/delete/device/${_id}`)\r\n\r\n        dispatch({\r\n            type: types.DELETE_DEVICE_SUCCESS,\r\n            payload: _id,\r\n        })\r\n\r\n        sessionStorage.setItem(\r\n            'deviceList',\r\n            JSON.stringify(getState().devices.deviceList)\r\n        )\r\n    } catch (error) {\r\n        dispatch({\r\n            type: types.DELETE_DEVICE_FAIL,\r\n            payload: error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport { createDevice, getAdminDevices, getDevices, updateDevice, deleteDevice }\r\n","import * as types from '../constants'\r\nimport axios from 'axios'\r\nimport { API_SERVICE } from '../../URI'\r\n\r\nconst createHotspot = (bodyData) => async (dispatch, getState) => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n\r\n        const body = {\r\n            body: bodyData,\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `${API_SERVICE}/create/hotspot`,\r\n            body,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: types.CREATE_HOTSPOT_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n        sessionStorage.setItem(\r\n            'hotspotList',\r\n            JSON.stringify(getState().hotspots.hotspotList)\r\n        )\r\n    } catch (error) {\r\n        dispatch({\r\n            type: types.CREATE_HOTSPOT_FAIL,\r\n            payload: error.message,\r\n        })\r\n    }\r\n}\r\n\r\nconst getAdminHotspots = (body) => async (dispatch) => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n        const { data } = await axios.post(\r\n            `${API_SERVICE}/get/hotspots/admin`,\r\n            body,\r\n            config\r\n        )\r\n        dispatch({\r\n            type: types.GET_HOTSPOT_SUCCESS,\r\n            payload: data,\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: types.GET_HOTSPOT_FAIL,\r\n            payload: error.message,\r\n        })\r\n    }\r\n}\r\n\r\nconst getHotspots = (createdBy) => async (dispatch) => {\r\n    try {\r\n        const { data } = await axios.get(\r\n            `${API_SERVICE}/get/hotspots/${createdBy}`\r\n        )\r\n        dispatch({\r\n            type: types.GET_HOTSPOT_SUCCESS,\r\n            payload: data,\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: types.GET_HOTSPOT_FAIL,\r\n            payload: error.message,\r\n        })\r\n    }\r\n}\r\n\r\nconst updateHotspot = (body) => async (dispatch, getState) => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `${API_SERVICE}/update/hotspot`,\r\n            body,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: types.UPDATE_HOTSPOT_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n        sessionStorage.setItem(\r\n            'hotspotList',\r\n            JSON.stringify(getState().hotspots.hotspotList)\r\n        )\r\n    } catch (error) {\r\n        dispatch({\r\n            type: types.UPDATE_HOTSPOT_FAIL,\r\n            payload: error.message,\r\n        })\r\n    }\r\n}\r\n\r\nconst deleteHotspot = (_id) => async (dispatch, getState) => {\r\n    try {\r\n        await axios.delete(`${API_SERVICE}/delete/hotspot/${_id}`)\r\n\r\n        dispatch({\r\n            type: types.DELETE_HOTSPOT_SUCCESS,\r\n            payload: _id,\r\n        })\r\n\r\n        sessionStorage.setItem(\r\n            'hotspotList',\r\n            JSON.stringify(getState().hotspots.hotspotList)\r\n        )\r\n    } catch (error) {\r\n        dispatch({\r\n            type: types.DELETE_HOTSPOT_FAIL,\r\n            payload: error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport {\r\n    createHotspot,\r\n    getAdminHotspots,\r\n    getHotspots,\r\n    updateHotspot,\r\n    deleteHotspot,\r\n}\r\n","import * as types from '../constants'\r\nimport axios from 'axios'\r\nimport { API_SERVICE } from '../../URI'\r\nimport { async } from '@firebase/util'\r\n\r\nconst createAdmin = (bodyData) => async (dispatch, getState) => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n\r\n        const body = {\r\n            body: bodyData,\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `${API_SERVICE}/create/admin`,\r\n            body,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: types.CREATE_ADMIN_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n        sessionStorage.setItem(\r\n            'adminList',\r\n            JSON.stringify(getState().admins.adminList)\r\n        )\r\n    } catch (error) {\r\n        dispatch({\r\n            type: types.CREATE_ADMIN_FAIL,\r\n            payload: error.message,\r\n        })\r\n    }\r\n}\r\n\r\nconst getAdmins = (createdBy) => async (dispatch) => {\r\n    try {\r\n        const { data } = await axios.get(\r\n            `${API_SERVICE}/get/admins/${createdBy}`\r\n        )\r\n        dispatch({\r\n            type: types.GET_ADMIN_SUCCESS,\r\n            payload: data,\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: types.GET_ADMIN_FAIL,\r\n            payload: error.message,\r\n        })\r\n    }\r\n}\r\n\r\nconst updateAdmin = (body) => async (dispatch, getState) => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `${API_SERVICE}/update/admin`,\r\n            body,\r\n            config\r\n        )\r\n\r\n        console.log(data)\r\n\r\n        dispatch({\r\n            type: types.UPDATE_ADMIN_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n        sessionStorage.setItem(\r\n            'adminList',\r\n            JSON.stringify(getState().admins.adminList)\r\n        )\r\n    } catch (error) {\r\n        dispatch({\r\n            type: types.UPDATE_ADMIN_FAIL,\r\n            payload: error.message,\r\n        })\r\n    }\r\n}\r\n\r\nconst deleteAdmin = (_id) => async (dispatch, getState) => {\r\n    try {\r\n        await axios.delete(`${API_SERVICE}/delete/admin/${_id}`)\r\n\r\n        dispatch({\r\n            type: types.DELETE_ADMIN_SUCCESS,\r\n            payload: _id,\r\n        })\r\n\r\n        sessionStorage.setItem(\r\n            'adminList',\r\n            JSON.stringify(getState().admins.adminList)\r\n        )\r\n    } catch (error) {\r\n        dispatch({\r\n            type: types.DELETE_ADMIN_FAIL,\r\n            payload: error.message,\r\n        })\r\n    }\r\n}\r\n\r\nconst sendEmail = (emailData) => async (dispatch) => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `${API_SERVICE}/send-email`,\r\n            emailData,\r\n            config\r\n        )\r\n\r\n        console.log(data)\r\n    } catch (error) {\r\n        console.log('Error occured while sending email')\r\n    }\r\n}\r\n\r\nexport { createAdmin, getAdmins, updateAdmin, deleteAdmin, sendEmail }\r\n","import * as types from '../constants'\r\nimport axios from 'axios'\r\nimport { API_SERVICE } from '../../URI'\r\n\r\nconst createGroup = (bodyData) => async (dispatch, getState) => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n\r\n        const body = {\r\n            body: bodyData,\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `${API_SERVICE}/create/group`,\r\n            body,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: types.CREATE_GROUP_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n        sessionStorage.setItem(\r\n            'groupList',\r\n            JSON.stringify(getState().groups.groupList)\r\n        )\r\n    } catch (error) {\r\n        dispatch({\r\n            type: types.CREATE_GROUP_FAIL,\r\n            payload: error.message,\r\n        })\r\n    }\r\n}\r\n\r\nconst getGroups = (createdBy) => async (dispatch) => {\r\n    try {\r\n        const { data } = await axios.get(\r\n            `${API_SERVICE}/get/groups/${createdBy}`\r\n        )\r\n        dispatch({\r\n            type: types.GET_GROUP_SUCCESS,\r\n            payload: data,\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: types.GET_GROUP_FAIL,\r\n            payload: error.message,\r\n        })\r\n    }\r\n}\r\n\r\nconst updateGroup = (body) => async (dispatch, getState) => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `${API_SERVICE}/update/group`,\r\n            body,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: types.UPDATE_GROUP_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n        sessionStorage.setItem(\r\n            'groupList',\r\n            JSON.stringify(getState().groups.groupList)\r\n        )\r\n    } catch (error) {\r\n        dispatch({\r\n            type: types.UPDATE_GROUP_FAIL,\r\n            payload: error.message,\r\n        })\r\n    }\r\n}\r\n\r\nconst deleteGroup = (_id) => async (dispatch, getState) => {\r\n    try {\r\n        await axios.delete(`${API_SERVICE}/delete/group/${_id}`)\r\n\r\n        dispatch({\r\n            type: types.DELETE_GROUP_SUCCESS,\r\n            payload: _id,\r\n        })\r\n\r\n        sessionStorage.setItem(\r\n            'groupList',\r\n            JSON.stringify(getState().groups.groupList)\r\n        )\r\n    } catch (error) {\r\n        dispatch({\r\n            type: types.DELETE_GROUP_FAIL,\r\n            payload: error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport { createGroup, getGroups, updateGroup, deleteGroup }\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport {\r\n    Box,\r\n    TextField,\r\n    InputAdornment,\r\n    SvgIcon,\r\n    Typography,\r\n    Grid,\r\n    MenuItem,\r\n    Menu,\r\n    Stack,\r\n} from '@mui/material'\r\nimport { makeStyles } from '@mui/styles'\r\n\r\nimport Paper from '@mui/material/Paper'\r\nimport IconButton from '@mui/material/IconButton'\r\nimport List from '@mui/material/List'\r\nimport ListItem from '@mui/material/ListItem'\r\nimport ListItemText from '@mui/material/ListItemText'\r\nimport ListItemAvatar from '@mui/material/ListItemAvatar'\r\nimport Avatar from '@mui/material/Avatar'\r\nimport PeopleIcon from '@mui/icons-material/People'\r\nimport Snackbar from '@mui/material/Snackbar'\r\nimport Alert from '@mui/material/Alert'\r\nimport { Search as SearchIcon } from 'react-feather'\r\nimport Locationview from './Locationview'\r\nimport AllLocationView from './AllLocationView'\r\nimport FilterAltIcon from '@mui/icons-material/FilterAlt'\r\nimport { getDevices, getAdminDevices } from '../store/actions/device'\r\n\r\nimport axios from 'axios'\r\nimport { API_SERVICE } from '../URI'\r\nimport { getAdminHotspots, getHotspots } from '../store/actions/hotspot'\r\nimport { getAdmins } from '../store/actions/admin'\r\nimport { getGroups } from '../store/actions/group'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        height: '100%',\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(1),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n    },\r\n}))\r\n\r\nconst Dashboard = () => {\r\n    const classes = useStyles()\r\n\r\n    const [selectedIndex, setSelectedIndex] = useState(-1)\r\n    const [userLocations, setUserLocations] = useState([])\r\n    const [search, setSearch] = useState('')\r\n    const [searchResult, setSearchResult] = useState([])\r\n\r\n    const [snackOpen, setSnackOpen] = useState(false)\r\n    const [success, setSuccess] = useState(null)\r\n    const [error, setError] = useState(null)\r\n\r\n    const [filter, setFilter] = useState(null)\r\n    const [anchorEl, setAnchorEl] = useState(null)\r\n    const menuOpen = Boolean(anchorEl)\r\n\r\n    const dispatch = useDispatch()\r\n    const devices = useSelector((state) => state.devices)\r\n    const { deviceList } = devices\r\n\r\n    const handleFilterClick = (event) => {\r\n        setAnchorEl(event.currentTarget)\r\n    }\r\n    const handleFilterClose = () => {\r\n        setAnchorEl(null)\r\n    }\r\n\r\n    const handleSnackClose = (_, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return\r\n        }\r\n        setSnackOpen(false)\r\n        setError(null)\r\n        setSuccess(null)\r\n    }\r\n\r\n    const userData = JSON.parse(localStorage.getItem('userData'))\r\n    const adminData = JSON.parse(localStorage.getItem('adminData'))\r\n\r\n    useEffect(() => {\r\n        if (adminData === null && userData !== null) {\r\n            dispatch(getDevices(userData.uid))\r\n            dispatch(getHotspots(userData.uid))\r\n            dispatch(getGroups(userData.uid))\r\n            dispatch(getAdmins(userData.uid))\r\n        }\r\n\r\n        if (adminData !== null && userData !== null) {\r\n            const getHotspotAndDevices = async () => {\r\n                const { data } = await axios.get(\r\n                    `${API_SERVICE}/get/admin/${adminData.email}`\r\n                )\r\n                dispatch(\r\n                    getAdminDevices({\r\n                        createdBy: userData.uid,\r\n                        adminGroups: data.groups,\r\n                    })\r\n                )\r\n                dispatch(\r\n                    getAdminHotspots({\r\n                        createdBy: userData.uid,\r\n                        adminGroups: data.groups,\r\n                    })\r\n                )\r\n            }\r\n\r\n            getHotspotAndDevices()\r\n        }\r\n    }, [dispatch])\r\n\r\n    useEffect(() => {\r\n        if (deviceList.length !== 0) {\r\n            const getUserLocations = async () => {\r\n                const phoneNumberArr = deviceList.map((x) => x.phoneNumber)\r\n\r\n                try {\r\n                    const config = {\r\n                        headers: {\r\n                            'Content-Type': 'application/json',\r\n                        },\r\n                    }\r\n                    const body = { phoneNumbers: phoneNumberArr }\r\n                    const { data } = await axios.post(\r\n                        `${API_SERVICE}/get/livelocations`,\r\n                        body,\r\n                        config\r\n                    )\r\n                    setUserLocations(data)\r\n                } catch (error) {\r\n                    console.log(error.message)\r\n                }\r\n            }\r\n\r\n            getUserLocations()\r\n        }\r\n    }, [deviceList])\r\n\r\n    useEffect(() => {\r\n        if (search.length === 0) {\r\n            setSearchResult([])\r\n        }\r\n\r\n        setSelectedIndex(-1)\r\n        const temp = deviceList\r\n\r\n        const filterArr = temp.filter((x) =>\r\n            x.fullName.toLowerCase().includes(search.toLowerCase())\r\n        )\r\n\r\n        setSearchResult(filterArr)\r\n    }, [search])\r\n\r\n    useEffect(() => {\r\n        if (filter === 'all') {\r\n            setSearchResult([])\r\n            return\r\n        }\r\n\r\n        const temp = deviceList\r\n        const filterArr = temp.filter((x) => x.trackingStatus === filter)\r\n        setSearchResult(filterArr)\r\n    }, [filter])\r\n\r\n    const handleListItemClick = (_, index) => {\r\n        setSelectedIndex(index)\r\n    }\r\n\r\n    const changeFilter = (val) => {\r\n        setFilter(val)\r\n        handleFilterClose()\r\n    }\r\n\r\n    const getInitials = (name) => {\r\n        const arr = name.split(' ')\r\n        const initials =\r\n            arr[0].split('')[0].toUpperCase() +\r\n            arr[1].split('')[0].toUpperCase()\r\n\r\n        return initials\r\n    }\r\n\r\n    return (\r\n        <Box className={classes.root}>\r\n            <Grid container sx={{ height: 'inherit' }}>\r\n                <Grid\r\n                    item\r\n                    xs={2.4}\r\n                    sx={{\r\n                        height: '100%',\r\n                        overflowY: 'scroll',\r\n                    }}\r\n                    className='gridItem'\r\n                >\r\n                    <Paper sx={{ minHeight: '100%' }} className={classes.paper}>\r\n                        <Box sx={{ maxWidth: 500 }}>\r\n                            <TextField\r\n                                fullWidth\r\n                                InputProps={{\r\n                                    startAdornment: (\r\n                                        <InputAdornment position='start'>\r\n                                            <SvgIcon\r\n                                                fontSize='small'\r\n                                                color='action'\r\n                                            >\r\n                                                <SearchIcon />\r\n                                            </SvgIcon>\r\n                                        </InputAdornment>\r\n                                    ),\r\n                                    endAdornment: (\r\n                                        <IconButton onClick={handleFilterClick}>\r\n                                            <SvgIcon\r\n                                                fontSize='small'\r\n                                                color='action'\r\n                                            >\r\n                                                <FilterAltIcon />\r\n                                            </SvgIcon>\r\n                                        </IconButton>\r\n                                    ),\r\n                                }}\r\n                                placeholder='Search user'\r\n                                variant='outlined'\r\n                                onChange={(e) => setSearch(e.target.value)}\r\n                            />\r\n                            <Menu\r\n                                anchorEl={anchorEl}\r\n                                open={menuOpen}\r\n                                onClose={handleFilterClose}\r\n                            >\r\n                                <MenuItem\r\n                                    sx={{ py: 1.2, px: 2.5 }}\r\n                                    onClick={() => {\r\n                                        changeFilter('all')\r\n                                        setSelectedIndex(-1)\r\n                                    }}\r\n                                >\r\n                                    All Requests\r\n                                </MenuItem>\r\n                                <MenuItem\r\n                                    sx={{ py: 1.2, px: 2.5 }}\r\n                                    onClick={() => {\r\n                                        changeFilter('accepted')\r\n                                        setSelectedIndex(-1)\r\n                                    }}\r\n                                >\r\n                                    Accepted Requests\r\n                                </MenuItem>\r\n                                <MenuItem\r\n                                    sx={{ py: 1.2, px: 2.5 }}\r\n                                    onClick={() => {\r\n                                        changeFilter('rejected')\r\n                                        setSelectedIndex(-1)\r\n                                    }}\r\n                                >\r\n                                    Rejected Requests\r\n                                </MenuItem>\r\n                                <MenuItem\r\n                                    sx={{ py: 1.2, px: 2.5 }}\r\n                                    onClick={() => {\r\n                                        changeFilter('pending')\r\n                                        setSelectedIndex(-1)\r\n                                    }}\r\n                                >\r\n                                    Pending Requests\r\n                                </MenuItem>\r\n                            </Menu>\r\n                        </Box>\r\n                        <List component='nav'>\r\n                            <ListItem\r\n                                key={-1}\r\n                                button\r\n                                sx={{\r\n                                    mt: 0.5,\r\n                                    mb: 0.5,\r\n                                    backgroundColor: '#F5F5F5',\r\n                                    pt: 1.5,\r\n                                    pb: 1.5,\r\n                                }}\r\n                                selected={selectedIndex === -1}\r\n                                onClick={() => setSelectedIndex(-1)}\r\n                            >\r\n                                <ListItemAvatar>\r\n                                    <Avatar sx={{ backgroundColor: 'orange' }}>\r\n                                        <PeopleIcon />\r\n                                    </Avatar>\r\n                                </ListItemAvatar>\r\n                                <ListItemText primary='Overview All Devices' />\r\n                            </ListItem>\r\n\r\n                            {searchResult.length === 0 &&\r\n                                deviceList !== undefined &&\r\n                                deviceList !== null &&\r\n                                deviceList.map((item, index) => (\r\n                                    <ListItem\r\n                                        key={index}\r\n                                        button\r\n                                        disabled={\r\n                                            item.trackingStatus === 'pending'\r\n                                        }\r\n                                        sx={{\r\n                                            mt: 0.5,\r\n                                            mb: 0.5,\r\n                                            py: 2,\r\n                                            backgroundColor: '#F5F5F5',\r\n                                            borderLeft:\r\n                                                item.trackingStatus ===\r\n                                                'accepted'\r\n                                                    ? '6px solid green'\r\n                                                    : item.trackingStatus ===\r\n                                                      'rejected'\r\n                                                    ? '6px solid red'\r\n                                                    : '6px solid orange',\r\n                                        }}\r\n                                        selected={selectedIndex === index}\r\n                                        onClick={(event) =>\r\n                                            handleListItemClick(event, index)\r\n                                        }\r\n                                    >\r\n                                        <ListItemAvatar>\r\n                                            <Avatar\r\n                                                sx={{\r\n                                                    backgroundColor: 'orange',\r\n                                                }}\r\n                                            >\r\n                                                <Typography\r\n                                                    fontSize={16}\r\n                                                    letterSpacing={1}\r\n                                                >\r\n                                                    {getInitials(item.fullName)}\r\n                                                </Typography>\r\n                                            </Avatar>\r\n                                        </ListItemAvatar>\r\n                                        <ListItemText primary={item.fullName} />\r\n                                    </ListItem>\r\n                                ))}\r\n\r\n                            {/* showing search results */}\r\n                            {searchResult.length !== 0 &&\r\n                                searchResult.map((item, index) => (\r\n                                    <ListItem\r\n                                        key={index}\r\n                                        button\r\n                                        disabled={\r\n                                            item.trackingStatus === 'pending'\r\n                                        }\r\n                                        sx={{\r\n                                            mt: 0.5,\r\n                                            mb: 0.5,\r\n                                            py: 2,\r\n                                            backgroundColor: '#F5F5F5',\r\n                                            borderLeft:\r\n                                                item.trackingStatus ===\r\n                                                'accepted'\r\n                                                    ? '6px solid green'\r\n                                                    : item.trackingStatus ===\r\n                                                      'rejected'\r\n                                                    ? '6px solid red'\r\n                                                    : '6px solid orange',\r\n                                        }}\r\n                                        selected={selectedIndex === index}\r\n                                        onClick={(event) =>\r\n                                            handleListItemClick(event, index)\r\n                                        }\r\n                                    >\r\n                                        <ListItemAvatar>\r\n                                            <Avatar\r\n                                                sx={{\r\n                                                    backgroundColor: 'orange',\r\n                                                }}\r\n                                            >\r\n                                                <Typography\r\n                                                    fontSize={16}\r\n                                                    letterSpacing={1}\r\n                                                >\r\n                                                    {getInitials(item.fullName)}\r\n                                                </Typography>\r\n                                            </Avatar>\r\n                                        </ListItemAvatar>\r\n                                        <ListItemText primary={item.fullName} />\r\n                                    </ListItem>\r\n                                ))}\r\n                        </List>\r\n                    </Paper>\r\n                </Grid>\r\n\r\n                <Grid item xs={9.6} sx={{ height: '100%' }}>\r\n                    <Stack\r\n                        direction='row'\r\n                        justifyContent='space-between'\r\n                        sx={{ padding: 2 }}\r\n                    >\r\n                        <Typography variant='h4' component='h2'>\r\n                            Current Activity\r\n                        </Typography>\r\n                    </Stack>\r\n                    <Box\r\n                        sx={{\r\n                            height: '90%',\r\n                            py: 1,\r\n                        }}\r\n                    >\r\n                        {selectedIndex === -1 && (\r\n                            <AllLocationView\r\n                                userList={userLocations}\r\n                                senderId={userData?.uid}\r\n                                trackingList={deviceList}\r\n                            />\r\n                        )}\r\n                        {selectedIndex >= 0 && searchResult.length === 0 && (\r\n                            <Locationview\r\n                                user={deviceList[selectedIndex]}\r\n                                index={selectedIndex}\r\n                            />\r\n                        )}\r\n\r\n                        {selectedIndex >= 0 && searchResult.length !== 0 && (\r\n                            <Locationview\r\n                                user={searchResult[selectedIndex]}\r\n                                index={selectedIndex}\r\n                            />\r\n                        )}\r\n                    </Box>\r\n                </Grid>\r\n            </Grid>\r\n            {success !== null && (\r\n                <Snackbar\r\n                    open={snackOpen}\r\n                    autoHideDuration={4000}\r\n                    onClose={handleSnackClose}\r\n                    anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n                >\r\n                    <Alert\r\n                        onClose={handleSnackClose}\r\n                        severity='success'\r\n                        sx={{ width: '100%' }}\r\n                    >\r\n                        {success}\r\n                    </Alert>\r\n                </Snackbar>\r\n            )}\r\n            {error !== null && (\r\n                <Snackbar\r\n                    open={snackOpen}\r\n                    autoHideDuration={4000}\r\n                    onClose={handleSnackClose}\r\n                    anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n                >\r\n                    <Alert\r\n                        onClose={handleSnackClose}\r\n                        severity='error'\r\n                        sx={{ width: '100%' }}\r\n                    >\r\n                        {error}\r\n                    </Alert>\r\n                </Snackbar>\r\n            )}\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Dashboard\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useNavigate, Link as RouterLink } from 'react-router-dom'\r\nimport Avatar from '@mui/material/Avatar'\r\nimport Button from '@mui/material/Button'\r\nimport CssBaseline from '@mui/material/CssBaseline'\r\nimport TextField from '@mui/material/TextField'\r\nimport FormControlLabel from '@mui/material/FormControlLabel'\r\nimport Checkbox from '@mui/material/Checkbox'\r\nimport Paper from '@mui/material/Paper'\r\nimport Box from '@mui/material/Box'\r\nimport Grid from '@mui/material/Grid'\r\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined'\r\nimport Typography from '@mui/material/Typography'\r\nimport Link from '@mui/material/Link'\r\nimport { makeStyles } from '@mui/styles'\r\nimport { auth, db } from '../Firebase'\r\nimport { signInWithEmailAndPassword } from 'firebase/auth'\r\nimport {\r\n    collection,\r\n    doc,\r\n    getDoc,\r\n    getDocs,\r\n    query,\r\n    where,\r\n} from 'firebase/firestore'\r\nimport { API_SERVICE } from '../URI'\r\nimport axios from 'axios'\r\nimport {\r\n    Alert,\r\n    CircularProgress,\r\n    FormControl,\r\n    IconButton,\r\n    InputAdornment,\r\n    InputLabel,\r\n    OutlinedInput,\r\n    Snackbar,\r\n} from '@mui/material'\r\nimport LoadingButton from '@mui/lab/LoadingButton'\r\nimport Visibility from '@mui/icons-material/Visibility'\r\nimport VisibilityOff from '@mui/icons-material/VisibilityOff'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    image: {\r\n        backgroundImage: 'url(https://source.unsplash.com/random)',\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundColor:\r\n            theme.palette.type === 'light'\r\n                ? theme.palette.grey[50]\r\n                : theme.palette.grey[900],\r\n        backgroundSize: 'cover',\r\n        backgroundPosition: 'center',\r\n    },\r\n    paper: {\r\n        margin: theme.spacing(8, 4),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    login: {\r\n        margin: theme.spacing(5, 0, 2),\r\n        padding: theme.spacing(1.4),\r\n        fontSize: 15,\r\n    },\r\n    googleLogin: {\r\n        margin: theme.spacing(2, 0, 2),\r\n        fontSize: 15,\r\n    },\r\n}))\r\n\r\nconst Login = () => {\r\n    const classes = useStyles()\r\n    const navigate = useNavigate()\r\n\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [snackOpen, setSnackOpen] = useState(false)\r\n    const [errorMsg, setErrMsg] = useState('')\r\n    const [clicked, setClicked] = useState(false)\r\n    const [showPass, setShowPass] = useState(false)\r\n\r\n    const emailRegex = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/\r\n\r\n    const submitHandler = async () => {\r\n        if (email.length === 0) {\r\n            setErrMsg('Email is required')\r\n            setSnackOpen(true)\r\n            return\r\n        } else if (!email.match(emailRegex)) {\r\n            setErrMsg('Invalid Email')\r\n            setSnackOpen(true)\r\n            return\r\n        } else if (password.length < 6) {\r\n            setErrMsg('Password must be 6 character long')\r\n            setSnackOpen(true)\r\n            return\r\n        }\r\n\r\n        const superRef = collection(db, 'trackerWebUser')\r\n        const q = query(superRef, where('email', '==', email))\r\n        await getDocs(q).then(async (docs) => {\r\n            if (docs.size !== 0) {\r\n                setClicked(true)\r\n                superAdminLogin()\r\n            } else {\r\n                setClicked(true)\r\n                adminLogin()\r\n            }\r\n        })\r\n    }\r\n\r\n    const adminLogin = async () => {\r\n        signInWithEmailAndPassword(auth, email, password)\r\n            .then(async (credential) => {\r\n                localStorage.setItem('authToken', credential.user.accessToken)\r\n                try {\r\n                    const { data } = await axios.get(\r\n                        `${API_SERVICE}/get/admin/${email}`\r\n                    )\r\n                    const superAdminRef = doc(\r\n                        db,\r\n                        'trackerWebUser',\r\n                        data.createdBy\r\n                    )\r\n                    const superData = await getDoc(superAdminRef)\r\n\r\n                    if (superData.exists()) {\r\n                        localStorage.setItem(\r\n                            'userData',\r\n                            JSON.stringify(superData.data())\r\n                        )\r\n                    }\r\n\r\n                    localStorage.setItem('adminData', JSON.stringify(data))\r\n\r\n                    if (data.passwordChanged) {\r\n                        navigate('/app/dashboard', { replace: true })\r\n                    } else {\r\n                        navigate('/admin/change-password', { replace: true })\r\n                    }\r\n                } catch (error) {\r\n                    console.log(error.message)\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                const errorCode = error.code\r\n                setErrMsg(getErrMsg(errorCode))\r\n                setSnackOpen(true)\r\n            })\r\n    }\r\n\r\n    const superAdminLogin = async () => {\r\n        signInWithEmailAndPassword(auth, email, password)\r\n            .then(async (userCredential) => {\r\n                const user = userCredential.user\r\n                localStorage.setItem('authToken', user.accessToken)\r\n                const docRef = doc(db, 'trackerWebUser', user.uid)\r\n                const docSnap = await getDoc(docRef)\r\n\r\n                if (docSnap.exists()) {\r\n                    localStorage.setItem(\r\n                        'userData',\r\n                        JSON.stringify(docSnap.data())\r\n                    )\r\n                    navigate('/app/dashboard', { replace: true })\r\n                } else {\r\n                    console.log('No such document!')\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                const errorCode = error.code\r\n                setErrMsg(getErrMsg(errorCode))\r\n                setSnackOpen(true)\r\n            })\r\n    }\r\n\r\n    const getErrMsg = (msg) => {\r\n        console.log(msg)\r\n        return msg.split('/')[1].split('-').join(' ')\r\n    }\r\n\r\n    const handleClickShowPassword = () => {\r\n        setShowPass(!showPass)\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Grid\r\n                sx={{ height: '100%' }}\r\n                container\r\n                component='main'\r\n                className={classes.root}\r\n            >\r\n                <CssBaseline />\r\n                <Grid item xs={false} sm={4} md={7} className={classes.image} />\r\n                <Grid\r\n                    item\r\n                    xs={12}\r\n                    sm={8}\r\n                    md={5}\r\n                    component={Paper}\r\n                    elevation={6}\r\n                    square\r\n                >\r\n                    <div className={classes.paper}>\r\n                        <Avatar className={classes.avatar}>\r\n                            <LockOutlinedIcon />\r\n                        </Avatar>\r\n                        <Typography\r\n                            component='h1'\r\n                            variant='h1'\r\n                            sx={{ mt: 1, mb: 4 }}\r\n                        >\r\n                            GPS REPORT\r\n                        </Typography>\r\n                        <form className={classes.form} noValidate>\r\n                            <TextField\r\n                                variant='outlined'\r\n                                margin='normal'\r\n                                required\r\n                                fullWidth\r\n                                id='email'\r\n                                label='Email Address'\r\n                                name='email'\r\n                                autoComplete='email'\r\n                                autoFocus\r\n                                value={email}\r\n                                onChange={(e) => setEmail(e.target.value)}\r\n                            />\r\n                            <FormControl\r\n                                sx={{ my: 2 }}\r\n                                variant='outlined'\r\n                                required\r\n                                fullWidth\r\n                            >\r\n                                <InputLabel htmlFor='Password'>\r\n                                    Password\r\n                                </InputLabel>\r\n                                <OutlinedInput\r\n                                    variant='outlined'\r\n                                    type={showPass ? 'text' : 'password'}\r\n                                    value={password}\r\n                                    onChange={(e) =>\r\n                                        setPassword(e.target.value)\r\n                                    }\r\n                                    endAdornment={\r\n                                        <InputAdornment position='end'>\r\n                                            <IconButton\r\n                                                onClick={\r\n                                                    handleClickShowPassword\r\n                                                }\r\n                                                edge='end'\r\n                                            >\r\n                                                {showPass ? (\r\n                                                    <VisibilityOff />\r\n                                                ) : (\r\n                                                    <Visibility />\r\n                                                )}\r\n                                            </IconButton>\r\n                                        </InputAdornment>\r\n                                    }\r\n                                    label='Password'\r\n                                />\r\n                            </FormControl>\r\n                            <Box\r\n                                sx={{\r\n                                    display: 'flex',\r\n                                    justifyContent: 'flex-end',\r\n                                }}\r\n                            >\r\n                                <Link\r\n                                    component={RouterLink}\r\n                                    to='/forget-password'\r\n                                    variant='body2'\r\n                                    underline='hover'\r\n                                >\r\n                                    <Typography component='p'>\r\n                                        Forgot password?\r\n                                    </Typography>\r\n                                </Link>\r\n                            </Box>\r\n                            {clicked ? (\r\n                                <LoadingButton\r\n                                    clicked\r\n                                    fullWidth\r\n                                    loadingPosition='start'\r\n                                    startIcon={\r\n                                        <CircularProgress\r\n                                            style={{ color: 'white' }}\r\n                                            size={20}\r\n                                        />\r\n                                    }\r\n                                    variant='contained'\r\n                                    className={classes.login}\r\n                                >\r\n                                    LOGIN\r\n                                </LoadingButton>\r\n                            ) : (\r\n                                <Button\r\n                                    fullWidth\r\n                                    variant='contained'\r\n                                    color='primary'\r\n                                    className={classes.login}\r\n                                    onClick={() => submitHandler()}\r\n                                >\r\n                                    LOGIN\r\n                                </Button>\r\n                            )}\r\n\r\n                            <Box\r\n                                sx={{\r\n                                    display: 'flex',\r\n                                    justifyContent: 'center',\r\n                                    mt: 5,\r\n                                }}\r\n                            >\r\n                                <Link\r\n                                    component={RouterLink}\r\n                                    to='/register'\r\n                                    variant='body2'\r\n                                    underline='hover'\r\n                                >\r\n                                    <Typography component='p'>\r\n                                        Don't have an account? Sign up for free\r\n                                    </Typography>\r\n                                </Link>\r\n                            </Box>\r\n                        </form>\r\n                    </div>\r\n                </Grid>\r\n            </Grid>\r\n            {errorMsg && (\r\n                <Snackbar\r\n                    open={snackOpen}\r\n                    autoHideDuration={4000}\r\n                    onClose={() => setSnackOpen(false)}\r\n                    anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n                >\r\n                    <Alert\r\n                        onClose={() => setSnackOpen(false)}\r\n                        severity='error'\r\n                        sx={{ width: '100%' }}\r\n                        variant='filled'\r\n                    >\r\n                        {errorMsg}\r\n                    </Alert>\r\n                </Snackbar>\r\n            )}\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import { Helmet } from 'react-helmet'\r\nimport { Box, Container, Typography } from '@mui/material'\r\n\r\nconst NotFound = () => (\r\n  <>\r\n    <Helmet>\r\n      <title>404 | Material Kit</title>\r\n    </Helmet>\r\n    <Box\r\n      sx={{\r\n        backgroundColor: 'background.default',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        height: '100%',\r\n        justifyContent: 'center',\r\n      }}\r\n    >\r\n      <Container maxWidth='md'>\r\n        <Typography align='center' color='textPrimary' variant='h1'>\r\n          404: The page you are looking for isn’t here\r\n        </Typography>\r\n        <Typography align='center' color='textPrimary' variant='subtitle2'>\r\n          You either tried some shady route or you came here by mistake.\r\n          Whichever it is, try using the navigation\r\n        </Typography>\r\n        <Box sx={{ textAlign: 'center' }}>\r\n          <img\r\n            alt='Under development'\r\n            src='/static/images/undraw_page_not_found_su7k.svg'\r\n            style={{\r\n              marginTop: 50,\r\n              display: 'inline-block',\r\n              maxWidth: '100%',\r\n              width: 560,\r\n            }}\r\n          />\r\n        </Box>\r\n      </Container>\r\n    </Box>\r\n  </>\r\n)\r\n\r\nexport default NotFound\r\n","import React, { useState } from 'react'\r\nimport { useNavigate, Link as RouterLink } from 'react-router-dom'\r\nimport Avatar from '@mui/material/Avatar'\r\nimport Button from '@mui/material/Button'\r\nimport CssBaseline from '@mui/material/CssBaseline'\r\nimport TextField from '@mui/material/TextField'\r\nimport FormControlLabel from '@mui/material/FormControlLabel'\r\nimport Checkbox from '@mui/material/Checkbox'\r\nimport Paper from '@mui/material/Paper'\r\nimport Box from '@mui/material/Box'\r\nimport Grid from '@mui/material/Grid'\r\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined'\r\nimport Typography from '@mui/material/Typography'\r\nimport Link from '@mui/material/Link'\r\nimport { makeStyles } from '@mui/styles'\r\nimport { auth, db } from '../Firebase'\r\nimport { createUserWithEmailAndPassword, updateProfile } from 'firebase/auth'\r\nimport { doc, serverTimestamp, setDoc } from 'firebase/firestore'\r\nimport {\r\n    Alert,\r\n    CircularProgress,\r\n    FormControl,\r\n    IconButton,\r\n    InputAdornment,\r\n    InputLabel,\r\n    OutlinedInput,\r\n    Snackbar,\r\n} from '@mui/material'\r\nimport LoadingButton from '@mui/lab/LoadingButton'\r\nimport Visibility from '@mui/icons-material/Visibility'\r\nimport VisibilityOff from '@mui/icons-material/VisibilityOff'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    image: {\r\n        backgroundImage: 'url(https://source.unsplash.com/random)',\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundColor:\r\n            theme.palette.type === 'light'\r\n                ? theme.palette.grey[50]\r\n                : theme.palette.grey[900],\r\n        backgroundSize: 'cover',\r\n        backgroundPosition: 'center',\r\n    },\r\n    paper: {\r\n        margin: theme.spacing(4, 2),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    login: {\r\n        margin: theme.spacing(3, 0, 2),\r\n        padding: theme.spacing(1.4),\r\n        fontSize: 15,\r\n    },\r\n    googleLogin: {\r\n        margin: theme.spacing(2, 0, 2),\r\n        fontSize: 15,\r\n    },\r\n}))\r\n\r\nconst Register = () => {\r\n    const classes = useStyles()\r\n    const navigate = useNavigate()\r\n\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [firstName, setFirstName] = useState('')\r\n    const [lastName, setLastName] = useState('')\r\n    const [companyName, setCompanyName] = useState('')\r\n    const [policy, setPolicy] = useState(false)\r\n    const [snackOpen, setSnackOpen] = useState(false)\r\n    const [errorMsg, setErrorMsg] = useState('')\r\n    const [clicked, setClicked] = useState(false)\r\n    const [showPass, setShowPass] = useState(false)\r\n\r\n    const emailRegex = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/\r\n\r\n    const submitHandler = async () => {\r\n        if (firstName.length === 0) {\r\n            setErrorMsg('First Name is required field')\r\n            setSnackOpen(true)\r\n        } else if (lastName.length === 0) {\r\n            setErrorMsg('Last Name is required field')\r\n            setSnackOpen(true)\r\n        } else if (email.length === 0) {\r\n            setErrorMsg('Email is required field')\r\n            setSnackOpen(true)\r\n        } else if (!email.match(emailRegex)) {\r\n            setErrorMsg('Invalid Email')\r\n            setSnackOpen(true)\r\n        } else if (password.length < 6) {\r\n            setErrorMsg('Password must be atleast 6 character long')\r\n            setSnackOpen(true)\r\n        } else if (companyName.length === 0) {\r\n            setErrorMsg('Company Name is required field')\r\n            setSnackOpen(true)\r\n        } else {\r\n            setClicked(true)\r\n            signUp()\r\n        }\r\n    }\r\n\r\n    const signUp = async () => {\r\n        createUserWithEmailAndPassword(auth, email, password)\r\n            .then(async (userCredential) => {\r\n                const user = userCredential.user\r\n\r\n                updateProfile(auth.currentUser, {\r\n                    displayName: firstName + lastName,\r\n                }).catch((error) => console.log(error.message))\r\n\r\n                const userData = {\r\n                    uid: user.uid,\r\n                    firstName,\r\n                    lastName,\r\n                    email: user.email,\r\n                    profilePhoto:\r\n                        'https://th.bing.com/th/id/OIP.9B2RxsHDB_s7FZT0mljnhQHaHa?pid=ImgDet&rs=1',\r\n                    companyName,\r\n                    createdAt: serverTimestamp(),\r\n                }\r\n\r\n                localStorage.setItem('authToken', user.accessToken)\r\n\r\n                const userRef = doc(db, 'trackerWebUser', user.uid)\r\n\r\n                await setDoc(userRef, userData)\r\n                    .then(() => {\r\n                        localStorage.setItem(\r\n                            'userData',\r\n                            JSON.stringify(userData)\r\n                        )\r\n                        navigate('/app/dashboard', { replace: true })\r\n                    })\r\n                    .catch((error) => {\r\n                        const errorCode = error.code\r\n                        setErrorMsg(getErrMsg(errorCode))\r\n                        setSnackOpen(true)\r\n                    })\r\n            })\r\n            .catch((error) => {\r\n                const errorCode = error.code\r\n                setErrorMsg(getErrMsg(errorCode))\r\n                setSnackOpen(true)\r\n            })\r\n    }\r\n\r\n    const getErrMsg = (msg) => {\r\n        return msg.split('/')[1].split('-').join(' ')\r\n    }\r\n\r\n    const handleClickShowPassword = () => {\r\n        setShowPass(!showPass)\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Grid sx={{ height: '100%' }} container component='main'>\r\n                <CssBaseline />\r\n                <Grid item xs={false} sm={4} md={7} className={classes.image} />\r\n                <Grid\r\n                    item\r\n                    xs={12}\r\n                    sm={8}\r\n                    md={5}\r\n                    component={Paper}\r\n                    elevation={6}\r\n                    square\r\n                    sx={{ p: 2 }}\r\n                >\r\n                    <div className={classes.paper}>\r\n                        <Avatar className={classes.avatar}>\r\n                            <LockOutlinedIcon />\r\n                        </Avatar>\r\n                        <Typography\r\n                            component='h1'\r\n                            variant='h1'\r\n                            sx={{ mt: 1, mb: 4 }}\r\n                        >\r\n                            GPS REPORT\r\n                        </Typography>\r\n                        <form className={classes.form} noValidate>\r\n                            <TextField\r\n                                variant='outlined'\r\n                                margin='normal'\r\n                                required\r\n                                fullWidth\r\n                                id='firstName'\r\n                                label='First Name'\r\n                                name='firstName'\r\n                                autoComplete='name'\r\n                                autoFocus\r\n                                value={firstName}\r\n                                onChange={(e) => setFirstName(e.target.value)}\r\n                            />\r\n                            <TextField\r\n                                variant='outlined'\r\n                                margin='normal'\r\n                                required\r\n                                fullWidth\r\n                                id='lastName'\r\n                                label='Last Name'\r\n                                name='lastName'\r\n                                autoComplete='name'\r\n                                value={lastName}\r\n                                onChange={(e) => setLastName(e.target.value)}\r\n                            />\r\n                            <TextField\r\n                                variant='outlined'\r\n                                margin='normal'\r\n                                required\r\n                                fullWidth\r\n                                id='email'\r\n                                label='Email Address'\r\n                                name='email'\r\n                                autoComplete='email'\r\n                                value={email}\r\n                                onChange={(e) => setEmail(e.target.value)}\r\n                            />\r\n                            <TextField\r\n                                variant='outlined'\r\n                                margin='normal'\r\n                                required\r\n                                fullWidth\r\n                                id='email'\r\n                                label='Company Name'\r\n                                name='companyName'\r\n                                autoComplete='text'\r\n                                value={companyName}\r\n                                onChange={(e) => setCompanyName(e.target.value)}\r\n                            />\r\n                            <FormControl\r\n                                sx={{ my: 2 }}\r\n                                variant='outlined'\r\n                                required\r\n                                fullWidth\r\n                            >\r\n                                <InputLabel htmlFor='Password'>\r\n                                    Password\r\n                                </InputLabel>\r\n                                <OutlinedInput\r\n                                    variant='outlined'\r\n                                    type={showPass ? 'text' : 'password'}\r\n                                    value={password}\r\n                                    onChange={(e) =>\r\n                                        setPassword(e.target.value)\r\n                                    }\r\n                                    endAdornment={\r\n                                        <InputAdornment position='end'>\r\n                                            <IconButton\r\n                                                onClick={\r\n                                                    handleClickShowPassword\r\n                                                }\r\n                                                edge='end'\r\n                                            >\r\n                                                {showPass ? (\r\n                                                    <VisibilityOff />\r\n                                                ) : (\r\n                                                    <Visibility />\r\n                                                )}\r\n                                            </IconButton>\r\n                                        </InputAdornment>\r\n                                    }\r\n                                    label='Password'\r\n                                />\r\n                            </FormControl>\r\n                            <FormControlLabel\r\n                                control={\r\n                                    <Checkbox\r\n                                        value='remember'\r\n                                        color='primary'\r\n                                        checked={policy}\r\n                                        onChange={(e) =>\r\n                                            setPolicy(e.target.checked)\r\n                                        }\r\n                                    />\r\n                                }\r\n                                label={\r\n                                    <Typography component='p'>\r\n                                        I have read the{' '}\r\n                                        <Link href='#' sx={{ color: 'blue' }}>\r\n                                            Terms and Conditions\r\n                                        </Link>\r\n                                    </Typography>\r\n                                }\r\n                            />\r\n                            {clicked ? (\r\n                                <LoadingButton\r\n                                    clicked\r\n                                    fullWidth\r\n                                    loadingPosition='start'\r\n                                    startIcon={\r\n                                        <CircularProgress\r\n                                            style={{ color: 'white' }}\r\n                                            size={20}\r\n                                        />\r\n                                    }\r\n                                    variant='contained'\r\n                                    className={classes.login}\r\n                                >\r\n                                    Sign Up\r\n                                </LoadingButton>\r\n                            ) : (\r\n                                <Button\r\n                                    disabled={!policy}\r\n                                    fullWidth\r\n                                    variant='contained'\r\n                                    color='primary'\r\n                                    className={classes.login}\r\n                                    onClick={() => submitHandler()}\r\n                                >\r\n                                    Sign Up\r\n                                </Button>\r\n                            )}\r\n\r\n                            <Box\r\n                                sx={{\r\n                                    display: 'flex',\r\n                                    justifyContent: 'center',\r\n                                    mt: 5,\r\n                                }}\r\n                            >\r\n                                <Link\r\n                                    component={RouterLink}\r\n                                    to='/login'\r\n                                    variant='body2'\r\n                                    underline='hover'\r\n                                >\r\n                                    <Typography component='p'>\r\n                                        Already have an account? Login here\r\n                                    </Typography>\r\n                                </Link>\r\n                            </Box>\r\n                        </form>\r\n                    </div>\r\n                </Grid>\r\n            </Grid>\r\n\r\n            {errorMsg && (\r\n                <Snackbar\r\n                    open={snackOpen}\r\n                    autoHideDuration={4000}\r\n                    onClose={() => setSnackOpen(false)}\r\n                    anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n                >\r\n                    <Alert\r\n                        onClose={() => setSnackOpen(false)}\r\n                        severity='error'\r\n                        sx={{ width: '100%' }}\r\n                        variant='filled'\r\n                    >\r\n                        {errorMsg}\r\n                    </Alert>\r\n                </Snackbar>\r\n            )}\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Register\r\n","import * as React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Box from '@mui/material/Box'\r\nimport Collapse from '@mui/material/Collapse'\r\nimport IconButton from '@mui/material/IconButton'\r\nimport Table from '@mui/material/Table'\r\nimport TableBody from '@mui/material/TableBody'\r\nimport TableCell from '@mui/material/TableCell'\r\nimport TableContainer from '@mui/material/TableContainer'\r\nimport TableHead from '@mui/material/TableHead'\r\nimport TableRow from '@mui/material/TableRow'\r\nimport Typography from '@mui/material/Typography'\r\nimport Paper from '@mui/material/Paper'\r\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown'\r\nimport KeyboardArrowUpIcon from '@mui/icons-material/KeyboardArrowUp'\r\nimport { CircularProgress } from '@mui/material'\r\nimport moment from 'moment'\r\nimport axios from 'axios'\r\nimport { API_SERVICE } from '../../URI'\r\n\r\nfunction Row(props) {\r\n  const {\r\n    row,\r\n    hotspotList,\r\n    selectedHotspots,\r\n    selectedGroups,\r\n    selectedMonth,\r\n  } = props\r\n  const [open, setOpen] = React.useState(false)\r\n  const [history, setHistory] = React.useState([])\r\n  const [load, setLoad] = React.useState(false)\r\n\r\n  const userData = localStorage.getItem('userData')\r\n    ? JSON.parse(localStorage.getItem('userData'))\r\n    : null\r\n\r\n  const arr = row.hotspots.map((x) => x.hotspot)\r\n\r\n  const checkExist = (x) => {\r\n    const i = arr.findIndex((e) => e === x._id)\r\n    return i\r\n  }\r\n\r\n  const filterGroup = async (data) => {\r\n    return new Promise((resolve) => {\r\n      const arr = []\r\n\r\n      for (let id of selectedGroups) {\r\n        console.log('inside')\r\n        for (let x of data) {\r\n          if (id === x.group._id) {\r\n            arr.push(x)\r\n          }\r\n        }\r\n      }\r\n      console.log('Here')\r\n      resolve(arr)\r\n    })\r\n  }\r\n\r\n  React.useEffect(async () => {\r\n    try {\r\n      setLoad(true)\r\n      const { data } = await axios.get(\r\n        `${API_SERVICE}/get/location/${userData.uid}/${row.phoneNumber}/${\r\n          selectedMonth + 1\r\n        }`,\r\n      )\r\n\r\n      if (selectedGroups.length === 0) {\r\n        setHistory(data)\r\n        setLoad(false)\r\n      } else {\r\n        const arr = await filterGroup(data)\r\n\r\n        setHistory(arr)\r\n        setLoad(false)\r\n      }\r\n    } catch (error) {\r\n      console.log(error.message)\r\n    }\r\n  }, [selectedGroups])\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <TableRow sx={{ '& > *': { borderBottom: 'unset' } }}>\r\n        <TableCell>\r\n          <IconButton\r\n            aria-label=\"expand row\"\r\n            size=\"small\"\r\n            onClick={() => setOpen(!open)}\r\n          >\r\n            {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\r\n          </IconButton>\r\n        </TableCell>\r\n        <TableCell component=\"th\" scope=\"row\">\r\n          {row.device}\r\n        </TableCell>\r\n        <TableCell align=\"center\">{row.phoneNumber}</TableCell>\r\n\r\n        {selectedHotspots.length === 0 &&\r\n          hotspotList.map((x, i) => (\r\n            <React.Fragment key={x.hotspot}>\r\n              {checkExist(x) !== -1 ? (\r\n                <TableCell key={x.hotspot} align=\"center\">\r\n                  {row.hotspots[checkExist(x)].total}\r\n                </TableCell>\r\n              ) : (\r\n                <TableCell key={x.hotspot} align=\"center\">\r\n                  0\r\n                </TableCell>\r\n              )}\r\n            </React.Fragment>\r\n          ))}\r\n        {selectedHotspots.length !== 0 &&\r\n          selectedHotspots.map((x, i) => (\r\n            <React.Fragment key={x.hotspot}>\r\n              {checkExist(x) !== -1 ? (\r\n                <TableCell key={x.hotspot} align=\"center\">\r\n                  {row.hotspots[checkExist(x)].total}\r\n                </TableCell>\r\n              ) : (\r\n                <TableCell key={x.hotspot} align=\"center\">\r\n                  0\r\n                </TableCell>\r\n              )}\r\n            </React.Fragment>\r\n          ))}\r\n      </TableRow>\r\n      <TableRow>\r\n        <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\r\n          <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n            <Box sx={{ margin: 1 }}>\r\n              <Typography variant=\"h6\" sx={{ my: 2 }} component=\"div\">\r\n                History\r\n              </Typography>\r\n              <Table size=\"small\" aria-label=\"purchases\">\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell>Date</TableCell>\r\n                    <TableCell>Address</TableCell>\r\n                    <TableCell align=\"right\">Hotspot</TableCell>\r\n                    <TableCell align=\"right\">Group</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {!load &&\r\n                    history.map((historyRow, index) => (\r\n                      <TableRow key={index + 1}>\r\n                        <TableCell\r\n                          sx={{ borderWidth: 0, padding: '16px' }}\r\n                          component=\"th\"\r\n                          scope=\"row\"\r\n                        >\r\n                          {moment(historyRow.createdAt).format(\r\n                            'DD MMMM YYYY - hh:mm a',\r\n                          )}\r\n                        </TableCell>\r\n                        <TableCell sx={{ borderWidth: 0, padding: '16px' }}>\r\n                          {historyRow.address}\r\n                        </TableCell>\r\n                        <TableCell\r\n                          sx={{ borderWidth: 0, padding: '16px' }}\r\n                          align=\"right\"\r\n                        >\r\n                          {historyRow.hotspot.hotspotName}\r\n                        </TableCell>\r\n                        <TableCell\r\n                          sx={{ borderWidth: 0, padding: '16px' }}\r\n                          align=\"right\"\r\n                        >\r\n                          {historyRow.group.groupName}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    ))}\r\n                </TableBody>\r\n              </Table>\r\n              {load && (\r\n                <Box\r\n                  sx={{\r\n                    display: 'flex',\r\n                    justifyContent: 'center',\r\n                    width: '100%',\r\n                    my: 3,\r\n                  }}\r\n                >\r\n                  <CircularProgress sx={{ fontSize: 30 }} />\r\n                </Box>\r\n              )}\r\n            </Box>\r\n          </Collapse>\r\n        </TableCell>\r\n      </TableRow>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nconst ReportTable = (props) => {\r\n  console.log(props.tableData)\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell />\r\n            <TableCell>Full Name</TableCell>\r\n            <TableCell align=\"center\">Phone Number</TableCell>\r\n            {props.selectedHotspots.length === 0 &&\r\n              props.hotspotList.map((hotspot, index) => (\r\n                <TableCell key={hotspot._id} align=\"center\">\r\n                  {hotspot.hotspotName}\r\n                </TableCell>\r\n              ))}\r\n            {props.selectedHotspots.length !== 0 &&\r\n              props.selectedHotspots.map((hotspot, index) => (\r\n                <TableCell key={hotspot._id} align=\"center\">\r\n                  {hotspot.hotspotName}\r\n                </TableCell>\r\n              ))}\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {props.tableData.length !== 0 &&\r\n            props.tableData.map((row) => (\r\n              <Row\r\n                key={row.phoneNumber}\r\n                row={row}\r\n                hotspotList={props.hotspotList}\r\n                selectedHotspots={props.selectedHotspots}\r\n                selectedGroups={props.selectedGroups}\r\n                selectedMonth={props.selectedMonth}\r\n              />\r\n            ))}\r\n\r\n          {props.tableData.length === 0 &&\r\n            props.deviceList.map((row) => (\r\n              <TableRow sx={{ '& > *': { borderBottom: 'unset' } }}>\r\n                <TableCell>\r\n                  <IconButton aria-label=\"expand row\" size=\"small\">\r\n                    <KeyboardArrowUpIcon />\r\n                  </IconButton>\r\n                </TableCell>\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                  {row.fullName}\r\n                </TableCell>\r\n                <TableCell align=\"center\">{row.phoneNumber}</TableCell>\r\n\r\n                {props.selectedHotspots.length === 0 &&\r\n                  props.hotspotList.map((x, i) => (\r\n                    <React.Fragment key={x.hotspot}>\r\n                      <TableCell key={x.hotspot} align=\"center\">\r\n                        0\r\n                      </TableCell>\r\n                    </React.Fragment>\r\n                  ))}\r\n                {props.selectedHotspots.length !== 0 &&\r\n                  props.selectedHotspots.map((x, i) => (\r\n                    <React.Fragment key={x.hotspot}>\r\n                      <TableCell key={x.hotspot} align=\"center\">\r\n                        0\r\n                      </TableCell>\r\n                    </React.Fragment>\r\n                  ))}\r\n              </TableRow>\r\n            ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  )\r\n}\r\n\r\nexport default React.memo(ReportTable)\r\n","import React from 'react'\r\nimport {\r\n  Checkbox,\r\n  FormControl,\r\n  InputLabel,\r\n  ListItemText,\r\n  MenuItem,\r\n  OutlinedInput,\r\n  Select,\r\n} from '@mui/material'\r\n\r\nconst ITEM_HEIGHT = 48\r\nconst ITEM_PADDING_TOP = 8\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n    },\r\n  },\r\n}\r\n\r\nconst HotspotFilter = (props) => {\r\n  return (\r\n    <FormControl variant=\"outlined\" sx={{ width: '250px', ml: 3 }}>\r\n      <InputLabel id=\"hotspotFilter\">Hotspots</InputLabel>\r\n      <Select\r\n        id=\"hotspotFilter\"\r\n        multiple\r\n        value={props.selectedHotspots}\r\n        onChange={props.handleHotspotSelect}\r\n        input={<OutlinedInput label=\"Hotspots\" />}\r\n        renderValue={() => props.selectedHotspotsNames.join(', ')}\r\n        MenuProps={MenuProps}\r\n      >\r\n        {props.hotspotNames.map((hotspot) => (\r\n          <MenuItem key={hotspot._id} value={hotspot._id}>\r\n            <Checkbox\r\n              checked={props.selectedHotspots.indexOf(hotspot._id) > -1}\r\n            />\r\n            <ListItemText primary={hotspot.hotspotName} />\r\n          </MenuItem>\r\n        ))}\r\n      </Select>\r\n    </FormControl>\r\n  )\r\n}\r\n\r\nexport default React.memo(HotspotFilter)\r\n","import React from 'react'\r\nimport {\r\n  Checkbox,\r\n  FormControl,\r\n  InputLabel,\r\n  ListItemText,\r\n  MenuItem,\r\n  OutlinedInput,\r\n  Select,\r\n} from '@mui/material'\r\n\r\nconst ITEM_HEIGHT = 48\r\nconst ITEM_PADDING_TOP = 8\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n    },\r\n  },\r\n}\r\n\r\nconst DeviceFilter = (props) => {\r\n  return (\r\n    <FormControl variant=\"outlined\" sx={{ width: '250px', ml: 3 }}>\r\n      <InputLabel>Mobile Devices</InputLabel>\r\n      <Select\r\n        label=\"Mobile Devices\"\r\n        multiple\r\n        value={props.selectedDevices}\r\n        onChange={props.handleSelectedDevice}\r\n        input={<OutlinedInput label=\"Mobile Devices\" />}\r\n        renderValue={(selected) => selected.join(', ')}\r\n        MenuProps={MenuProps}\r\n      >\r\n        {props.mobileDevices.map((device, i) => (\r\n          <MenuItem\r\n            key={device._id}\r\n            value={`${device.fullName} - ${device.phoneNumber}`}\r\n          >\r\n            <Checkbox\r\n              checked={\r\n                props.selectedDevices.indexOf(\r\n                  `${device.fullName} - ${device.phoneNumber}`,\r\n                ) > -1\r\n              }\r\n            />\r\n            <ListItemText\r\n              primary={`${device.fullName} | ${device.phoneNumber}`}\r\n            />\r\n          </MenuItem>\r\n        ))}\r\n      </Select>\r\n    </FormControl>\r\n  )\r\n}\r\n\r\nexport default React.memo(DeviceFilter)\r\n","import React from 'react'\r\nimport {\r\n  Alert,\r\n  FormControl,\r\n  InputLabel,\r\n  MenuItem,\r\n  Select,\r\n  Snackbar,\r\n} from '@mui/material'\r\n\r\nconst MonthFilter = (props) => {\r\n  const [isDisable, setIsDisable] = React.useState(false)\r\n  const [open, setOpen] = React.useState(false)\r\n\r\n  React.useEffect(() => {\r\n    if (props.subscription !== null) {\r\n      setIsDisable(props.subscription.reportCount === 1)\r\n    }\r\n  }, [props.subscription])\r\n\r\n  const showError = () => {\r\n    setOpen(true)\r\n  }\r\n\r\n  console.log(isDisable)\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <FormControl variant=\"outlined\" sx={{ width: '250px', ml: 3 }}>\r\n        <InputLabel>Month</InputLabel>\r\n        <Select\r\n          value={props.selectedMonth}\r\n          onChange={\r\n            isDisable\r\n              ? () => showError()\r\n              : (e) => props.setSelectedMonth(e.target.value)\r\n          }\r\n          label=\"Month\"\r\n        >\r\n          {props.Months.map((month, i) => (\r\n            <MenuItem sx={{ py: 1.2, px: 2 }} key={i} value={month}>\r\n              {month}\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n      <Snackbar\r\n        anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n        open={open}\r\n        autoHideDuration={6000}\r\n        onClose={() => setOpen(false)}\r\n      >\r\n        <Alert\r\n          onClose={() => setOpen(false)}\r\n          severity=\"error\"\r\n          variant=\"filled\"\r\n          sx={{ width: '100%' }}\r\n        >\r\n          You cannot use this feature. Please upgrade your plan.\r\n        </Alert>\r\n      </Snackbar>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default React.memo(MonthFilter)\r\n","import React from 'react'\r\nimport {\r\n  Checkbox,\r\n  FormControl,\r\n  InputLabel,\r\n  ListItemText,\r\n  MenuItem,\r\n  OutlinedInput,\r\n  Select,\r\n} from '@mui/material'\r\n\r\nconst ITEM_HEIGHT = 48\r\nconst ITEM_PADDING_TOP = 8\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n    },\r\n  },\r\n}\r\nconst GroupFilter = (props) => {\r\n  return (\r\n    <FormControl variant=\"outlined\" sx={{ width: '250px', ml: 3 }}>\r\n      <InputLabel id=\"hotspotFilter\">Groups</InputLabel>\r\n      <Select\r\n        id=\"hotspotFilter\"\r\n        multiple\r\n        value={props.selectedGroups}\r\n        onChange={props.handleGroupSelect}\r\n        input={<OutlinedInput label=\"Groups\" />}\r\n        renderValue={() => props.selectedGroupsNames.join(', ')}\r\n        MenuProps={MenuProps}\r\n      >\r\n        {props.groupNames.map((group, i) => (\r\n          <MenuItem key={group._id} value={group._id}>\r\n            <Checkbox checked={props.selectedGroups.indexOf(group._id) > -1} />\r\n            <ListItemText primary={group.groupName} />\r\n          </MenuItem>\r\n        ))}\r\n      </Select>\r\n    </FormControl>\r\n  )\r\n}\r\n\r\nexport default React.memo(GroupFilter)\r\n","import { createContext, useEffect, useReducer, useState } from 'react'\r\nimport { auth, db } from '../Firebase'\r\nimport { onAuthStateChanged } from 'firebase/auth'\r\nimport { API_SERVICE } from '../URI'\r\nimport axios from 'axios'\r\nimport { doc, getDoc } from 'firebase/firestore'\r\n\r\nconst initialState = {\r\n    customerId: null,\r\n    subscriptions: [],\r\n    cart: {},\r\n}\r\n\r\nconst reducer = (state, action) => {\r\n    if (action.type === 'SUBSCRIPTION_DATA_CHANGED') {\r\n        const { customerId, subscriptions } = action.payload\r\n        return {\r\n            ...state,\r\n            customerId,\r\n            subscriptions,\r\n            isInitialized: true,\r\n        }\r\n    }\r\n\r\n    if (action.type === 'SELECT_PRODUCT') {\r\n        console.log('Success', action.payload)\r\n        const { cart } = action.payload\r\n        return {\r\n            ...state,\r\n            cart,\r\n        }\r\n    }\r\n\r\n    if (action.type === 'PAYMENT_DETAILS') {\r\n        console.log('Success', action.payload)\r\n        const { details } = action.payload\r\n        return {\r\n            ...state,\r\n            cart: { ...state.cart, details },\r\n        }\r\n    }\r\n\r\n    return state\r\n}\r\n\r\nexport const SubscriptionContext = createContext({\r\n    ...initialState,\r\n})\r\n\r\nexport const SubscriptionProvider = (props) => {\r\n    const { children } = props\r\n    const [state, dispatch] = useReducer(reducer, initialState)\r\n\r\n    useEffect(async () => {\r\n        onAuthStateChanged(auth, async (user) => {\r\n            if (user === null) {\r\n                dispatch({\r\n                    type: 'SUBSCRIPTION_DATA_CHANGED',\r\n                    payload: {\r\n                        customerId: null,\r\n                        subscriptions: [],\r\n                    },\r\n                })\r\n            }\r\n\r\n            try {\r\n                const ref = doc(db, 'trackerWebUser', user.uid)\r\n                const snap = await getDoc(ref)\r\n\r\n                let userData\r\n\r\n                if (snap.exists()) {\r\n                    const data = snap.data()\r\n                    userData = {\r\n                        uid: data.uid,\r\n                        displayName: `${data.firstName} ${data.lastName}`,\r\n                        email: data.email,\r\n                    }\r\n                } else {\r\n                    const _email = user.email\r\n                    console.log(user)\r\n\r\n                    const { data } = await axios.get(\r\n                        `${API_SERVICE}/get/admin/${_email}`\r\n                    )\r\n\r\n                    const { createdBy } = data\r\n\r\n                    const ref = doc(db, 'trackerWebUser', createdBy)\r\n                    const snap = await getDoc(ref)\r\n\r\n                    if (snap.exists()) {\r\n                        const data = snap.data()\r\n                        userData = {\r\n                            uid: data.uid,\r\n                            displayName: `${data.firstName} ${data.lastName}`,\r\n                            email: data.email,\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (userData) {\r\n                    const customer = await fetchCustomer(userData)\r\n                    if (customer) {\r\n                        const subscriptions = await fetchSubscriptions(\r\n                            customer?.id\r\n                        )\r\n                        dispatch({\r\n                            type: 'SUBSCRIPTION_DATA_CHANGED',\r\n                            payload: {\r\n                                customerId: customer?.id,\r\n                                subscriptions: subscriptions,\r\n                            },\r\n                        })\r\n                    }\r\n                } else {\r\n                    dispatch({\r\n                        type: 'SUBSCRIPTION_DATA_CHANGED',\r\n                        payload: {\r\n                            customerId: null,\r\n                            subscriptions: [],\r\n                        },\r\n                    })\r\n                }\r\n            } catch (error) {\r\n                console.log(error.message)\r\n                dispatch({\r\n                    type: 'SUBSCRIPTION_DATA_CHANGED',\r\n                    payload: {\r\n                        customerId: null,\r\n                        subscriptions: [],\r\n                    },\r\n                })\r\n            }\r\n        })\r\n    }, [dispatch])\r\n\r\n    const fetchCustomer = async ({ uid, displayName, email }) => {\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n            },\r\n        }\r\n\r\n        const body = {\r\n            userId: uid,\r\n            name: displayName,\r\n            email,\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `${API_SERVICE}/create/customer`,\r\n            body,\r\n            config\r\n        )\r\n\r\n        return data\r\n    }\r\n\r\n    const fetchSubscriptions = async (customerId) => {\r\n        console.log(customerId)\r\n        const { data } = await axios.get(\r\n            `${API_SERVICE}/subscriptions/${customerId}`\r\n        )\r\n        return data.result\r\n    }\r\n\r\n    return (\r\n        <SubscriptionContext.Provider\r\n            value={{ state, dispatch, fetchSubscriptions }}\r\n        >\r\n            {children}\r\n        </SubscriptionContext.Provider>\r\n    )\r\n}\r\n\r\nexport const SubscriptionConsumer = SubscriptionContext.Consumer\r\n","import { useContext } from 'react'\r\nimport { SubscriptionContext } from '../contexts/subscriptionContext'\r\n\r\nexport const useSubscription = () => useContext(SubscriptionContext)\r\n","import axios from 'axios'\r\nimport { API_SERVICE } from '../URI'\r\n\r\nconst fetchPlans = async () => {\r\n    const { data } = await axios.get(`${API_SERVICE}/subscription/config`)\r\n\r\n    return data.prices\r\n}\r\n\r\nexport const getSubscriptionDetails = async (state) => {\r\n    let subscriptionDetail\r\n\r\n    if (state.subscriptions.length !== 0) {\r\n        for (let sub of state?.subscriptions?.data) {\r\n            if (sub.status === 'active') {\r\n                subscriptionDetail = sub\r\n                break\r\n            }\r\n        }\r\n    }\r\n\r\n    if (subscriptionDetail) {\r\n        const plans = await fetchPlans()\r\n        const planArr =\r\n            plans.length !== 0\r\n                ? plans.filter((x) => x.id === subscriptionDetail.plan.id)\r\n                : []\r\n\r\n        if (planArr.length !== 0) {\r\n            const plan = planArr[0]\r\n            const productName = plan.product.name\r\n\r\n            const sub = {\r\n                planId: plan.id,\r\n                productName,\r\n                productId: plan.product.id,\r\n                hotspotCount:\r\n                    productName === 'Pro Plan' ? Number.MAX_VALUE : 10,\r\n                deviceCount:\r\n                    productName === 'Pro Plan'\r\n                        ? subscriptionDetail.quantity\r\n                        : Number.MAX_VALUE,\r\n                groupCount: productName === 'Pro Plan' ? Number.MAX_VALUE : 2,\r\n                adminCount: productName === 'Pro Plan' ? Number.MAX_VALUE : 0,\r\n                reportCount: productName === 'Pro Plan' ? Number.MAX_VALUE : 1,\r\n            }\r\n\r\n            return sub\r\n        }\r\n    }\r\n\r\n    return null\r\n}\r\n","import * as React from 'react'\r\nimport Box from '@mui/material/Box'\r\nimport Table from '@mui/material/Table'\r\nimport TableBody from '@mui/material/TableBody'\r\nimport TableCell from '@mui/material/TableCell'\r\nimport TableContainer from '@mui/material/TableContainer'\r\nimport TableHead from '@mui/material/TableHead'\r\nimport TableRow from '@mui/material/TableRow'\r\nimport Typography from '@mui/material/Typography'\r\nimport Paper from '@mui/material/Paper'\r\nimport { CircularProgress } from '@mui/material'\r\nimport moment from 'moment'\r\nimport axios from 'axios'\r\nimport { API_SERVICE } from '../../URI'\r\n\r\nfunction Row(props) {\r\n  const {\r\n    row,\r\n    hotspotList,\r\n    selectedHotspots,\r\n    selectedGroups,\r\n    selectedMonth,\r\n  } = props\r\n  const [history, setHistory] = React.useState([])\r\n  const [load, setLoad] = React.useState(false)\r\n\r\n  const userData = localStorage.getItem('userData')\r\n    ? JSON.parse(localStorage.getItem('userData'))\r\n    : null\r\n\r\n  const arr = row.hotspots.map((x) => x.hotspot)\r\n\r\n  const checkExist = (x) => {\r\n    const i = arr.findIndex((e) => e === x._id)\r\n    return i\r\n  }\r\n\r\n  const filterGroup = async (data) => {\r\n    return new Promise((resolve) => {\r\n      const arr = []\r\n\r\n      for (let id of selectedGroups) {\r\n        console.log('inside')\r\n        for (let x of data) {\r\n          if (id === x.group._id) {\r\n            arr.push(x)\r\n          }\r\n        }\r\n      }\r\n      resolve(arr)\r\n    })\r\n  }\r\n\r\n  React.useEffect(async () => {\r\n    try {\r\n      setLoad(true)\r\n      const { data } = await axios.get(\r\n        `${API_SERVICE}/get/location/${userData.uid}/${row.phoneNumber}/${\r\n          selectedMonth + 1\r\n        }`,\r\n      )\r\n\r\n      if (selectedGroups.length === 0) {\r\n        setHistory(data)\r\n        setLoad(false)\r\n      } else {\r\n        const arr = await filterGroup(data)\r\n\r\n        setHistory(arr)\r\n        setLoad(false)\r\n      }\r\n    } catch (error) {\r\n      console.log(error.message)\r\n    }\r\n  }, [selectedGroups])\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <TableRow sx={{ '& > *': { borderBottom: 'unset' } }}>\r\n        <TableCell></TableCell>\r\n        <TableCell component=\"th\" scope=\"row\">\r\n          {row.device}\r\n        </TableCell>\r\n        <TableCell align=\"center\">{row.phoneNumber}</TableCell>\r\n\r\n        {selectedHotspots.length === 0 &&\r\n          hotspotList.map((x, i) => (\r\n            <React.Fragment key={x.hotspot}>\r\n              {checkExist(x) !== -1 ? (\r\n                <TableCell key={x.hotspot} align=\"center\">\r\n                  {row.hotspots[checkExist(x)].total}\r\n                </TableCell>\r\n              ) : (\r\n                <TableCell key={x.hotspot} align=\"center\">\r\n                  0\r\n                </TableCell>\r\n              )}\r\n            </React.Fragment>\r\n          ))}\r\n        {selectedHotspots.length !== 0 &&\r\n          selectedHotspots.map((x, i) => (\r\n            <React.Fragment key={x.hotspot}>\r\n              {checkExist(x) !== -1 ? (\r\n                <TableCell key={x.hotspot} align=\"center\">\r\n                  {row.hotspots[checkExist(x)].total}\r\n                </TableCell>\r\n              ) : (\r\n                <TableCell key={x.hotspot} align=\"center\">\r\n                  0\r\n                </TableCell>\r\n              )}\r\n            </React.Fragment>\r\n          ))}\r\n      </TableRow>\r\n      <TableRow>\r\n        <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\r\n          <Box sx={{ margin: 1 }}>\r\n            <Typography variant=\"h6\" sx={{ my: 2 }} component=\"div\">\r\n              History\r\n            </Typography>\r\n            <Table size=\"small\" aria-label=\"purchases\">\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell>Date</TableCell>\r\n                  <TableCell>Address</TableCell>\r\n                  <TableCell align=\"right\">Hotspot</TableCell>\r\n                  <TableCell align=\"right\">Group</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {!load &&\r\n                  history.map((historyRow, index) => (\r\n                    <TableRow key={index + 1}>\r\n                      <TableCell\r\n                        sx={{ borderWidth: 0, padding: '16px' }}\r\n                        component=\"th\"\r\n                        scope=\"row\"\r\n                      >\r\n                        {moment(historyRow.createdAt).format(\r\n                          'DD MMMM YYYY - hh:mm a',\r\n                        )}\r\n                      </TableCell>\r\n                      <TableCell sx={{ borderWidth: 0, padding: '16px' }}>\r\n                        {historyRow.address}\r\n                      </TableCell>\r\n                      <TableCell\r\n                        sx={{ borderWidth: 0, padding: '16px' }}\r\n                        align=\"right\"\r\n                      >\r\n                        {historyRow.hotspot.hotspotName}\r\n                      </TableCell>\r\n                      <TableCell\r\n                        sx={{ borderWidth: 0, padding: '16px' }}\r\n                        align=\"right\"\r\n                      >\r\n                        {historyRow.group.groupName}\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                <TableRow></TableRow>\r\n              </TableBody>\r\n            </Table>\r\n            {load && (\r\n              <Box\r\n                sx={{\r\n                  display: 'flex',\r\n                  justifyContent: 'center',\r\n                  width: '100%',\r\n                  my: 3,\r\n                }}\r\n              >\r\n                <CircularProgress sx={{ fontSize: 30 }} />\r\n              </Box>\r\n            )}\r\n          </Box>\r\n        </TableCell>\r\n      </TableRow>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nconst HiddenReportTable = (props) => {\r\n  return (\r\n    <TableContainer hidden component={Paper}>\r\n      <Table id={props.id}>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell />\r\n            <TableCell>Full Name</TableCell>\r\n            <TableCell align=\"center\">Phone Number</TableCell>\r\n            {props.selectedHotspots.length === 0 &&\r\n              props.hotspotList.map((hotspot, index) => (\r\n                <TableCell key={hotspot._id} align=\"center\">\r\n                  {hotspot.hotspotName}\r\n                </TableCell>\r\n              ))}\r\n            {props.selectedHotspots.length !== 0 &&\r\n              props.selectedHotspots.map((hotspot, index) => (\r\n                <TableCell key={hotspot._id} align=\"center\">\r\n                  {hotspot.hotspotName}\r\n                </TableCell>\r\n              ))}\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {props.tableData.map((row) => (\r\n            <Row\r\n              key={row.phoneNumber}\r\n              row={row}\r\n              hotspotList={props.hotspotList}\r\n              selectedHotspots={props.selectedHotspots}\r\n              selectedGroups={props.selectedGroups}\r\n              selectedMonth={props.selectedMonth}\r\n            />\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  )\r\n}\r\n\r\nexport default React.memo(HiddenReportTable)\r\n","import React, { useEffect, useState, useRef } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { Box, Button, CircularProgress, Backdrop } from '@mui/material'\r\nimport ReportTable from '../components/report/ReportTable'\r\nimport HotspotFilter from '../components/report/HotspotFilter'\r\nimport DeviceFilter from '../components/report/DeviceFilter'\r\nimport MonthFilter from '../components/report/MonthFilter'\r\nimport GroupFilter from '../components/report/GroupFilter'\r\nimport axios from 'axios'\r\nimport { API_SERVICE } from '../URI'\r\nimport ReactHTMLTableToExcel from 'react-html-table-to-excel'\r\nimport { useNavigate } from 'react-router'\r\nimport { useSubscription } from '../hooks/useSubscription'\r\nimport { getSubscriptionDetails } from '../utils/getSubscriptionDetails'\r\nimport HiddenReportTable from '../components/report/HiddenReportTable'\r\n\r\nconst Months = [\r\n    'January',\r\n    'February',\r\n    'March',\r\n    'April',\r\n    'May',\r\n    'June',\r\n    'July',\r\n    'August',\r\n    'September',\r\n    'October',\r\n    'November',\r\n    'December',\r\n]\r\n\r\nconst Report = () => {\r\n    const [tableData, setTableData] = useState([])\r\n\r\n    const [selectedHotspotsIds, setSelectedHotspotsIds] = useState([])\r\n    const [selectedHotspotsNames, setSelectedHotspotsNames] = useState([])\r\n\r\n    const [selectedGroups, setSelectedGroups] = useState([])\r\n    const [selectedGroupsNames, setSelectedGroupsNames] = useState([])\r\n\r\n    const [selectedHotspots, setSelectedHotspots] = useState([])\r\n    const [selectedDevices, setSelectedDevices] = useState([])\r\n    const [selectedMonth, setSelectedMonth] = useState(\r\n        Months[new Date().getMonth()]\r\n    )\r\n    const [loading, setLoading] = useState(false)\r\n    const [filteredData, setFilteredData] = useState([])\r\n\r\n    // subscription state\r\n    const [subscription, setSubscription] = useState(null)\r\n\r\n    const userData = localStorage.getItem('userData')\r\n        ? JSON.parse(localStorage.getItem('userData'))\r\n        : null\r\n\r\n    const devices = useSelector((state) => state.devices)\r\n    const { deviceList } = devices\r\n\r\n    const groups = useSelector((state) => state.groups)\r\n    const { groupList } = groups\r\n    const hotspots = useSelector((state) => state.hotspots)\r\n    const { hotspotList } = hotspots\r\n\r\n    const { state } = useSubscription()\r\n\r\n    useEffect(() => {\r\n        if (userData !== null) {\r\n            setLoading(true)\r\n            const fetchData = async () => {\r\n                const { data } = await axios.get(\r\n                    `${API_SERVICE}/get/attendance/${userData.uid}/${\r\n                        Months.indexOf(selectedMonth) + 1\r\n                    }`\r\n                )\r\n\r\n                console.log(data)\r\n                setTableData(data)\r\n                setLoading(false)\r\n            }\r\n\r\n            fetchData()\r\n        }\r\n    }, [selectedMonth])\r\n\r\n    useEffect(() => {\r\n        const fetchSubDetail = async () => {\r\n            const details = await getSubscriptionDetails(state)\r\n            setSubscription(details)\r\n        }\r\n\r\n        fetchSubDetail()\r\n    }, [])\r\n\r\n    // handling hotspot selection\r\n    const handleHotspotSelect = async (event) => {\r\n        const {\r\n            target: { value },\r\n        } = event\r\n        setSelectedHotspotsIds(\r\n            typeof value === 'string' ? value.split(',') : value\r\n        )\r\n        const arr = hotspotList.filter((x) => value.includes(x._id))\r\n        setSelectedHotspotsNames(arr.map((x) => x.hotspotName))\r\n    }\r\n\r\n    // handling group selection\r\n    const handleGroupSelect = async (event) => {\r\n        const {\r\n            target: { value },\r\n        } = event\r\n        setSelectedGroups(typeof value === 'string' ? value.split(',') : value)\r\n        const arr = groupList.filter((x) => value.includes(x._id))\r\n        setSelectedGroupsNames(arr.map((x) => x.groupName))\r\n    }\r\n\r\n    // handling device selection\r\n    const handleSelectedDevice = (event) => {\r\n        const {\r\n            target: { value },\r\n        } = event\r\n        setSelectedDevices(typeof value === 'string' ? value.split(',') : value)\r\n    }\r\n\r\n    // applying filter\r\n    useEffect(async () => {\r\n        setLoading(true)\r\n        let hotspots = []\r\n        if (selectedHotspotsIds.length !== 0) {\r\n            selectedHotspotsIds.forEach((x) => {\r\n                const temp = hotspotList\r\n                const filterArr = temp.filter((item) => item._id === x)\r\n                hotspots.push(...filterArr)\r\n            })\r\n        } else {\r\n            hotspots = hotspotList\r\n        }\r\n\r\n        setSelectedHotspots(hotspots)\r\n        let devices = []\r\n        if (selectedDevices.length !== 0) {\r\n            const temp = tableData\r\n            selectedDevices.forEach((x, i) => {\r\n                const number = x.split(' - ')[1]\r\n                const filterArr = temp.filter(\r\n                    (item) => item.phoneNumber === number\r\n                )\r\n                devices.push(...filterArr)\r\n            })\r\n        } else {\r\n            devices = tableData\r\n        }\r\n\r\n        setFilteredData(devices)\r\n\r\n        setLoading(false)\r\n    }, [selectedDevices, selectedHotspotsIds])\r\n\r\n    return (\r\n        <Box sx={{ p: 5 }}>\r\n            <Box\r\n                sx={{\r\n                    display: 'flex',\r\n                    justifyContent: 'flex-end',\r\n                    gap: 2,\r\n                    mt: 4,\r\n                }}\r\n            >\r\n                <MonthFilter\r\n                    Months={Months}\r\n                    selectedMonth={selectedMonth}\r\n                    setSelectedMonth={setSelectedMonth}\r\n                    subscription={subscription}\r\n                />\r\n\r\n                <HotspotFilter\r\n                    handleHotspotSelect={handleHotspotSelect}\r\n                    selectedHotspots={selectedHotspotsIds}\r\n                    selectedHotspotsNames={selectedHotspotsNames}\r\n                    hotspotNames={hotspotList}\r\n                />\r\n\r\n                <GroupFilter\r\n                    handleGroupSelect={handleGroupSelect}\r\n                    selectedGroups={selectedGroups}\r\n                    selectedGroupsNames={selectedGroupsNames}\r\n                    groupNames={groupList}\r\n                />\r\n\r\n                <DeviceFilter\r\n                    handleSelectedDevice={handleSelectedDevice}\r\n                    selectedDevices={selectedDevices}\r\n                    mobileDevices={deviceList}\r\n                />\r\n\r\n                <Button variant='outlined' sx={{ p: 0 }}>\r\n                    <ReactHTMLTableToExcel\r\n                        id='test-table-xls-button'\r\n                        table='table-to-xls'\r\n                        filename='report'\r\n                        sheet='tablexls'\r\n                        className='export-btn'\r\n                        buttonText='Export'\r\n                    />\r\n                </Button>\r\n            </Box>\r\n\r\n            <Box sx={{ my: 4 }}>\r\n                {!loading ? (\r\n                    <ReportTable\r\n                        tableData={\r\n                            selectedDevices.length === 0\r\n                                ? tableData\r\n                                : filteredData\r\n                        }\r\n                        id='table-to-xls'\r\n                        hotspotList={hotspotList}\r\n                        selectedHotspots={selectedHotspots}\r\n                        selectedGroups={selectedGroups}\r\n                        selectedMonth={Months.indexOf(selectedMonth)}\r\n                        deviceList={deviceList}\r\n                    />\r\n                ) : (\r\n                    <Box\r\n                        sx={{\r\n                            display: 'flex',\r\n                            justifyContent: 'center',\r\n                            mt: '300px',\r\n                        }}\r\n                    >\r\n                        <CircularProgress color='inherit' />\r\n                    </Box>\r\n                )}\r\n            </Box>\r\n            <Box sx={{ my: 4 }}>\r\n                {!loading ? (\r\n                    <HiddenReportTable\r\n                        tableData={\r\n                            selectedDevices.length === 0\r\n                                ? tableData\r\n                                : filteredData\r\n                        }\r\n                        id='table-to-xls'\r\n                        hotspotList={hotspotList}\r\n                        selectedHotspots={selectedHotspots}\r\n                        selectedGroups={selectedGroups}\r\n                        selectedMonth={Months.indexOf(selectedMonth)}\r\n                    />\r\n                ) : (\r\n                    <Box\r\n                        sx={{\r\n                            display: 'flex',\r\n                            justifyContent: 'center',\r\n                            mt: '300px',\r\n                        }}\r\n                    >\r\n                        <CircularProgress color='inherit' />\r\n                    </Box>\r\n                )}\r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Report\r\n","import React, { useState, useEffect } from 'react'\r\nimport {\r\n    Paper,\r\n    Box,\r\n    List,\r\n    ListItem,\r\n    Avatar,\r\n    ListItemAvatar,\r\n    ListItemText,\r\n    Stack,\r\n    Typography,\r\n    FormControl,\r\n    InputLabel,\r\n    Select,\r\n    MenuItem,\r\n    Divider,\r\n} from '@mui/material'\r\nimport { Image } from '@mui/icons-material'\r\nimport moment from 'moment'\r\n\r\nconst Notification = () => {\r\n    const [filter, setFilter] = useState('All')\r\n    const [notificationList, setNotificationList] = useState([])\r\n    const [filterList, setFilterList] = useState([])\r\n\r\n    const handleFilterChange = (event) => {\r\n        setFilter(event.target.value)\r\n    }\r\n\r\n    const getTime = (sec) => {\r\n        const str = moment(new Date(sec * 1000)).fromNow()\r\n\r\n        switch (str) {\r\n            case 'in a few seconds':\r\n                return 'few sec'\r\n            case 'a few seconds ago':\r\n                return 'few sec'\r\n            case 'a minute ago':\r\n                return '1m'\r\n            case 'an hour ago':\r\n                return '1h'\r\n            case 'a day ago':\r\n                return '1day'\r\n            default:\r\n                const first = str.split(' ')[0]\r\n                let mid = str.split(' ')[1]\r\n                if (mid === 'minutes' || mid === 'minute') {\r\n                    mid = 'm'\r\n                }\r\n                if (mid === 'hours' || mid === 'hour') {\r\n                    mid = 'h'\r\n                }\r\n                if (mid === 'days' || mid === 'day') {\r\n                    mid = 'd'\r\n                }\r\n                return first + mid\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        const temp = notificationList\r\n        const currDate = new Date().getTime()\r\n        let filterArr = []\r\n\r\n        if (filter === 'Today') {\r\n            filterArr = temp.filter(\r\n                (x) =>\r\n                    new Date(x.createdAt.seconds * 1000).getDate() ===\r\n                    new Date(currDate).getDate()\r\n            )\r\n        } else if (filter === 'Last Week') {\r\n            let start = new Date(currDate).getDate() - 7\r\n            if (start <= 0) {\r\n                start = 30 + start\r\n            }\r\n            const end = new Date(currDate).getDate()\r\n\r\n            console.log(start, end)\r\n\r\n            filterArr = temp.filter(\r\n                (x) =>\r\n                    new Date(x.createdAt.seconds * 1000).getDate() >= start ||\r\n                    new Date(x.createdAt.seconds * 1000).getDate() <= end\r\n            )\r\n        } else {\r\n            filterArr = temp\r\n        }\r\n\r\n        setFilterList(filterArr)\r\n    }, [filter])\r\n\r\n    return (\r\n        <Box sx={{ display: 'flex', justifyContent: 'center', m: 4 }}>\r\n            <Paper\r\n                sx={{\r\n                    width: { md: '70%', lg: '60%', xl: '50%' },\r\n                    p: 2,\r\n                    borderRadius: 5,\r\n                    boxShadow: 5,\r\n                }}\r\n            >\r\n                <Stack\r\n                    direction='row'\r\n                    justifyContent='space-between'\r\n                    sx={{ p: 2 }}\r\n                >\r\n                    <Box\r\n                        sx={{\r\n                            display: 'flex',\r\n                            flexDirection: 'row',\r\n                            justifyContent: 'space-between',\r\n                            alignItems: 'center',\r\n                            width: '100%',\r\n                        }}\r\n                    >\r\n                        <Box>\r\n                            <Typography variant='h3'>Notifications</Typography>\r\n                        </Box>\r\n                        <Stack direction='row' alignItems='center'>\r\n                            <Typography variant='h4'>Filter By</Typography>\r\n                            <FormControl\r\n                                variant='outlined'\r\n                                sx={{ width: 250, ml: 3 }}\r\n                            >\r\n                                <InputLabel>Select Filter</InputLabel>\r\n                                <Select\r\n                                    value={filter}\r\n                                    onChange={handleFilterChange}\r\n                                    label='Select Filter'\r\n                                >\r\n                                    <MenuItem value={'All'}>All</MenuItem>\r\n                                    <MenuItem value={'Today'}>Today</MenuItem>\r\n                                    <MenuItem value={'Last Week'}>\r\n                                        Last Week\r\n                                    </MenuItem>\r\n                                </Select>\r\n                            </FormControl>\r\n                        </Stack>\r\n                    </Box>\r\n                    {/* <Typography>mark all as read</Typography> */}\r\n                </Stack>\r\n                <List sx={{ padding: 2 }}>\r\n                    {filter === 'All' &&\r\n                        notificationList.map((x, i) => (\r\n                            <div key={++i}>\r\n                                <ListItem sx={{ mt: 1.5 }}>\r\n                                    <ListItemAvatar>\r\n                                        <Avatar>\r\n                                            <Image />\r\n                                        </Avatar>\r\n                                    </ListItemAvatar>\r\n                                    <ListItemText\r\n                                        primary={x.message}\r\n                                        secondary={\r\n                                            getTime(x.createdAt.seconds) +\r\n                                            ' ago'\r\n                                        }\r\n                                    />\r\n                                </ListItem>\r\n                                <Divider />\r\n                            </div>\r\n                        ))}\r\n\r\n                    {filter !== 'All' &&\r\n                        filterList.map((x, i) => (\r\n                            <div key={++i}>\r\n                                <ListItem sx={{ mt: 1.5 }}>\r\n                                    <ListItemAvatar>\r\n                                        <Avatar>\r\n                                            <Image />\r\n                                        </Avatar>\r\n                                    </ListItemAvatar>\r\n                                    <ListItemText\r\n                                        primary={x.message}\r\n                                        secondary={\r\n                                            getTime(x.createdAt.seconds) +\r\n                                            ' ago'\r\n                                        }\r\n                                    />\r\n                                </ListItem>\r\n                                <Divider />\r\n                            </div>\r\n                        ))}\r\n                </List>\r\n            </Paper>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Notification\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport {\r\n  Button,\r\n  Checkbox,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  FormControl,\r\n  InputLabel,\r\n  ListItemText,\r\n  MenuItem,\r\n  Select,\r\n  TextField,\r\n} from '@mui/material'\r\nimport { updateDevice } from '../../store/actions/device'\r\n\r\nconst ITEM_HEIGHT = 48\r\nconst ITEM_PADDING_TOP = 8\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250,\r\n    },\r\n  },\r\n}\r\n\r\nconst EditDeviceDialog = (props) => {\r\n  const {\r\n    setEditDialogOpen,\r\n    editDialogOpen,\r\n    selectedDevice,\r\n    trackingGroups,\r\n    setSnackOpen,\r\n    setError,\r\n  } = props\r\n\r\n  const [newFullName, setNewFullName] = useState('')\r\n  // const [newDeviceGroup, setNewDeviceGroup] = useState([])\r\n  const [selectedGroups, setSelectedGroups] = useState([])\r\n  const [selectedGroupsNames, setSelectedGroupsNames] = useState([])\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const handleChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event\r\n    setSelectedGroups(typeof value === 'string' ? value.split(',') : value)\r\n\r\n    const arr = trackingGroups.filter((x) => value.includes(x._id))\r\n    setSelectedGroupsNames(arr.map((x) => x.groupName))\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (Object.entries(selectedDevice).length !== 0) {\r\n      setNewFullName(selectedDevice.fullName)\r\n      const groups = selectedDevice.groups\r\n\r\n      const arr = []\r\n      groups.forEach((x) => arr.push(x._id))\r\n      setSelectedGroups(arr)\r\n\r\n      setSelectedGroupsNames(\r\n        groups.filter((x) => arr.includes(x._id)).map((x) => x.groupName),\r\n      )\r\n    }\r\n  }, [selectedDevice])\r\n\r\n  const updateDetails = () => {\r\n    if (newFullName.length === 0) {\r\n      setError('Full name is required')\r\n      setSnackOpen(true)\r\n      return\r\n    }\r\n    const body = {\r\n      _id: selectedDevice._id,\r\n      fullName: newFullName,\r\n      groups: selectedGroups,\r\n    }\r\n\r\n    dispatch(updateDevice(body))\r\n    setNewFullName('')\r\n    setSelectedGroups([])\r\n    setEditDialogOpen(false)\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      open={editDialogOpen}\r\n      onClose={() => {\r\n        setEditDialogOpen(false)\r\n      }}\r\n    >\r\n      <DialogTitle sx={{ fontSize: 22 }}>Edit Device</DialogTitle>\r\n      <DialogContent sx={{ width: 500 }}>\r\n        <TextField\r\n          autoFocus\r\n          margin=\"dense\"\r\n          id=\"name\"\r\n          label=\"Full Name\"\r\n          type=\"text\"\r\n          fullWidth\r\n          variant=\"outlined\"\r\n          value={newFullName}\r\n          onChange={(e) => setNewFullName(e.target.value)}\r\n        />\r\n        <FormControl margin=\"normal\" fullWidth variant=\"outlined\">\r\n          <InputLabel id=\"device-group\">Select Group</InputLabel>\r\n          <Select\r\n            labelId=\"device-group\"\r\n            label=\"Select Group\"\r\n            value={selectedGroups}\r\n            onChange={handleChange}\r\n            multiple\r\n            renderValue={() => selectedGroupsNames.join(', ')}\r\n            MenuProps={MenuProps}\r\n          >\r\n            {trackingGroups.map((item) => (\r\n              <MenuItem key={item._id} value={item._id}>\r\n                <Checkbox checked={selectedGroups.indexOf(item._id) > -1} />\r\n                <ListItemText primary={item.groupName} />\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={() => setEditDialogOpen(false)}>Cancel</Button>\r\n        <Button onClick={() => updateDetails()}>Save Changes</Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n}\r\n\r\nexport default EditDeviceDialog\r\n","import React, { useState } from 'react'\r\nimport {\r\n  Box,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Paper,\r\n  IconButton,\r\n  Chip,\r\n} from '@mui/material'\r\nimport DeleteIcon from '@mui/icons-material/Delete'\r\nimport Create from '@mui/icons-material/Create'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { deleteDevice } from '../../store/actions/device'\r\nimport { db } from '../../Firebase'\r\nimport {\r\n  collection,\r\n  deleteDoc,\r\n  doc,\r\n  getDocs,\r\n  query,\r\n  where,\r\n} from 'firebase/firestore'\r\n\r\nconst DeviceTable = (props) => {\r\n  const { toggleEditDeviceDialog } = props\r\n\r\n  const devices = useSelector((state) => state.devices)\r\n  const { deviceList } = devices\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const removeDevice = async (data) => {\r\n    dispatch(deleteDevice(data._id))\r\n\r\n    const requestRef = collection(\r\n      db,\r\n      'trackingRequest',\r\n      data.phoneNumber,\r\n      'requests',\r\n    )\r\n\r\n    const q = query(requestRef, where('sender.id', '==', data.createdBy))\r\n    const querySnapshot = await getDocs(q)\r\n    const arr = []\r\n    querySnapshot.forEach((x) => {\r\n      arr.push(x.id)\r\n    })\r\n\r\n    arr.forEach(async (x) => {\r\n      const requestRef = doc(\r\n        db,\r\n        'trackingRequest',\r\n        data.phoneNumber,\r\n        'requests',\r\n        x,\r\n      )\r\n\r\n      await deleteDoc(requestRef)\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Box>\r\n      <TableContainer component={Paper} sx={{ boxShadow: 6 }}>\r\n        <Table sx={{ minWidth: 650 }}>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Name</TableCell>\r\n              <TableCell align=\"center\">Mobile Number</TableCell>\r\n              <TableCell align=\"center\">Groups Added</TableCell>\r\n              <TableCell align=\"center\">Tracking Status</TableCell>\r\n              <TableCell align=\"center\">Action</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {deviceList.map((data) => (\r\n              <TableRow\r\n                key={data._id}\r\n                sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n              >\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                  {data.fullName}\r\n                </TableCell>\r\n                <TableCell align=\"center\">{data.phoneNumber}</TableCell>\r\n                {data.groups.length === 0 ? (\r\n                  <TableCell align=\"center\">--</TableCell>\r\n                ) : (\r\n                  <TableCell align=\"center\">\r\n                    {data.groups.map((x, i) => (\r\n                      <>\r\n                        {x.groupName}\r\n                        {i !== data.groups.length - 1 && <>{' ,'}</>}\r\n                      </>\r\n                    ))}\r\n                  </TableCell>\r\n                )}\r\n\r\n                <TableCell align=\"center\">\r\n                  {data.trackingStatus === 'accepted' && (\r\n                    <Chip label=\"Accepted\" color=\"success\" />\r\n                  )}\r\n                  {data.trackingStatus === 'rejected' && (\r\n                    <Chip label=\"Rejected\" color=\"error\" />\r\n                  )}\r\n                  {data.trackingStatus === 'pending' && (\r\n                    <Chip label=\"Pending\" color=\"warning\" />\r\n                  )}\r\n                  {data.trackingStatus === 'turned off' && (\r\n                    <Chip label=\"Turned Off\" color=\"error\" />\r\n                  )}\r\n                </TableCell>\r\n                <TableCell align=\"center\" sx={{ p: 0 }}>\r\n                  <IconButton\r\n                    edge=\"end\"\r\n                    aria-label=\"edit\"\r\n                    color=\"primary\"\r\n                    onClick={() => toggleEditDeviceDialog(data)}\r\n                  >\r\n                    <Create />\r\n                  </IconButton>\r\n                  <IconButton color=\"error\" onClick={() => removeDevice(data)}>\r\n                    <DeleteIcon />\r\n                  </IconButton>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default React.memo(DeviceTable)\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport {\r\n    Box,\r\n    TextField,\r\n    Button,\r\n    Snackbar,\r\n    Alert,\r\n    FormControl,\r\n    InputLabel,\r\n    Select,\r\n    MenuItem,\r\n    ListItemText,\r\n    Dialog,\r\n    DialogTitle,\r\n    DialogContent,\r\n    DialogActions,\r\n    Checkbox,\r\n} from '@mui/material'\r\nimport { makeStyles } from '@mui/styles'\r\n\r\nimport { db } from '../Firebase/index'\r\nimport { addDoc, collection, Timestamp } from 'firebase/firestore'\r\nimport EditDeviceDialog from '../components/devices/EditDeviceDialog'\r\nimport DeviceTable from '../components/devices/DeviceTable'\r\nimport {\r\n    createDevice,\r\n    getDevices,\r\n    getAdminDevices,\r\n} from '../store/actions/device'\r\n\r\nimport axios from 'axios'\r\nimport { API_SERVICE } from '../URI'\r\nimport { useSubscription } from '../hooks/useSubscription'\r\nimport { getSubscriptionDetails } from '../utils/getSubscriptionDetails'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    form: {\r\n        width: '100%',\r\n        marginTop: theme.spacing(1),\r\n    },\r\n}))\r\n\r\nconst ITEM_HEIGHT = 48\r\nconst ITEM_PADDING_TOP = 8\r\nconst MenuProps = {\r\n    PaperProps: {\r\n        style: {\r\n            maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n            width: 250,\r\n        },\r\n    },\r\n}\r\n\r\nconst ManageMobileDevices = () => {\r\n    const classes = useStyles()\r\n\r\n    const userData = localStorage.getItem('userData')\r\n        ? JSON.parse(localStorage.getItem('userData'))\r\n        : null\r\n\r\n    const adminData = localStorage.getItem('adminData')\r\n        ? JSON.parse(localStorage.getItem('adminData'))\r\n        : null\r\n\r\n    // adding new device states\r\n    const [fullName, setFullName] = useState('')\r\n    const [phoneNumber, setPhoneNumber] = useState('')\r\n    const [selectedGroups, setSelectedGroups] = useState([])\r\n    const [selectedGroupsNames, setSelectedGroupsNames] = useState([])\r\n    // added devices section states\r\n    const [editDialogOpen, setEditDialogOpen] = useState(false)\r\n    const [selectedDevice, setSelectedDevice] = useState({})\r\n    const [addDeviceDialog, setAddDeviceDialog] = useState(false)\r\n    const [scheduleDialog, setScheduleDialog] = useState(false)\r\n    // snackbar states\r\n    const [snackOpen, setSnackOpen] = useState(false)\r\n    const [successMsg, setSuccess] = useState(null)\r\n    const [errorMsg, setError] = useState(null)\r\n    // subscription state\r\n    const [subscription, setSubscription] = useState(null)\r\n\r\n    const dispatch = useDispatch()\r\n    const groups = useSelector((state) => state.groups)\r\n    const { groupList } = groups\r\n\r\n    const devices = useSelector((state) => state.devices)\r\n    const { deviceList } = devices\r\n    let { success, error } = devices\r\n\r\n    const { state } = useSubscription()\r\n\r\n    useEffect(() => {\r\n        const fetchSubDetail = async () => {\r\n            const details = await getSubscriptionDetails(state)\r\n            setSubscription(details)\r\n        }\r\n\r\n        fetchSubDetail()\r\n    }, [])\r\n\r\n    useEffect(async () => {\r\n        if (adminData === null && userData !== null) {\r\n            dispatch(getDevices(userData.uid))\r\n        }\r\n        if (adminData !== null && userData !== null) {\r\n            const { data } = await axios.get(\r\n                `${API_SERVICE}/get/admin/${adminData.email}`\r\n            )\r\n            dispatch(\r\n                getAdminDevices({\r\n                    createdBy: userData.uid,\r\n                    adminGroups: data.groups,\r\n                })\r\n            )\r\n        }\r\n    }, [dispatch])\r\n\r\n    useEffect(() => {\r\n        success = null\r\n        error = null\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (success) {\r\n            setSuccess(success)\r\n            setSnackOpen(true)\r\n        }\r\n        if (error !== undefined) {\r\n            setError(error)\r\n            setSnackOpen(true)\r\n        }\r\n    }, [success, error])\r\n\r\n    useEffect(async () => {\r\n        if (success === 'Device added succssfully') {\r\n            if (phoneNumber.length !== 0) {\r\n                await sendTrackingRequest()\r\n                await sendNotificationToDevice()\r\n            }\r\n\r\n            setPhoneNumber('')\r\n            setSelectedGroups([])\r\n            setFullName('')\r\n            setAddDeviceDialog(false)\r\n        }\r\n    }, [success])\r\n\r\n    const handleSnackClose = (_, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return\r\n        }\r\n\r\n        setSnackOpen(false)\r\n        setError(null)\r\n        setSuccess(null)\r\n    }\r\n\r\n    // toggle edit devices dialog\r\n    const toggleEditDeviceDialog = (item) => {\r\n        if (editDialogOpen) {\r\n            setEditDialogOpen(false)\r\n        } else {\r\n            setSelectedDevice(item)\r\n            setEditDialogOpen(true)\r\n        }\r\n    }\r\n\r\n    const sendTrackingRequest = async () => {\r\n        const requestRef = collection(\r\n            db,\r\n            'trackingRequest',\r\n            phoneNumber,\r\n            'requests'\r\n        )\r\n        await addDoc(requestRef, {\r\n            requestStatus: 'pending',\r\n            companyName: userData.companyName,\r\n            recieverFullName: fullName,\r\n            sender: {\r\n                id: userData.uid,\r\n                profilePhoto: userData.profilePhoto,\r\n            },\r\n            createdAt: Timestamp.now(),\r\n        }).catch((error) => console.log(error))\r\n    }\r\n\r\n    const sendNotificationToDevice = async () => {\r\n        const androidRef = collection(\r\n            db,\r\n            'trackingAndroidNotification',\r\n            phoneNumber,\r\n            'notifications'\r\n        )\r\n        await addDoc(androidRef, {\r\n            message: `${userData.companyName} has send you a tracking request`,\r\n            status: 'pending',\r\n            sender: {\r\n                id: userData.uid,\r\n                profilePhoto: userData.profilePhoto,\r\n            },\r\n            createdAt: Timestamp.now(),\r\n            seen: false,\r\n        }).catch((error) => console.log(error))\r\n    }\r\n\r\n    const addNewDevice = async () => {\r\n        if (subscription === null) {\r\n            setError('You do not have any subscription. Please choose a plan')\r\n            setSnackOpen(true)\r\n            return\r\n        } else if (deviceList.length === subscription.deviceCount) {\r\n            setError(\r\n                'You have used your device quota. Please upgrade your subscription'\r\n            )\r\n            setSnackOpen(true)\r\n            return\r\n        } else if (phoneNumber.length === 0) {\r\n            setError('Phone number is required')\r\n            setSnackOpen(true)\r\n            return\r\n        } else if (!phoneNumber.startsWith('+')) {\r\n            setError('Please enter valid country code. example - +911234567890')\r\n            setSnackOpen(true)\r\n            return\r\n        } else if (fullName.length === 0) {\r\n            setError('Full name is required')\r\n            setSnackOpen(true)\r\n            return\r\n        }\r\n\r\n        const body = {\r\n            fullName,\r\n            phoneNumber,\r\n            groups: selectedGroups,\r\n            createdBy: userData.uid,\r\n            trackingStatus: 'pending',\r\n        }\r\n\r\n        dispatch(createDevice(body))\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n        const {\r\n            target: { value },\r\n        } = event\r\n        setSelectedGroups(typeof value === 'string' ? value.split(',') : value)\r\n\r\n        const arr = groupList.filter((x) => value.includes(x._id))\r\n        setSelectedGroupsNames(arr.map((x) => x.groupName))\r\n    }\r\n\r\n    const closeAddDeviceDialog = () => {\r\n        setFullName('')\r\n        setPhoneNumber('')\r\n        setSelectedGroups([])\r\n        setAddDeviceDialog(false)\r\n    }\r\n\r\n    return (\r\n        <Box sx={{ width: '100%', p: 4 }}>\r\n            <h2>Manage Mobile Devices</h2>\r\n            <Box\r\n                sx={{\r\n                    width: '100%',\r\n                    display: 'flex',\r\n                    justifyContent: 'flex-end',\r\n                    flexDirection: 'row',\r\n                    gap: 2,\r\n                }}\r\n            >\r\n                <Button\r\n                    variant='contained'\r\n                    sx={{\r\n                        py: 1.2,\r\n                    }}\r\n                    onClick={() => setAddDeviceDialog(true)}\r\n                >\r\n                    Add New Device\r\n                </Button>\r\n            </Box>\r\n\r\n            <Box sx={{ mt: 5 }}>\r\n                <DeviceTable\r\n                    toggleEditDeviceDialog={toggleEditDeviceDialog}\r\n                    scheduleDialog={scheduleDialog}\r\n                    setScheduleDialog={setScheduleDialog}\r\n                />\r\n            </Box>\r\n\r\n            {/** Dialog for adding a new device */}\r\n            <Dialog\r\n                open={addDeviceDialog}\r\n                onClose={() => closeAddDeviceDialog()}\r\n            >\r\n                <DialogTitle sx={{ fontSize: 22 }}>Add New Device</DialogTitle>\r\n                <DialogContent sx={{ width: 500 }}>\r\n                    <form className={classes.form} noValidate>\r\n                        <TextField\r\n                            variant='outlined'\r\n                            margin='normal'\r\n                            fullWidth\r\n                            id='fullName'\r\n                            label='Full Name'\r\n                            name='fullName'\r\n                            autoComplete='name'\r\n                            autoFocus\r\n                            value={fullName}\r\n                            onChange={(e) => setFullName(e.target.value)}\r\n                        />\r\n                        <TextField\r\n                            variant='outlined'\r\n                            margin='normal'\r\n                            fullWidth\r\n                            id='phoneNumber'\r\n                            label='Phone Number'\r\n                            placeholder='+911234567890'\r\n                            name='phoneNumber'\r\n                            value={phoneNumber}\r\n                            onChange={(e) => setPhoneNumber(e.target.value)}\r\n                        />\r\n\r\n                        <FormControl\r\n                            margin='normal'\r\n                            fullWidth\r\n                            variant='outlined'\r\n                        >\r\n                            <InputLabel id='device-group'>\r\n                                Select Group\r\n                            </InputLabel>\r\n                            <Select\r\n                                labelId='device-group'\r\n                                label='Select Group'\r\n                                value={selectedGroups}\r\n                                onChange={handleChange}\r\n                                multiple\r\n                                renderValue={() =>\r\n                                    selectedGroupsNames.join(', ')\r\n                                }\r\n                                MenuProps={MenuProps}\r\n                            >\r\n                                {groupList.map((item) => (\r\n                                    <MenuItem key={item._id} value={item._id}>\r\n                                        <Checkbox\r\n                                            checked={\r\n                                                selectedGroups.indexOf(\r\n                                                    item._id\r\n                                                ) > -1\r\n                                            }\r\n                                        />\r\n                                        <ListItemText\r\n                                            primary={item.groupName}\r\n                                        />\r\n                                    </MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </FormControl>\r\n                    </form>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => closeAddDeviceDialog()}>\r\n                        Cancel\r\n                    </Button>\r\n                    <Button onClick={() => addNewDevice()}>Save Device</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            {/** Dialog for editing a device */}\r\n            <EditDeviceDialog\r\n                editDialogOpen={editDialogOpen}\r\n                setEditDialogOpen={setEditDialogOpen}\r\n                selectedDevice={selectedDevice}\r\n                trackingGroups={groupList}\r\n                setSuccess={setSuccess}\r\n                setError={setError}\r\n                setSnackOpen={setSnackOpen}\r\n            />\r\n\r\n            {successMsg && (\r\n                <Snackbar\r\n                    open={snackOpen}\r\n                    autoHideDuration={4000}\r\n                    onClose={handleSnackClose}\r\n                    anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n                >\r\n                    <Alert\r\n                        onClose={handleSnackClose}\r\n                        severity='success'\r\n                        sx={{ width: '100%' }}\r\n                        variant='filled'\r\n                    >\r\n                        {successMsg}\r\n                    </Alert>\r\n                </Snackbar>\r\n            )}\r\n            {errorMsg && (\r\n                <Snackbar\r\n                    open={snackOpen}\r\n                    autoHideDuration={4000}\r\n                    onClose={handleSnackClose}\r\n                    anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n                >\r\n                    <Alert\r\n                        onClose={handleSnackClose}\r\n                        severity='error'\r\n                        sx={{ width: '100%' }}\r\n                        variant='filled'\r\n                    >\r\n                        {errorMsg}\r\n                    </Alert>\r\n                </Snackbar>\r\n            )}\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default ManageMobileDevices\r\n","import React, { useState, useEffect, useRef, useCallback } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport {\r\n  Checkbox,\r\n  FormControl,\r\n  InputLabel,\r\n  ListItemText,\r\n  MenuItem,\r\n  Select,\r\n  TextField,\r\n  Dialog,\r\n  DialogContent,\r\n  DialogActions,\r\n  Button,\r\n} from '@mui/material'\r\nimport ReactMapGL, { Marker, Popup } from 'react-map-gl'\r\nimport Geocoder from 'react-map-gl-geocoder'\r\nimport 'react-map-gl-geocoder/dist/mapbox-gl-geocoder.css'\r\nimport axios from 'axios'\r\nimport { API_SERVICE, MAP_STYLE, MAP_TOKEN } from '../../URI'\r\nimport { arrayRemove, arrayUnion, doc, updateDoc } from 'firebase/firestore'\r\nimport { db } from '../../Firebase'\r\nimport { updateHotspot } from '../../store/actions/hotspot'\r\n\r\nconst ITEM_HEIGHT = 48\r\nconst ITEM_PADDING_TOP = 8\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250,\r\n    },\r\n  },\r\n}\r\n\r\nconst EditHotspotDialogForm = (props) => {\r\n  const { trackingGroups, setDialogOpen, open, selectedHotspot } = props\r\n\r\n  const mapRef = useRef()\r\n\r\n  const [hotspotName, setHotspotName] = useState('')\r\n  const [selectedGroups, setSelectedGroups] = useState([])\r\n  const [selectedGroupsNames, setSelectedGroupsNames] = useState([])\r\n  const [location, setLocation] = useState('')\r\n  const [lat, setlat] = useState(28.6077159025)\r\n  const [long, setlong] = useState(77.224249103)\r\n  const [zipCode, setZipCode] = useState(0)\r\n  const [viewport, setViewport] = useState({\r\n    width: '100%',\r\n    height: 400,\r\n    latitude: lat,\r\n    longitude: long,\r\n    zoom: 15,\r\n  })\r\n  const [isFetching, setIsFetching] = useState(false)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    if (Object.entries(selectedHotspot).length !== 0) {\r\n      setHotspotName(selectedHotspot.hotspotName)\r\n      const groups = selectedHotspot.groups\r\n\r\n      const arr = []\r\n      groups.forEach((x) => arr.push(x._id))\r\n      setSelectedGroups(arr)\r\n\r\n      setSelectedGroupsNames(\r\n        groups.filter((x) => arr.includes(x._id)).map((x) => x.groupName),\r\n      )\r\n\r\n      getLatLong(\r\n        selectedHotspot.location.latitude,\r\n        selectedHotspot.location.longitude,\r\n      )\r\n      setViewport({\r\n        ...viewport,\r\n        latitude: selectedHotspot.location.latitude,\r\n        longitude: selectedHotspot.location.longitude,\r\n      })\r\n      setlat(selectedHotspot.location.latitude)\r\n      setlong(selectedHotspot.location.longitude)\r\n    }\r\n  }, [selectedHotspot])\r\n\r\n  const handleViewportChange = useCallback(\r\n    (newViewport) => setViewport(newViewport),\r\n    [],\r\n  )\r\n\r\n  const handleGeocoderViewportChange = useCallback((newViewport) => {\r\n    const geocoderDefaultOverrides = { transitionDuration: 1000 }\r\n\r\n    getLatLong(newViewport.latitude, newViewport.longitude)\r\n\r\n    return handleViewportChange({\r\n      ...newViewport,\r\n      ...geocoderDefaultOverrides,\r\n    })\r\n  }, [])\r\n\r\n  const getLatLong = async (latitude, longitude) => {\r\n    axios\r\n      .get(`${API_SERVICE}/getlatlong/${latitude}/${longitude}`)\r\n      .then((res) => {\r\n        setLocation(res.data.formattedAddress)\r\n        setZipCode(res.data.zipcode)\r\n        setIsFetching(false)\r\n      })\r\n      .catch((error) => {\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n  const handleChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event\r\n    setSelectedGroups(typeof value === 'string' ? value.split(',') : value)\r\n    const arr = trackingGroups.filter((x) => value.includes(x._id))\r\n    setSelectedGroupsNames(arr.map((x) => x.groupName))\r\n  }\r\n\r\n  const updateDetails = () => {\r\n    const body = {\r\n      _id: selectedHotspot._id,\r\n      hotspotName,\r\n      location: {\r\n        latitude: Number(lat.toPrecision(6)),\r\n        longitude: Number(long.toPrecision(6)),\r\n        zipCode,\r\n      },\r\n      groups: selectedGroups,\r\n    }\r\n    dispatch(updateHotspot(body))\r\n    setDialogOpen(false)\r\n  }\r\n\r\n  return (\r\n    <Dialog open={open} onClose={() => setDialogOpen(false)}>\r\n      <DialogContent sx={{ width: '1200' }}>\r\n        <form noValidate style={{ marginBottom: '20px' }}>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            fullWidth\r\n            id=\"hotspotName\"\r\n            label=\"Hotspot Name\"\r\n            name=\"hotspotName\"\r\n            autoFocus\r\n            value={hotspotName}\r\n            onChange={(e) => setHotspotName(e.target.value)}\r\n          />\r\n\r\n          <FormControl margin=\"normal\" fullWidth variant=\"outlined\">\r\n            <InputLabel id=\"device-group\">Select Group</InputLabel>\r\n            <Select\r\n              labelId=\"device-group\"\r\n              label=\"Select Group\"\r\n              value={selectedGroups}\r\n              onChange={handleChange}\r\n              multiple\r\n              renderValue={() => selectedGroupsNames.join(', ')}\r\n              MenuProps={MenuProps}\r\n            >\r\n              {trackingGroups.map((item) => (\r\n                <MenuItem key={item._id} value={item._id}>\r\n                  <Checkbox checked={selectedGroups.indexOf(item._id) > -1} />\r\n                  <ListItemText primary={item.groupName} />\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            fullWidth\r\n            id=\"location\"\r\n            label=\"Set Location\"\r\n            name=\"location\"\r\n            value={location}\r\n            onChange={(e) => {}}\r\n          />\r\n        </form>\r\n        <ReactMapGL\r\n          {...viewport}\r\n          ref={mapRef}\r\n          mapboxApiAccessToken={MAP_TOKEN}\r\n          mapStyle={MAP_STYLE}\r\n          onViewportChange={(nextViewport) => setViewport(nextViewport)}\r\n          onClick={async (e) => {\r\n            setlat(e.lngLat[1])\r\n            setlong(e.lngLat[0])\r\n            setIsFetching(true)\r\n            getLatLong(e.lngLat[1], e.lngLat[0])\r\n          }}\r\n        >\r\n          <Geocoder\r\n            mapRef={mapRef}\r\n            onViewportChange={handleGeocoderViewportChange}\r\n            mapboxApiAccessToken={MAP_TOKEN}\r\n            position=\"top-left\"\r\n            marker={true}\r\n            countries=\"IN\"\r\n            reverseGeocode={true}\r\n          />\r\n          <Marker key=\"1\" latitude={lat} longitude={long}>\r\n            <button className=\"marker-btn\">\r\n              <img\r\n                alt=\"Image\"\r\n                src=\"https://www.nbp.co.uk/Content/Images/uploaded/contact-branch-details.png\"\r\n              />\r\n            </button>\r\n          </Marker>\r\n        </ReactMapGL>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={() => setDialogOpen(false)}>Cancel</Button>\r\n        <Button disabled={isFetching} onClick={() => updateDetails()}>\r\n          Update\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n}\r\n\r\nexport default EditHotspotDialogForm\r\n","import React, { useEffect, useState } from 'react'\r\nimport {\r\n  Box,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Paper,\r\n  Typography,\r\n  IconButton,\r\n} from '@mui/material'\r\nimport DeleteIcon from '@mui/icons-material/Delete'\r\nimport Create from '@mui/icons-material/Create'\r\nimport { db } from '../../Firebase/index'\r\nimport {\r\n  collection,\r\n  getDocs,\r\n  query,\r\n  where,\r\n  deleteDoc,\r\n  doc,\r\n  updateDoc,\r\n  arrayRemove,\r\n  onSnapshot,\r\n} from 'firebase/firestore'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { deleteHotspot } from '../../store/actions/hotspot'\r\n\r\nconst HotspotSetting = (props) => {\r\n  const { open, success, error, toggleEditHotspotDialog } = props\r\n\r\n  //const [hotspots, setHotspots] = useState([])\r\n\r\n  const userData = sessionStorage.getItem('userData')\r\n    ? JSON.parse(sessionStorage.getItem('userData'))\r\n    : null\r\n\r\n  const adminData = sessionStorage.getItem('adminData')\r\n    ? JSON.parse(sessionStorage.getItem('adminData'))\r\n    : null\r\n\r\n  const dispatch = useDispatch()\r\n  const hotspots = useSelector((state) => state.hotspots)\r\n  const { hotspotList } = hotspots\r\n\r\n  //Get All Hotspots\r\n  // useEffect(() => {\r\n  //   const ref = collection(db, 'trackingHotspots')\r\n  //   let q\r\n  //   let unsub\r\n  //   if (adminData === null) {\r\n  //     q = query(ref, where('createdBy', '==', userData.uid))\r\n\r\n  //     unsub = onSnapshot(q, (snapshot) => {\r\n  //       const array = []\r\n  //       snapshot.forEach((document) => {\r\n  //         array.push({ ...document.data(), id: document.id })\r\n  //       })\r\n  //       setHotspots(array)\r\n  //     })\r\n  //   } else {\r\n  //     const array = []\r\n  //     adminData.groupId.forEach((x) => {\r\n  //       q = query(\r\n  //         ref,\r\n  //         where('createdBy', '==', userData.uid),\r\n  //         where('groupId', 'array-contains-any', adminData.groupId),\r\n  //       )\r\n  //       unsub = onSnapshot(q, (snapshot) => {\r\n  //         snapshot.forEach((document) => {\r\n  //           array.push({ ...document.data(), id: document.id })\r\n  //         })\r\n  //       })\r\n  //     })\r\n\r\n  //     setHotspots(array)\r\n  //   }\r\n  // }, [])\r\n\r\n  const removeHotspot = (hotspot) => {\r\n    dispatch(deleteHotspot(hotspot._id))\r\n  }\r\n\r\n  // const deleteHotspot = async (hotspot) => {\r\n  //   await deleteDoc(doc(db, 'trackingHotspots', hotspot.id))\r\n  //     .then(() => {\r\n  //       const groups = hotspot.groups\r\n\r\n  //       for (let group of groups) {\r\n  //         const ref = doc(db, 'trackingGroups', group.id)\r\n  //         updateDoc(ref, {\r\n  //           hotspot: arrayRemove({\r\n  //             hotspotName: hotspot.hotspotName,\r\n  //             id: hotspot.id,\r\n  //             zipCode: hotspot.location.zipCode,\r\n  //           }),\r\n  //         }).catch((err) => console.log(err))\r\n  //       }\r\n  //     })\r\n  //     .then(() => {\r\n  //       success('Hotspot Deleted Successfully !!')\r\n  //       open(true)\r\n  //     })\r\n  //     .catch((err) => {\r\n  //       console.log(err)\r\n  //     })\r\n  // }\r\n\r\n  return (\r\n    <Box>\r\n      <TableContainer component={Paper} sx={{ boxShadow: 6 }}>\r\n        <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Hotspot Name</TableCell>\r\n              <TableCell align=\"center\">Address (Zip Code)</TableCell>\r\n              <TableCell align=\"center\">Groups Added</TableCell>\r\n              <TableCell align=\"center\">Action</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {hotspotList.map((row) => (\r\n              <TableRow\r\n                key={row._id}\r\n                sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n              >\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                  {row.hotspotName}\r\n                </TableCell>\r\n                <TableCell align=\"center\">{row.location.zipCode}</TableCell>\r\n                <TableCell\r\n                  align=\"center\"\r\n                  sx={{ display: 'flex', justifyContent: 'center' }}\r\n                >\r\n                  {row.groups.length === 0 && <>---</>}\r\n                  {row.groups.map((x, i) => (\r\n                    <div key={i}>\r\n                      <Typography variant=\"p\" component=\"p\">\r\n                        {x.groupName}\r\n                        {i !== row.groups.length - 1 && <>{' ,'}</>}\r\n                      </Typography>\r\n                    </div>\r\n                  ))}\r\n                </TableCell>\r\n                <TableCell align=\"center\" sx={{ p: 0 }}>\r\n                  <IconButton\r\n                    edge=\"end\"\r\n                    aria-label=\"edit\"\r\n                    color=\"primary\"\r\n                    onClick={() => toggleEditHotspotDialog(row)}\r\n                    sx={{ mr: 0.2 }}\r\n                  >\r\n                    <Create />\r\n                  </IconButton>\r\n                  <IconButton color=\"error\" onClick={() => removeHotspot(row)}>\r\n                    <DeleteIcon />\r\n                  </IconButton>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default HotspotSetting\r\n","import React, { useEffect, useState, useRef, useCallback } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {\r\n    Box,\r\n    Grid,\r\n    TextField,\r\n    FormControl,\r\n    InputLabel,\r\n    Select,\r\n    MenuItem,\r\n    Button,\r\n    ListItemText,\r\n    Checkbox,\r\n    Snackbar,\r\n    Alert,\r\n    Dialog,\r\n    DialogTitle,\r\n    DialogContent,\r\n    DialogActions,\r\n} from '@mui/material'\r\nimport ReactMapGL, { Marker, Popup } from 'react-map-gl'\r\nimport EditHotspotDialogForm from '../components/hotspot/EditHotspotDialogForm'\r\nimport Geocoder from 'react-map-gl-geocoder'\r\nimport 'react-map-gl-geocoder/dist/mapbox-gl-geocoder.css'\r\nimport axios from 'axios'\r\nimport { API_SERVICE, MAP_STYLE, MAP_TOKEN } from '../URI'\r\nimport HotspotTable from '../components/hotspot/HotspotTable'\r\nimport {\r\n    createHotspot,\r\n    getHotspots,\r\n    getAdminHotspots,\r\n} from '../store/actions/hotspot'\r\nimport { getGroups } from '../store/actions/group'\r\nimport { useNavigate } from 'react-router'\r\nimport { useSubscription } from '../hooks/useSubscription'\r\nimport { getSubscriptionDetails } from '../utils/getSubscriptionDetails'\r\n\r\nconst ITEM_HEIGHT = 48\r\nconst ITEM_PADDING_TOP = 8\r\nconst MenuProps = {\r\n    PaperProps: {\r\n        style: {\r\n            maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n            width: 250,\r\n        },\r\n    },\r\n}\r\n\r\nconst ManageHotspots = () => {\r\n    const mapRef = useRef()\r\n    const [hotspotName, setHotspotName] = useState('')\r\n    const [selectedGroups, setSelectedGroups] = useState([])\r\n    const [selectedGroupsNames, setSelectedGroupsNames] = useState([])\r\n    // const [groups, setGroups] = useState([])\r\n    const [location, setLocation] = useState('')\r\n    const [lat, setlat] = useState(28.6077159025)\r\n    const [long, setlong] = useState(77.224249103)\r\n    const [zipCode, setZipCode] = useState(0)\r\n    const [viewport, setViewport] = useState({\r\n        width: '100%',\r\n        height: 400,\r\n        latitude: 28.6077159025,\r\n        longitude: 77.224249103,\r\n        zoom: 15,\r\n    })\r\n    const [selectedHotspot, setSelectedHotspot] = useState({})\r\n    const [dialogOpen, setDialogOpen] = useState(false)\r\n    const [addHotspotDialog, setAddHotspotDialog] = useState(false)\r\n    // snackbar states\r\n    const [snackOpen, setSnackOpen] = useState(false)\r\n    const [successMsg, setSuccessMsg] = useState(null)\r\n    const [errorMsg, setErrorMsg] = useState(null)\r\n    // map states\r\n    const [allViewport, setAllViewport] = useState({\r\n        width: '100%',\r\n        height: '100%',\r\n        latitude: 28.52,\r\n        longitude: 77.402,\r\n        zoom: 10,\r\n    })\r\n    const [load, setLoad] = useState(false)\r\n    const [selected, setSelected] = useState(false)\r\n    const [selectedLat, setSelectedLat] = useState(null)\r\n    const [selectedLong, setSelectedLong] = useState(null)\r\n    const [locationData, setLocationData] = useState({})\r\n\r\n    // subscription state\r\n    const [subscription, setSubscription] = useState(null)\r\n\r\n    const dispatch = useDispatch()\r\n    const hotspots = useSelector((state) => state.hotspots)\r\n    const { hotspotList, success, error } = hotspots\r\n    const groups = useSelector((state) => state.groups)\r\n    const { groupList } = groups\r\n\r\n    const userData = localStorage.getItem('userData')\r\n        ? JSON.parse(localStorage.getItem('userData'))\r\n        : null\r\n\r\n    const adminData = localStorage.getItem('adminData')\r\n        ? JSON.parse(localStorage.getItem('adminData'))\r\n        : null\r\n\r\n    const { state } = useSubscription()\r\n\r\n    useEffect(() => {\r\n        const fetchSubDetail = async () => {\r\n            const details = await getSubscriptionDetails(state)\r\n            setSubscription(details)\r\n        }\r\n\r\n        fetchSubDetail()\r\n    }, [])\r\n\r\n    useEffect(async () => {\r\n        if (userData !== null) {\r\n            dispatch(getGroups(userData?.uid))\r\n        }\r\n    }, [dispatch])\r\n\r\n    useEffect(() => {\r\n        if (success) {\r\n            setSuccessMsg(success)\r\n            setSnackOpen(true)\r\n        }\r\n\r\n        if (error) {\r\n            setErrorMsg(error)\r\n            setSnackOpen(true)\r\n        }\r\n    }, [success, error])\r\n\r\n    useEffect(async () => {\r\n        if (adminData === null && userData !== null) {\r\n            dispatch(getHotspots(userData.uid))\r\n        }\r\n        if (adminData !== null && userData !== null) {\r\n            const { data } = await axios.get(\r\n                `${API_SERVICE}/get/admin/${adminData.email}`\r\n            )\r\n            dispatch(\r\n                getAdminHotspots({\r\n                    createdBy: userData.uid,\r\n                    adminGroups: data.groups,\r\n                })\r\n            )\r\n        }\r\n    }, [dispatch])\r\n\r\n    useEffect(async () => {\r\n        setLoad(true)\r\n        axios\r\n            .get(`${API_SERVICE}/getlatlong/${selectedLat}/${selectedLong}`)\r\n            .then((response) => {\r\n                console.log(response)\r\n                setLocationData(response.data)\r\n                setLoad(false)\r\n            })\r\n            .catch((err) => console.log(err))\r\n    }, [selectedLat, selectedLong])\r\n\r\n    const handleViewportChange = useCallback(\r\n        (newViewport) => setViewport(newViewport),\r\n        []\r\n    )\r\n\r\n    const handleGeocoderViewportChange = useCallback((newViewport) => {\r\n        const geocoderDefaultOverrides = { transitionDuration: 1000 }\r\n\r\n        getLatLong(newViewport.latitude, newViewport.longitude)\r\n\r\n        return handleViewportChange({\r\n            ...newViewport,\r\n            ...geocoderDefaultOverrides,\r\n        })\r\n    }, [])\r\n\r\n    const handleSnackClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return\r\n        }\r\n\r\n        setSnackOpen(false)\r\n        setErrorMsg(null)\r\n        setSuccessMsg(null)\r\n    }\r\n\r\n    const getLatLong = async (latitude, longitude) => {\r\n        axios\r\n            .get(`${API_SERVICE}/getlatlong/${latitude}/${longitude}`)\r\n            .then((res) => {\r\n                setLocation(res.data.formattedAddress)\r\n                setZipCode(res.data.zipcode)\r\n            })\r\n            .catch((errorMsg) => {\r\n                console.log(errorMsg)\r\n            })\r\n    }\r\n\r\n    const saveHotspot = () => {\r\n        if (subscription === null) {\r\n            setErrorMsg(\r\n                'You do not have any subscription. Please choose a plan'\r\n            )\r\n            setSnackOpen(true)\r\n            return\r\n        } else if (hotspotList.length === subscription.hotspotCount) {\r\n            setErrorMsg(\r\n                'You have used your hotspot quota. Please upgrade your subscription'\r\n            )\r\n            setSnackOpen(true)\r\n            return\r\n        } else if (hotspotName.length < 3) {\r\n            setErrorMsg('Hotspot name must be atleast 3 characters')\r\n            setSnackOpen(true)\r\n            return\r\n        }\r\n\r\n        const body = {\r\n            hotspotName,\r\n            groups: selectedGroups,\r\n            createdBy: userData.uid,\r\n            location: {\r\n                latitude: Number(lat.toPrecision(6)),\r\n                longitude: Number(long.toPrecision(6)),\r\n                zipCode,\r\n            },\r\n        }\r\n\r\n        dispatch(createHotspot(body))\r\n        setAddHotspotDialog(false)\r\n        setHotspotName('')\r\n        setSelectedGroups([])\r\n        setLocation('')\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n        const {\r\n            target: { value },\r\n        } = event\r\n        setSelectedGroups(typeof value === 'string' ? value.split(',') : value)\r\n\r\n        const arr = groupList.filter((x) => value.includes(x._id))\r\n        setSelectedGroupsNames(arr.map((x) => x.groupName))\r\n    }\r\n\r\n    const toggleEditHotspotDialog = (item) => {\r\n        if (dialogOpen) {\r\n            setDialogOpen(false)\r\n        } else {\r\n            setSelectedHotspot(item)\r\n            setDialogOpen(true)\r\n        }\r\n    }\r\n\r\n    const handleAddDialogClose = () => {\r\n        setHotspotName('')\r\n        setSelectedGroups([])\r\n        setSelectedGroupsNames([])\r\n        setLocation('')\r\n        setAddHotspotDialog(false)\r\n    }\r\n\r\n    return (\r\n        <Box sx={{ width: '100%', p: 4, height: '100%' }}>\r\n            <h2>Manage Hotspots</h2>\r\n\r\n            <Grid container spacing={2} sx={{ height: '100%' }}>\r\n                <Grid item xs={12} md={6}>\r\n                    <Box\r\n                        sx={{\r\n                            width: '100%',\r\n                            display: 'flex',\r\n                            justifyContent: 'flex-end',\r\n                            flexDirection: 'row',\r\n                            gap: 2,\r\n                        }}\r\n                    >\r\n                        <Button\r\n                            variant='contained'\r\n                            sx={{\r\n                                py: 1.2,\r\n                            }}\r\n                            onClick={() => setAddHotspotDialog(true)}\r\n                        >\r\n                            Add New Hotspot\r\n                        </Button>\r\n                    </Box>\r\n\r\n                    <Box sx={{ my: 5 }}>\r\n                        <HotspotTable\r\n                            successMsg={setSuccessMsg}\r\n                            errorMsg={setErrorMsg}\r\n                            open={setSnackOpen}\r\n                            toggleEditHotspotDialog={toggleEditHotspotDialog}\r\n                        />\r\n                    </Box>\r\n                </Grid>\r\n                <Grid item xs={12} md={6} sx={{ height: '100' }}>\r\n                    <ReactMapGL\r\n                        {...allViewport}\r\n                        mapboxApiAccessToken={MAP_TOKEN}\r\n                        mapStyle={MAP_STYLE}\r\n                        onViewportChange={(nextViewport) =>\r\n                            setAllViewport(nextViewport)\r\n                        }\r\n                    >\r\n                        {hotspotList.map((hotspot) => (\r\n                            <Marker\r\n                                key={hotspot._id}\r\n                                latitude={hotspot.location.latitude}\r\n                                longitude={hotspot.location.longitude}\r\n                            >\r\n                                <button\r\n                                    className='marker-btn'\r\n                                    onMouseEnter={(e) => {\r\n                                        e.preventDefault()\r\n                                        setSelected(true)\r\n                                        setSelectedLat(\r\n                                            hotspot.location.latitude\r\n                                        )\r\n                                        setSelectedLong(\r\n                                            hotspot.location.longitude\r\n                                        )\r\n                                    }}\r\n                                    onMouseLeave={(e) => {\r\n                                        e.preventDefault()\r\n                                        setSelected(false)\r\n                                    }}\r\n                                >\r\n                                    <img\r\n                                        alt='Image'\r\n                                        src='https://www.nbp.co.uk/Content/Images/uploaded/contact-branch-details.png'\r\n                                    />\r\n                                </button>\r\n                            </Marker>\r\n                        ))}\r\n                        {selected ? (\r\n                            <Popup\r\n                                latitude={selectedLat}\r\n                                longitude={selectedLong}\r\n                                onClose={() => {\r\n                                    setSelected(false)\r\n                                    setSelectedLat(0)\r\n                                    setSelectedLong(0)\r\n                                }}\r\n                            >\r\n                                <div>\r\n                                    {load ? (\r\n                                        <p>Fetching Location ...</p>\r\n                                    ) : (\r\n                                        <p>{locationData.formattedAddress}</p>\r\n                                    )}\r\n                                </div>\r\n                            </Popup>\r\n                        ) : null}\r\n                    </ReactMapGL>\r\n                </Grid>\r\n            </Grid>\r\n\r\n            {/* add hotspot dialog */}\r\n            <Dialog open={addHotspotDialog} onClose={handleAddDialogClose}>\r\n                <DialogTitle sx={{ fontSize: 22 }}>Add New Hotspot</DialogTitle>\r\n                <DialogContent sx={{ width: 600 }}>\r\n                    <form noValidate style={{ marginBottom: '20px' }}>\r\n                        <TextField\r\n                            variant='outlined'\r\n                            margin='normal'\r\n                            fullWidth\r\n                            id='hotspotName'\r\n                            label='Hotspot Name'\r\n                            name='hotspotName'\r\n                            autoFocus\r\n                            value={hotspotName}\r\n                            onChange={(e) => setHotspotName(e.target.value)}\r\n                        />\r\n\r\n                        <FormControl\r\n                            margin='normal'\r\n                            fullWidth\r\n                            variant='outlined'\r\n                        >\r\n                            <InputLabel id='device-group'>\r\n                                Select Group\r\n                            </InputLabel>\r\n                            <Select\r\n                                labelId='device-group'\r\n                                label='Select Group'\r\n                                value={selectedGroups}\r\n                                onChange={handleChange}\r\n                                multiple\r\n                                renderValue={() =>\r\n                                    selectedGroupsNames.join(', ')\r\n                                }\r\n                                MenuProps={MenuProps}\r\n                            >\r\n                                {groupList.map((item) => (\r\n                                    <MenuItem key={item._id} value={item._id}>\r\n                                        <Checkbox\r\n                                            checked={\r\n                                                selectedGroups.indexOf(\r\n                                                    item._id\r\n                                                ) > -1\r\n                                            }\r\n                                        />\r\n                                        <ListItemText\r\n                                            primary={item.groupName}\r\n                                        />\r\n                                    </MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </FormControl>\r\n\r\n                        <TextField\r\n                            variant='outlined'\r\n                            margin='normal'\r\n                            fullWidth\r\n                            id='location'\r\n                            label='Set Location'\r\n                            name='location'\r\n                            value={location}\r\n                            onChange={(e) => {}}\r\n                        />\r\n                    </form>\r\n                    <ReactMapGL\r\n                        {...viewport}\r\n                        ref={mapRef}\r\n                        mapboxApiAccessToken={MAP_TOKEN}\r\n                        mapStyle={MAP_STYLE}\r\n                        onViewportChange={(nextViewport) =>\r\n                            setViewport(nextViewport)\r\n                        }\r\n                        onClick={async (e) => {\r\n                            setlat(e.lngLat[1])\r\n                            setlong(e.lngLat[0])\r\n                            getLatLong(e.lngLat[1], e.lngLat[0])\r\n                        }}\r\n                    >\r\n                        <Geocoder\r\n                            mapRef={mapRef}\r\n                            onViewportChange={handleGeocoderViewportChange}\r\n                            mapboxApiAccessToken={MAP_TOKEN}\r\n                            position='top-left'\r\n                            marker={true}\r\n                            reverseGeocode={true}\r\n                        />\r\n                        <Marker key='1' latitude={lat} longitude={long}>\r\n                            <button className='marker-btn'>\r\n                                <img\r\n                                    alt='Image'\r\n                                    src='https://www.nbp.co.uk/Content/Images/uploaded/contact-branch-details.png'\r\n                                />\r\n                            </button>\r\n                        </Marker>\r\n                    </ReactMapGL>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleAddDialogClose}>Cancel</Button>\r\n                    <Button onClick={() => saveHotspot()}>Save Hotspot</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            {/* Dialog to Edit the Hotspot */}\r\n            <EditHotspotDialogForm\r\n                open={dialogOpen}\r\n                setDialogOpen={setDialogOpen}\r\n                selectedHotspot={selectedHotspot}\r\n                trackingGroups={groupList}\r\n                setSnackOpen={setSnackOpen}\r\n                setSuccessMsg={setSuccessMsg}\r\n                setErrorMsg={setErrorMsg}\r\n            />\r\n\r\n            {successMsg !== null && (\r\n                <Snackbar\r\n                    open={snackOpen}\r\n                    autoHideDuration={4000}\r\n                    onClose={handleSnackClose}\r\n                    anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n                >\r\n                    <Alert\r\n                        onClose={handleSnackClose}\r\n                        severity='success'\r\n                        variant='filled'\r\n                        sx={{ width: '100%' }}\r\n                    >\r\n                        {successMsg}\r\n                    </Alert>\r\n                </Snackbar>\r\n            )}\r\n            {errorMsg !== null && (\r\n                <Snackbar\r\n                    open={snackOpen}\r\n                    autoHideDuration={4000}\r\n                    onClose={handleSnackClose}\r\n                    anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n                >\r\n                    <Alert\r\n                        onClose={handleSnackClose}\r\n                        severity='error'\r\n                        variant='filled'\r\n                        sx={{ width: '100%' }}\r\n                    >\r\n                        {errorMsg}\r\n                    </Alert>\r\n                </Snackbar>\r\n            )}\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default ManageHotspots\r\n","import React, { useState } from 'react'\r\nimport { TextField, Button, Box, CircularProgress } from '@mui/material'\r\nimport { makeStyles } from '@material-ui/styles'\r\nimport { auth } from '../../Firebase/index'\r\nimport {\r\n    updatePassword,\r\n    reauthenticateWithCredential,\r\n    EmailAuthProvider,\r\n} from 'firebase/auth'\r\n\r\nconst SecuritySetting = (props) => {\r\n    const { open, success, error } = props\r\n\r\n    const [currentPassword, setCurrentPassword] = useState('')\r\n    const [newPassword, setNewPassword] = useState('')\r\n\r\n    const [isUpdating, setIsUpdating] = useState(false)\r\n\r\n    const userData = localStorage.getItem('userData')\r\n        ? JSON.parse(localStorage.getItem('userData'))\r\n        : null\r\n\r\n    const update = async () => {\r\n        try {\r\n            setIsUpdating(true)\r\n            const user = auth.currentUser\r\n\r\n            const credential = EmailAuthProvider.credential(\r\n                userData.email,\r\n                currentPassword\r\n            )\r\n\r\n            reauthenticateWithCredential(user, credential)\r\n                .then(() => {\r\n                    updatePassword(user, newPassword)\r\n                        .then(() => {\r\n                            success('Password updated successfully')\r\n                            open(true)\r\n                            setNewPassword('')\r\n                            setCurrentPassword('')\r\n                            setIsUpdating(false)\r\n                        })\r\n                        .catch((err) => {\r\n                            const errorCode = err.code\r\n                            const errorMessage = err.message\r\n                            error(`${errorCode} ${errorMessage}`)\r\n                            open(true)\r\n                            setIsUpdating(false)\r\n                        })\r\n                })\r\n                .catch((err) => {\r\n                    const errorCode = err.code\r\n                    const errorMessage = err.message\r\n                    error(`${errorCode} ${errorMessage}`)\r\n                    open(true)\r\n                    setIsUpdating(false)\r\n                })\r\n        } catch (err) {\r\n            error(err)\r\n            open(true)\r\n            setIsUpdating(false)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Box>\r\n            <form noValidate>\r\n                <TextField\r\n                    variant='outlined'\r\n                    margin='normal'\r\n                    fullWidth\r\n                    id='password'\r\n                    label='Current Password'\r\n                    name='password'\r\n                    autoComplete='name'\r\n                    value={currentPassword}\r\n                    onChange={(e) => setCurrentPassword(e.target.value)}\r\n                />\r\n                <TextField\r\n                    variant='outlined'\r\n                    margin='normal'\r\n                    fullWidth\r\n                    id='password'\r\n                    label='New Password'\r\n                    name='password'\r\n                    autoComplete='name'\r\n                    value={newPassword}\r\n                    onChange={(e) => setNewPassword(e.target.value)}\r\n                />\r\n                <Button\r\n                    sx={{ py: 1.2, px: 4, fontSize: 15, mt: 2 }}\r\n                    variant='contained'\r\n                    onClick={() => update()}\r\n                    startIcon={\r\n                        isUpdating && (\r\n                            <CircularProgress size={20} color='inherit' />\r\n                        )\r\n                    }\r\n                >\r\n                    Update Password\r\n                </Button>\r\n            </form>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default SecuritySetting\r\n","import React, { useState, useEffect } from 'react'\r\nimport {\r\n    Box,\r\n    Grid,\r\n    TextField,\r\n    Button,\r\n    Avatar,\r\n    IconButton,\r\n    CircularProgress,\r\n    Snackbar,\r\n    Alert,\r\n} from '@mui/material'\r\nimport { makeStyles } from '@mui/styles'\r\n\r\nimport PhotoCamera from '@mui/icons-material/PhotoCamera'\r\nimport { storage, db } from '../Firebase'\r\nimport { ref, uploadBytesResumable, getDownloadURL } from 'firebase/storage'\r\nimport { updateDoc, doc } from 'firebase/firestore'\r\nimport SecuritySetting from '../components/settings/SecuritySetting'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n}))\r\n\r\nconst Profile = () => {\r\n    const classes = useStyles()\r\n\r\n    const [firstName, setFirstName] = useState('')\r\n    const [lastName, setLastName] = useState('')\r\n    const [companyName, setCompanyName] = useState('')\r\n\r\n    const [profilePhoto, setProfilePhoto] = useState('')\r\n    const [previewUrl, setPreviewUrl] = useState(null)\r\n    const [selectedFile, setSelectedFile] = useState(null)\r\n    const [isUpdating, setIsUpdating] = useState(false)\r\n    // snackbar states\r\n    const [snackOpen, setSnackOpen] = useState(false)\r\n    const [success, setSuccess] = useState(null)\r\n    const [error, setError] = useState(null)\r\n\r\n    const userData = localStorage.getItem('userData')\r\n        ? JSON.parse(localStorage.getItem('userData'))\r\n        : null\r\n\r\n    useEffect(() => {\r\n        if (userData !== null) {\r\n            setProfilePhoto(userData.profilePhoto)\r\n            setFirstName(userData.firstName)\r\n            setCompanyName(userData.companyName)\r\n            setLastName(userData.lastName)\r\n        }\r\n    }, [])\r\n\r\n    const handleSnackClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return\r\n        }\r\n\r\n        setSnackOpen(false)\r\n        setError(null)\r\n        setSuccess(null)\r\n    }\r\n\r\n    const updateProfileHandler = async () => {\r\n        try {\r\n            setIsUpdating(true)\r\n            await uploaProfilPhoto()\r\n                .then(async (photo) => {\r\n                    const userRef = doc(db, 'trackerWebUser', userData.uid)\r\n                    await updateDoc(userRef, {\r\n                        firstName,\r\n                        lastName,\r\n                        companyName,\r\n                        profilePhoto: photo,\r\n                    }).then(() => {\r\n                        const data = {\r\n                            firstName,\r\n                            lastName,\r\n                            companyName,\r\n                            profilePhoto: photo,\r\n                            uid: userData.uid,\r\n                            createdAt: userData.createdAt,\r\n                            email: userData.email,\r\n                        }\r\n                        localStorage.setItem('userData', JSON.stringify(data))\r\n                        setSuccess('Profile updated successfully')\r\n                        setSnackOpen(true)\r\n                        setSelectedFile(null)\r\n                        setPreviewUrl(null)\r\n                        setProfilePhoto(photo)\r\n                        setIsUpdating(false)\r\n                    })\r\n                })\r\n                .catch((error) => {\r\n                    setError(error.message)\r\n                    setSnackOpen(true)\r\n                    setIsUpdating(false)\r\n                })\r\n        } catch (err) {\r\n            setError(err.message)\r\n            setSnackOpen(true)\r\n            setIsUpdating(false)\r\n        }\r\n    }\r\n\r\n    const uploaProfilPhoto = async () => {\r\n        console.log(previewUrl, profilePhoto, selectedFile)\r\n        return new Promise((resolve) => {\r\n            if (previewUrl === null) {\r\n                resolve(userData.profilePhoto)\r\n            }\r\n\r\n            const storageRef = ref(\r\n                storage,\r\n                `superAdmin/profile/${userData.uid}`\r\n            )\r\n            const uploadTask = uploadBytesResumable(storageRef, selectedFile)\r\n\r\n            uploadTask.on(\r\n                'state_changed',\r\n                (snapshot) => {\r\n                    const progress =\r\n                        (snapshot.bytesTransferred / snapshot.totalBytes) * 100\r\n                    console.log('Upload is ' + progress + '% done')\r\n                    switch (snapshot.state) {\r\n                        case 'paused':\r\n                            console.log('Upload is paused')\r\n                            break\r\n                        case 'running':\r\n                            console.log('Upload is running')\r\n                            break\r\n                    }\r\n                },\r\n                (error) => {\r\n                    console.log(error.message)\r\n                },\r\n                () => {\r\n                    getDownloadURL(uploadTask.snapshot.ref).then(\r\n                        (downloadUrl) => {\r\n                            resolve(downloadUrl)\r\n                        }\r\n                    )\r\n                }\r\n            )\r\n        })\r\n    }\r\n\r\n    const fileSelectHandler = (e) => {\r\n        const selected = e.target.files[0]\r\n        if (selected) {\r\n            setSelectedFile(selected)\r\n\r\n            let src = URL.createObjectURL(selected)\r\n            setPreviewUrl(src)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Box\r\n            sx={{\r\n                width: '100%',\r\n                p: 4,\r\n                display: 'flex',\r\n                justifyContent: 'center',\r\n            }}\r\n        >\r\n            <Box sx={{ width: '70%' }}>\r\n                <Grid container spacing={2}>\r\n                    <Grid\r\n                        item\r\n                        md={5}\r\n                        sx={{\r\n                            display: 'flex',\r\n                            justifyContent: 'center',\r\n                            alignItems: 'center',\r\n                            flexDirection: 'column',\r\n                        }}\r\n                    >\r\n                        <Avatar\r\n                            src={\r\n                                previewUrl === null ? profilePhoto : previewUrl\r\n                            }\r\n                            alt='profiile photo'\r\n                            sx={{ my: 1.5, width: 200, height: 200 }}\r\n                        />\r\n\r\n                        <IconButton\r\n                            component='label'\r\n                            sx={{ width: 50, height: 50 }}\r\n                        >\r\n                            <PhotoCamera />\r\n                            <input\r\n                                type='file'\r\n                                hidden\r\n                                onChange={fileSelectHandler}\r\n                                accept='image/*'\r\n                            />\r\n                        </IconButton>\r\n                    </Grid>\r\n                    <Grid item md={7}>\r\n                        <form className={classes.form} noValidate>\r\n                            <TextField\r\n                                variant='outlined'\r\n                                margin='normal'\r\n                                fullWidth\r\n                                id='firstName'\r\n                                label='First Name'\r\n                                name='firstName'\r\n                                autoComplete='name'\r\n                                autoFocus\r\n                                value={firstName}\r\n                                onChange={(e) => setFirstName(e.target.value)}\r\n                            />\r\n                            <TextField\r\n                                variant='outlined'\r\n                                margin='normal'\r\n                                fullWidth\r\n                                id='lastName'\r\n                                label='Last Name'\r\n                                name='lastName'\r\n                                autoComplete='name'\r\n                                value={lastName}\r\n                                onChange={(e) => setLastName(e.target.value)}\r\n                            />\r\n                            <TextField\r\n                                variant='outlined'\r\n                                margin='normal'\r\n                                fullWidth\r\n                                id='email'\r\n                                label='Company Name'\r\n                                name='companyName'\r\n                                autoComplete='text'\r\n                                value={companyName}\r\n                                onChange={(e) => setCompanyName(e.target.value)}\r\n                            />\r\n\r\n                            <Button\r\n                                variant='contained'\r\n                                onClick={() => updateProfileHandler()}\r\n                                sx={{\r\n                                    py: 1.2,\r\n                                    px: 4,\r\n                                    fontSize: 15,\r\n                                    mt: 2,\r\n                                    mb: 4,\r\n                                }}\r\n                                startIcon={\r\n                                    isUpdating && (\r\n                                        <CircularProgress\r\n                                            size={20}\r\n                                            color='inherit'\r\n                                        />\r\n                                    )\r\n                                }\r\n                            >\r\n                                Update Profile\r\n                            </Button>\r\n                        </form>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container spacing={2}>\r\n                    <Grid item md={5}></Grid>\r\n                    <Grid item md={7}>\r\n                        <SecuritySetting\r\n                            open={setSnackOpen}\r\n                            success={setSuccess}\r\n                            error={setError}\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n            </Box>\r\n\r\n            {success !== null && (\r\n                <Snackbar\r\n                    open={snackOpen}\r\n                    autoHideDuration={4000}\r\n                    onClose={handleSnackClose}\r\n                    anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n                >\r\n                    <Alert\r\n                        onClose={handleSnackClose}\r\n                        variant='filled'\r\n                        severity='success'\r\n                        sx={{ width: '100%' }}\r\n                    >\r\n                        {success}\r\n                    </Alert>\r\n                </Snackbar>\r\n            )}\r\n            {error !== null && (\r\n                <Snackbar\r\n                    open={snackOpen}\r\n                    autoHideDuration={4000}\r\n                    onClose={handleSnackClose}\r\n                    anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n                >\r\n                    <Alert\r\n                        onClose={handleSnackClose}\r\n                        variant='filled'\r\n                        severity='error'\r\n                        sx={{ width: '100%' }}\r\n                    >\r\n                        {error}\r\n                    </Alert>\r\n                </Snackbar>\r\n            )}\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Profile\r\n","import React from 'react'\r\nimport {\r\n  Box,\r\n  FormControl,\r\n  InputLabel,\r\n  MenuItem,\r\n  Select,\r\n  TextField,\r\n} from '@mui/material'\r\nimport { AdapterDateFns } from '@mui/x-date-pickers/AdapterDateFns'\r\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider'\r\nimport { TimePicker } from '@mui/x-date-pickers/TimePicker'\r\nimport { useEffect } from 'react'\r\n\r\nconst ScheduleForm = (props) => {\r\n  const week = [\r\n    'Sunday',\r\n    'Monday',\r\n    'Tuesday',\r\n    'Wednesday',\r\n    'Thursday',\r\n    'Friday',\r\n    'Saturday',\r\n  ]\r\n\r\n  return (\r\n    <Box>\r\n      <Box\r\n        sx={{ display: 'flex', justifyContent: 'space-between', gap: 2, mt: 2 }}\r\n      >\r\n        <FormControl fullWidth variant=\"outlined\">\r\n          <InputLabel id=\"Start Day\">Start Day</InputLabel>\r\n          <Select\r\n            labelId=\"Start Day\"\r\n            value={props.startDay}\r\n            onChange={(e) => props.setStartDay(e.target.value)}\r\n            label=\"Start Day\"\r\n          >\r\n            {week.map((day, i) => (\r\n              <MenuItem key={i} value={day} sx={{ p: 1.2 }}>\r\n                {day}\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n\r\n        <FormControl fullWidth variant=\"outlined\">\r\n          <InputLabel id=\"End Day\">End Day</InputLabel>\r\n          <Select\r\n            labelId=\"Emd Day\"\r\n            value={props.endDay}\r\n            onChange={(e) => props.setEndDay(e.target.value)}\r\n            label=\"End Day\"\r\n          >\r\n            {week.map((day, i) => (\r\n              <MenuItem key={i} value={day} sx={{ p: 1.2 }}>\r\n                {day}\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n      </Box>\r\n\r\n      <Box\r\n        sx={{\r\n          height: '58px',\r\n          display: 'flex',\r\n          mb: 2,\r\n          mt: 3,\r\n          gap: 2,\r\n        }}\r\n      >\r\n        <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n          <TimePicker\r\n            label=\"Start Time\"\r\n            value={props.time.startTime}\r\n            onChange={(newValue) => {\r\n              props.setTime({ ...props.time, startTime: newValue })\r\n            }}\r\n            renderInput={(params) => <TextField {...params} />}\r\n          />\r\n        </LocalizationProvider>\r\n        <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n          <TimePicker\r\n            label=\"End Time\"\r\n            value={props.time.endTime}\r\n            onChange={(newValue) => {\r\n              props.setTime({ ...props.time, endTime: newValue })\r\n            }}\r\n            renderInput={(params) => <TextField {...params} />}\r\n          />\r\n        </LocalizationProvider>\r\n      </Box>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default React.memo(ScheduleForm)\r\n","import React, { useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  TextField,\r\n  DialogActions,\r\n  Button,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  ListItemText,\r\n  Checkbox,\r\n} from '@mui/material'\r\nimport ScheduleForm from './ScheduleForm'\r\nimport { createGroup } from '../../store/actions/group'\r\n\r\nconst ITEM_HEIGHT = 48\r\nconst ITEM_PADDING_TOP = 8\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250,\r\n    },\r\n  },\r\n}\r\n\r\nconst CreateGroupDialog = (props) => {\r\n  const [groupName, setGroupName] = useState('')\r\n  //const [adminList, setAdminList] = useState([])\r\n  const [selectedAdmins, setSelectedAdmins] = useState([])\r\n  const [selectedAdminsNames, setSelectedAdminsNames] = useState([])\r\n\r\n  const [startDay, setStartDay] = useState('Sunday')\r\n  const [endDay, setEndDay] = useState('Sunday')\r\n  const [time, setTime] = useState({\r\n    startTime: new Date(),\r\n    endTime: new Date(),\r\n  })\r\n\r\n  const dispatch = useDispatch()\r\n  const admins = useSelector((state) => state.admins)\r\n  const adminList = admins.adminList\r\n\r\n  const saveGroup = () => {\r\n    if (props.subscription === null) {\r\n      props.setError('You do not have any subscription. Please choose a plan')\r\n      props.setSnackOpen(true)\r\n      return\r\n    } else if (props.groupList.length === props.subscription.groupCount) {\r\n      props.setError(\r\n        'You have used your groups quota. Please upgrade your subscription',\r\n      )\r\n      props.setSnackOpen(true)\r\n      return\r\n    } else if (groupName.length < 4) {\r\n      props.setError('Group name must be atleast 4 characters')\r\n      props.setSnackOpen(true)\r\n      return\r\n    }\r\n\r\n    const body = {\r\n      groupName: groupName,\r\n      createdBy: props.createdBy.id,\r\n      members: [],\r\n      hotspot: [],\r\n      admins: selectedAdmins,\r\n      schedule: {\r\n        startDay,\r\n        endDay,\r\n        time: time,\r\n      },\r\n    }\r\n    dispatch(createGroup(body))\r\n    props.setOpen(false)\r\n    setSelectedAdmins([])\r\n    setGroupName('')\r\n    setStartDay('')\r\n    setEndDay('')\r\n    setTime({ startTime: new Date(), endTime: new Date() })\r\n  }\r\n\r\n  const handleChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event\r\n    setSelectedAdmins(typeof value === 'string' ? value.split(',') : value)\r\n\r\n    const arr = adminList.filter((x) => value.includes(x._id))\r\n    setSelectedAdminsNames(arr.map((x) => x.fullName))\r\n  }\r\n\r\n  const handleClose = () => {\r\n    setSelectedAdmins([])\r\n    setGroupName('')\r\n    setStartDay('')\r\n    setEndDay('')\r\n    setTime({ startTime: new Date(), endTime: new Date() })\r\n    props.setOpen(false)\r\n  }\r\n\r\n  return (\r\n    <Dialog open={props.open} onClose={() => props.setOpen(false)}>\r\n      <DialogTitle sx={{ fontSize: 22 }}>Add New Group</DialogTitle>\r\n      <DialogContent sx={{ width: 500 }}>\r\n        <TextField\r\n          autoFocus\r\n          margin=\"normal\"\r\n          id=\"groupName\"\r\n          label=\"Group Name\"\r\n          type=\"text\"\r\n          fullWidth\r\n          variant=\"outlined\"\r\n          value={groupName}\r\n          onChange={(e) => setGroupName(e.target.value)}\r\n        />\r\n        {props.subscription !== null &&\r\n          props.subscription.groupCount === Number.MAX_VALUE && (\r\n            <FormControl margin=\"normal\" fullWidth variant=\"outlined\">\r\n              <InputLabel id=\"admin\">Select Admin</InputLabel>\r\n              <Select\r\n                labelId=\"admin\"\r\n                label=\"Select Admin\"\r\n                value={selectedAdmins}\r\n                onChange={handleChange}\r\n                multiple\r\n                renderValue={() => selectedAdminsNames.join(', ')}\r\n                MenuProps={MenuProps}\r\n              >\r\n                {adminList.map((item) => (\r\n                  <MenuItem key={item._id} value={item._id}>\r\n                    <Checkbox checked={selectedAdmins.indexOf(item._id) > -1} />\r\n                    <ListItemText primary={item.fullName} />\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n          )}\r\n\r\n        <ScheduleForm\r\n          startDay={startDay}\r\n          endDay={endDay}\r\n          setStartDay={setStartDay}\r\n          setEndDay={setEndDay}\r\n          time={time}\r\n          setTime={setTime}\r\n        />\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleClose}>Cancel</Button>\r\n        <Button onClick={() => saveGroup()}>Create</Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n}\r\n\r\nexport default React.memo(CreateGroupDialog)\r\n","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {\r\n  Box,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Paper,\r\n  Typography,\r\n  IconButton,\r\n} from '@mui/material'\r\nimport DeleteIcon from '@mui/icons-material/Delete'\r\nimport Create from '@mui/icons-material/Create'\r\nimport moment from 'moment'\r\nimport { getGroups, deleteGroup } from '../../store/actions/group'\r\n\r\nconst GroupTable = (props) => {\r\n  const userData = sessionStorage.getItem('userData')\r\n    ? JSON.parse(sessionStorage.getItem('userData'))\r\n    : null\r\n\r\n  const adminData = sessionStorage.getItem('adminData')\r\n    ? JSON.parse(sessionStorage.getItem('adminData'))\r\n    : null\r\n\r\n  const dispatch = useDispatch()\r\n  const groups = useSelector((state) => state.groups)\r\n  const { groupList } = groups\r\n\r\n  useEffect(async () => {\r\n    if (userData !== null && adminData === null) {\r\n      dispatch(getGroups(userData.uid))\r\n    }\r\n\r\n    // if (adminData !== null && userData !== null) {\r\n    //   const { data } = await axios.get(\r\n    //     `${API_SERVICE}/get/admin/${adminData.email}`,\r\n    //   )\r\n\r\n    // }\r\n  }, [dispatch, userData])\r\n\r\n  const removeGroup = (row) => {\r\n    dispatch(deleteGroup(row._id))\r\n  }\r\n\r\n  return (\r\n    <Box>\r\n      <TableContainer component={Paper}>\r\n        <Table aria-label=\"simple table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell sx={{ fontWeight: 600 }}>Group Name</TableCell>\r\n              <TableCell sx={{ fontWeight: 600 }} align=\"center\">\r\n                Admins\r\n              </TableCell>\r\n              <TableCell sx={{ fontWeight: 600 }} align=\"center\">\r\n                Schedule\r\n              </TableCell>\r\n              <TableCell sx={{ fontWeight: 600 }} align=\"center\">\r\n                Hotspot/s Added\r\n              </TableCell>\r\n              <TableCell sx={{ fontWeight: 600 }} align=\"center\">\r\n                Created At\r\n              </TableCell>\r\n              <TableCell sx={{ fontWeight: 600 }} align=\"center\">\r\n                Modified At\r\n              </TableCell>\r\n              <TableCell sx={{ fontWeight: 600 }} align=\"center\">\r\n                Action\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {groupList.map((row) => (\r\n              <TableRow\r\n                key={row._id}\r\n                sx={{\r\n                  '&:last-child td, &:last-child th': { border: 0 },\r\n                }}\r\n              >\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                  {row.groupName}\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  {row.admins.length === 0 && <>---</>}\r\n                  {row.admins.map((x, i) => (\r\n                    <React.Fragment key={i}>\r\n                      {`${x.fullName}\r\n                        ${i !== row.admins.length - 1 ? ', ' : ''}`}\r\n                    </React.Fragment>\r\n                  ))}\r\n                </TableCell>\r\n\r\n                {Object.entries(row.schedule).length !== 0 ? (\r\n                  <TableCell align=\"center\">\r\n                    {`${row.schedule.startDay} - ${\r\n                      row.schedule.endDay\r\n                    } , ${moment(row.schedule.time.startTime).format(\r\n                      'hh:mm a',\r\n                    )} - ${moment(row.schedule.time.endTime).format(\r\n                      'hh:mm a',\r\n                    )}`}\r\n                  </TableCell>\r\n                ) : (\r\n                  <TableCell align=\"center\">---</TableCell>\r\n                )}\r\n\r\n                <TableCell align=\"center\">\r\n                  {row.hotspots.length === 0 && <>---</>}\r\n                  {row.hotspots.map((x, i) => (\r\n                    <React.Fragment key={i}>\r\n                      {`${x.hotspotName}\r\n                        ${i !== row.hotspots.length - 1 ? ' , ' : ''}`}\r\n                    </React.Fragment>\r\n                  ))}\r\n                </TableCell>\r\n\r\n                <TableCell align=\"center\" component=\"th\" scope=\"row\">\r\n                  {moment(row.createdAt).format('DD MMMM YYYY')}\r\n                </TableCell>\r\n\r\n                <TableCell align=\"center\" component=\"th\" scope=\"row\">\r\n                  {moment(row.updatedAt).format('DD MMMM YYYY')}\r\n                </TableCell>\r\n\r\n                <TableCell align=\"center\" sx={{ p: 0 }}>\r\n                  <IconButton\r\n                    color=\"success\"\r\n                    onClick={() => {\r\n                      props.setSelectedGroup(row)\r\n                      props.setEditOpen(true)\r\n                    }}\r\n                  >\r\n                    <Create />\r\n                  </IconButton>\r\n                  <IconButton color=\"error\" onClick={() => removeGroup(row)}>\r\n                    <DeleteIcon />\r\n                  </IconButton>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default React.memo(GroupTable)\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  TextField,\r\n  Checkbox,\r\n  ListItemText,\r\n  MenuItem,\r\n} from '@mui/material'\r\nimport ScheduleForm from './ScheduleForm'\r\nimport { updateGroup } from '../../store/actions/group'\r\n\r\nconst ITEM_HEIGHT = 48\r\nconst ITEM_PADDING_TOP = 8\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250,\r\n    },\r\n  },\r\n}\r\n\r\nconst EditGroupDialog = (props) => {\r\n  const [groupName, setGroupName] = useState('')\r\n  const [selectedAdmins, setSelectedAdmins] = useState([])\r\n  const [selectedAdminsNames, setSelectedAdminsNames] = useState([])\r\n\r\n  const [startDay, setStartDay] = useState('Sunday')\r\n  const [endDay, setEndDay] = useState('Saturday')\r\n  const [time, setTime] = useState({\r\n    startTime: new Date(),\r\n    endTime: new Date(),\r\n  })\r\n  const admins = useSelector((state) => state.admins)\r\n  const { adminList } = admins\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(props.selectedGroup).length !== 0) {\r\n      setGroupName(props.selectedGroup.groupName)\r\n      setStartDay(props.selectedGroup.schedule.startDay)\r\n      setEndDay(props.selectedGroup.schedule.endDay)\r\n      setTime(props.selectedGroup.schedule.time)\r\n\r\n      const arr = props.selectedGroup.admins.map((x) => x._id)\r\n      setSelectedAdmins(arr)\r\n    }\r\n  }, [props.selectedGroup])\r\n\r\n  const handleChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event\r\n    setSelectedAdmins(typeof value === 'string' ? value.split(',') : value)\r\n    const arr = adminList.filter((x) => value.includes(x._id))\r\n    setSelectedAdminsNames(arr.map((x) => x.fullName))\r\n  }\r\n\r\n  const updateDetails = () => {\r\n    if (groupName.length < 3) {\r\n      props.setError('Group Name length must be atleast 3')\r\n      props.setSnackOpen(true)\r\n      return\r\n    } else if (admins.length === 0) {\r\n      props.setError('Select atleast one admin')\r\n      props.setSnackOpen(true)\r\n      return\r\n    }\r\n\r\n    const body = {\r\n      _id: props.selectedGroup._id,\r\n      groupName,\r\n      admins: selectedAdmins,\r\n      schedule: {\r\n        startDay,\r\n        endDay,\r\n        time: time,\r\n      },\r\n    }\r\n\r\n    dispatch(updateGroup(body))\r\n\r\n    props.setOpen(false)\r\n    setGroupName('')\r\n    setSelectedAdmins([])\r\n    setStartDay('Sunday')\r\n    setEndDay('Sunday')\r\n    setTime(['10:00', '11:00'])\r\n  }\r\n\r\n  return (\r\n    <Dialog open={props.open} onClose={() => props.setOpen(false)}>\r\n      <DialogTitle sx={{ fontSize: 22 }}>Edit Group Details</DialogTitle>\r\n      <DialogContent sx={{ width: 500 }}>\r\n        <TextField\r\n          autoFocus\r\n          margin=\"normal\"\r\n          id=\"groupName\"\r\n          label=\"Group Name\"\r\n          type=\"text\"\r\n          fullWidth\r\n          variant=\"outlined\"\r\n          value={groupName}\r\n          onChange={(e) => setGroupName(e.target.value)}\r\n        />\r\n        {props.subscription !== null &&\r\n          props.subscription.groupCount === Number.MAX_VALUE && (\r\n            <FormControl margin=\"normal\" fullWidth variant=\"outlined\">\r\n              <InputLabel id=\"admin\">Select Admin</InputLabel>\r\n              <Select\r\n                labelId=\"admin\"\r\n                label=\"Select Admin\"\r\n                value={selectedAdmins}\r\n                onChange={handleChange}\r\n                multiple\r\n                renderValue={() => selectedAdminsNames.join(', ')}\r\n                MenuProps={MenuProps}\r\n              >\r\n                {adminList.map((item) => (\r\n                  <MenuItem key={item._id} value={item._id}>\r\n                    <Checkbox checked={selectedAdmins.indexOf(item._id) > -1} />\r\n                    <ListItemText primary={item.fullName} />\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n          )}\r\n\r\n        <ScheduleForm\r\n          startDay={startDay}\r\n          endDay={endDay}\r\n          setStartDay={setStartDay}\r\n          setEndDay={setEndDay}\r\n          time={time}\r\n          setTime={setTime}\r\n        />\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={() => props.setOpen(false)}>Cancel</Button>\r\n        <Button onClick={() => updateDetails()}>Update</Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n}\r\n\r\nexport default React.memo(EditGroupDialog)\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useNavigate } from 'react-router'\r\nimport { Alert, Box, Button, Snackbar, Stack } from '@mui/material'\r\nimport CreateGroupDialog from '../components/groups/CreateGroupDialog'\r\nimport GroupTable from '../components/groups/GroupTable'\r\nimport EditGroupDialog from '../components/groups/EditGroupDialog'\r\nimport { useSubscription } from '../hooks/useSubscription'\r\nimport { getSubscriptionDetails } from '../utils/getSubscriptionDetails'\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst ManageGroups = () => {\r\n    const [createOpen, setCreateOpen] = useState(false)\r\n    const [editOpen, setEditOpen] = useState(false)\r\n    const [selectedGroup, setSelectedGroup] = useState({})\r\n    const [snackOpen, setSnackOpen] = useState(false)\r\n    const [successMsg, setSuccessMsg] = useState(null)\r\n    const [errorMsg, setErrorMsg] = useState(null)\r\n\r\n    // subscription state\r\n    const [subscription, setSubscription] = useState(null)\r\n\r\n    const userData = localStorage.getItem('userData')\r\n        ? JSON.parse(localStorage.getItem('userData'))\r\n        : null\r\n\r\n    const groups = useSelector((state) => state.groups)\r\n    const { groupList } = groups\r\n    let { success, error } = groups\r\n\r\n    const { state } = useSubscription()\r\n\r\n    useEffect(() => {\r\n        const fetchSubDetail = async () => {\r\n            const details = await getSubscriptionDetails(state)\r\n            setSubscription(details)\r\n        }\r\n\r\n        fetchSubDetail()\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        success = null\r\n        error = null\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (success) {\r\n            setSuccessMsg(success)\r\n            setSnackOpen(true)\r\n        } else if (error) {\r\n            setErrorMsg(error)\r\n            setSnackOpen(true)\r\n        }\r\n    }, [success, error])\r\n\r\n    const handleSnackClose = () => {\r\n        setSnackOpen(false)\r\n        success = null\r\n        error = null\r\n        setSuccessMsg(null)\r\n        setErrorMsg(null)\r\n    }\r\n\r\n    return (\r\n        <Box sx={{ p: 4 }}>\r\n            <h2>Manage Groups</h2>\r\n\r\n            <Stack\r\n                direction='row'\r\n                justifyContent='flex-end'\r\n                rowGap={2}\r\n                columnGap={2}\r\n            >\r\n                <Button\r\n                    variant='contained'\r\n                    sx={{ py: 1.2 }}\r\n                    onClick={() => setCreateOpen(true)}\r\n                >\r\n                    Create New Group\r\n                </Button>\r\n            </Stack>\r\n\r\n            <Box sx={{ my: 5 }}>\r\n                <GroupTable\r\n                    success={setSuccessMsg}\r\n                    error={setErrorMsg}\r\n                    open={setSnackOpen}\r\n                    setSelectedGroup={setSelectedGroup}\r\n                    setEditOpen={setEditOpen}\r\n                />\r\n            </Box>\r\n\r\n            <Box>\r\n                <CreateGroupDialog\r\n                    open={createOpen}\r\n                    setOpen={setCreateOpen}\r\n                    createdBy={{\r\n                        id: userData?.uid,\r\n                        fullName: `${userData?.firstName} ${userData?.lastName}`,\r\n                    }}\r\n                    subscription={subscription}\r\n                    setError={setErrorMsg}\r\n                    setSnackOpen={setSnackOpen}\r\n                    setSuccess={setSuccessMsg}\r\n                    groupList={groupList}\r\n                />\r\n            </Box>\r\n\r\n            <Box>\r\n                <EditGroupDialog\r\n                    open={editOpen}\r\n                    setOpen={setEditOpen}\r\n                    selectedGroup={selectedGroup}\r\n                    setError={setErrorMsg}\r\n                    setSnackOpen={setSnackOpen}\r\n                    setSuccess={setSuccessMsg}\r\n                    createdBy={{\r\n                        id: userData?.uid,\r\n                        fullName: `${userData?.firstName} ${userData?.lastName}`,\r\n                    }}\r\n                    subscription={subscription}\r\n                />\r\n            </Box>\r\n\r\n            {successMsg && (\r\n                <Snackbar\r\n                    open={snackOpen}\r\n                    autoHideDuration={4000}\r\n                    onClose={handleSnackClose}\r\n                    anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n                >\r\n                    <Alert\r\n                        onClose={handleSnackClose}\r\n                        severity='success'\r\n                        sx={{ width: '100%' }}\r\n                        variant='filled'\r\n                    >\r\n                        {successMsg}\r\n                    </Alert>\r\n                </Snackbar>\r\n            )}\r\n            {errorMsg && (\r\n                <Snackbar\r\n                    open={snackOpen}\r\n                    autoHideDuration={4000}\r\n                    onClose={handleSnackClose}\r\n                    anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n                >\r\n                    <Alert\r\n                        onClose={handleSnackClose}\r\n                        severity='error'\r\n                        sx={{ width: '100%' }}\r\n                        variant='filled'\r\n                    >\r\n                        {errorMsg}\r\n                    </Alert>\r\n                </Snackbar>\r\n            )}\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default ManageGroups\r\n","import React from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport {\r\n  Box,\r\n  IconButton,\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n} from '@mui/material'\r\nimport { Delete, Create } from '@mui/icons-material'\r\nimport moment from 'moment'\r\nimport { deleteAdmin } from '../../store/actions/admin'\r\n\r\nconst AdminTable = (props) => {\r\n  const admins = useSelector((state) => state.admins)\r\n  const { adminList } = admins\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const removeAdmin = (admin) => {\r\n    dispatch(deleteAdmin(admin._id))\r\n  }\r\n\r\n  return (\r\n    <Box>\r\n      <TableContainer component={Paper} sx={{ boxShadow: 6 }}>\r\n        <Table sx={{ minWidth: 650 }}>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell className=\"table-head\">Admin Name</TableCell>\r\n              <TableCell className=\"table-head\" align=\"center\">\r\n                Admin Id\r\n              </TableCell>\r\n              <TableCell className=\"table-head\" align=\"center\">\r\n                Email\r\n              </TableCell>\r\n              <TableCell className=\"table-head\" align=\"center\">\r\n                Groups\r\n              </TableCell>\r\n              <TableCell sx={{ fontWeight: 600 }} align=\"center\">\r\n                Created At\r\n              </TableCell>\r\n              <TableCell sx={{ fontWeight: 600 }} align=\"center\">\r\n                Modified At\r\n              </TableCell>\r\n              <TableCell className=\"table-head\" align=\"center\">\r\n                Action\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {adminList.map((row) => (\r\n              <TableRow\r\n                key={row._id}\r\n                sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n              >\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                  {row.fullName}\r\n                </TableCell>\r\n                <TableCell align=\"center\">{row._id}</TableCell>\r\n                <TableCell align=\"center\">{row.email}</TableCell>\r\n                <TableCell align=\"center\">\r\n                  {row.groups.length === 0 && <>---</>}\r\n                  {row.groups.map((x, i) => (\r\n                    <React.Fragment key={i}>{`${x.groupName} ${\r\n                      i !== row.groups.length - 1 ? ', ' : ''\r\n                    }`}</React.Fragment>\r\n                  ))}\r\n                </TableCell>\r\n\r\n                <TableCell align=\"center\">\r\n                  {moment(row.createdAt).format('DD MMM YYYY')}\r\n                </TableCell>\r\n\r\n                <TableCell align=\"center\">\r\n                  {moment(row.updatedAt).format('DD MMMM YYYY')}\r\n                </TableCell>\r\n\r\n                <TableCell align=\"center\" sx={{ p: 0 }}>\r\n                  <IconButton\r\n                    color=\"success\"\r\n                    onClick={() => {\r\n                      props.setSelectedAdmin(row)\r\n                      props.setShowEditDialog(true)\r\n                    }}\r\n                  >\r\n                    <Create />\r\n                  </IconButton>\r\n                  <IconButton color=\"error\" onClick={() => removeAdmin(row)}>\r\n                    <Delete />\r\n                  </IconButton>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default React.memo(AdminTable)\r\n","import React, { useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport {\r\n  Box,\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  TextField,\r\n} from '@mui/material'\r\nimport { auth } from '../../Firebase'\r\nimport { createUserWithEmailAndPassword } from 'firebase/auth'\r\nimport { createAdmin, sendEmail } from '../../store/actions/admin'\r\n\r\nconst CreateAdminDialog = (props) => {\r\n  const [fullName, setFullName] = useState('')\r\n  const [email, setEmail] = useState('')\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const isValidEmail = (enteredEmail) => {\r\n    const emailRegex = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n\r\n    return emailRegex.test(enteredEmail)\r\n  }\r\n\r\n  function verifyData() {\r\n    if (props.subscription === null) {\r\n      props.error('You do not have any subscription. Please choose a plan')\r\n      props.setSnackOpen(true)\r\n      return false\r\n    } else if (props.adminList.length === props.subscription.adminCount) {\r\n      props.error(\r\n        'You have used your admin quota. Please upgrade your subscription',\r\n      )\r\n      props.setSnackOpen(true)\r\n      return false\r\n    } else if (fullName === '') {\r\n      props.error('Full Name cannot be empty')\r\n      props.setSnackOpen(true)\r\n      return false\r\n    } else if (email === '' || !isValidEmail(email)) {\r\n      props.error('Invalid Email')\r\n      props.setSnackOpen(true)\r\n      return false\r\n    }\r\n\r\n    return true\r\n  }\r\n\r\n  const saveAdmin = async () => {\r\n    if (verifyData()) {\r\n      const password = '#123321#'\r\n\r\n      await createUserWithEmailAndPassword(auth, email, password)\r\n        .then(async function (user) {\r\n          const body = {\r\n            fullName,\r\n            email,\r\n            groups: [],\r\n            createdBy: props.createdBy,\r\n            passwordChanged: false,\r\n          }\r\n          dispatch(createAdmin(body))\r\n\r\n          const emailData = {\r\n            to: email,\r\n            subject: 'GPS Tracker login credentials for admin',\r\n            body: `Your login credentials are:\\nemail: ${email}\\npassword: ${password}`,\r\n          }\r\n          dispatch(sendEmail(emailData))\r\n\r\n          setFullName('')\r\n          setEmail('')\r\n          props.setOpen(false)\r\n        })\r\n        .catch((error) => {\r\n          const errorCode = error.code\r\n          const errorMessage = error.message\r\n          alert(errorCode, errorMessage)\r\n        })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Dialog open={props.open} onClose={() => props.setOpen(false)}>\r\n      <DialogTitle sx={{ fontSize: 16 }}>Create New Admin</DialogTitle>\r\n      <DialogContent sx={{ width: 500 }}>\r\n        <TextField\r\n          fullWidth\r\n          autoFocus\r\n          margin=\"normal\"\r\n          id=\"name\"\r\n          label=\"Full Name\"\r\n          type=\"name\"\r\n          variant=\"outlined\"\r\n          value={fullName}\r\n          onChange={(e) => setFullName(e.target.value)}\r\n        />\r\n        <TextField\r\n          fullWidth\r\n          margin=\"normal\"\r\n          id=\"email\"\r\n          label=\"Email Address\"\r\n          type=\"email\"\r\n          variant=\"outlined\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n        />\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={() => props.setOpen(false)}>Cancel</Button>\r\n        <Button onClick={() => saveAdmin()}>Create</Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n}\r\n\r\nexport default React.memo(CreateAdminDialog)\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  TextField,\r\n} from '@mui/material'\r\nimport {\r\n  arrayRemove,\r\n  arrayUnion,\r\n  doc,\r\n  Timestamp,\r\n  updateDoc,\r\n} from 'firebase/firestore'\r\nimport { db } from '../../Firebase'\r\nimport { updateAdmin } from '../../store/actions/admin'\r\n\r\nconst EditAdminDialog = (props) => {\r\n  const [fullName, setFullName] = useState('')\r\n  const [email, setEmail] = useState('')\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    setFullName(props.selectedAdmin.fullName)\r\n    setEmail(props.selectedAdmin.email)\r\n  }, [props.selectedAdmin])\r\n\r\n  const isValidEmail = (enteredEmail) => {\r\n    const emailRegex = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n\r\n    return emailRegex.test(enteredEmail)\r\n  }\r\n\r\n  function verifyData() {\r\n    if (fullName === '') {\r\n      props.error('Full Name cannot be empty')\r\n      props.setSnackOpen(true)\r\n      return false\r\n    } else if (email === '' || !isValidEmail(email)) {\r\n      props.error('Invalid Email')\r\n      props.setSnackOpen(true)\r\n      return false\r\n    }\r\n\r\n    return true\r\n  }\r\n\r\n  const updateData = () => {\r\n    if (verifyData()) {\r\n      const body = {\r\n        _id: props.selectedAdmin._id,\r\n        fullName,\r\n        email,\r\n      }\r\n\r\n      dispatch(updateAdmin(body))\r\n      props.success('Admin Updated')\r\n      props.setSnackOpen(true)\r\n      setFullName('')\r\n      setEmail('')\r\n      props.setOpen(false)\r\n    }\r\n  }\r\n\r\n  //   console.log(props.selectedAdmin)\r\n\r\n  // const updateAdmin = async () => {\r\n  //   if (verifyData()) {\r\n  //     const ref = doc(db, 'trackerAdmin', props.selectedAdmin.id)\r\n  //     await updateDoc(ref, {\r\n  //       fullName,\r\n  //       email,\r\n  //       modifiedAt: Timestamp.now(),\r\n  //     })\r\n  //       .then(() => {\r\n  //         props.selectedAdmin.groups.forEach(async ({ id }) => {\r\n  //           const ref = doc(db, 'trackingGroups', id)\r\n  //           await updateDoc(ref, {\r\n  //             admins: arrayRemove({\r\n  //               fullName: props.selectedAdmin.fullName,\r\n  //               id: props.selectedAdmin.id,\r\n  //             }),\r\n  //           }).catch((error) => console.log(error))\r\n  //         })\r\n\r\n  //         props.selectedAdmin.groups.forEach(async ({ id }) => {\r\n  //           const ref = doc(db, 'trackingGroups', id)\r\n  //           await updateDoc(ref, {\r\n  //             admins: arrayUnion({\r\n  //               fullName: fullName,\r\n  //               id: props.selectedAdmin.id,\r\n  //             }),\r\n  //           }).catch((error) => console.log(error))\r\n  //         })\r\n  //       })\r\n  //       .then(() => {\r\n  //         props.success('Admin Updated')\r\n  //         props.setSnackOpen(true)\r\n  //         setFullName('')\r\n  //         setEmail('')\r\n  //         props.setOpen(false)\r\n  //       })\r\n  //       .catch((err) => console.log(err.message))\r\n  //   }\r\n  // }\r\n\r\n  return (\r\n    <Dialog open={props.open} onClose={() => props.setOpen(false)}>\r\n      <DialogTitle sx={{ fontSize: 18 }}>Edit Admin Details</DialogTitle>\r\n      <DialogContent sx={{ width: 500 }}>\r\n        <TextField\r\n          fullWidth\r\n          autoFocus\r\n          margin=\"normal\"\r\n          id=\"name\"\r\n          label=\"Full Name\"\r\n          type=\"name\"\r\n          variant=\"outlined\"\r\n          value={fullName}\r\n          onChange={(e) => setFullName(e.target.value)}\r\n        />\r\n        <TextField\r\n          fullWidth\r\n          margin=\"normal\"\r\n          id=\"email\"\r\n          label=\"Email Address\"\r\n          type=\"email\"\r\n          variant=\"outlined\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n        />\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={() => props.setOpen(false)}>Cancel</Button>\r\n        <Button onClick={() => updateData()}>Update</Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n}\r\n\r\nexport default React.memo(EditAdminDialog)\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useNavigate } from 'react-router'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { Alert, Box, Button, Snackbar, Stack } from '@mui/material'\r\nimport AdminTable from '../components/admins/AdminTable'\r\nimport CreateAdminDialog from '../components/admins/CreateAdminDialog'\r\nimport EditAdminDialog from '../components/admins/EditAdminDialog'\r\nimport { getAdmins } from '../store/actions/admin'\r\nimport { useSubscription } from '../hooks/useSubscription'\r\nimport { getSubscriptionDetails } from '../utils/getSubscriptionDetails'\r\n\r\nconst ManageAdmins = () => {\r\n    const [showCreateDialog, setShowCreateDialog] = useState(false)\r\n    const [showEditDialog, setShowEditDialog] = useState(false)\r\n    const [selectedAdmin, setSelectedAdmin] = useState({})\r\n    //const [adminList, setAdminList] = useState([])\r\n    const [snackOpen, setSnackOpen] = useState(false)\r\n    const [successMsg, setSuccess] = useState(null)\r\n    const [errorMsg, setError] = useState(null)\r\n    // subscription state\r\n    const [subscription, setSubscription] = useState(null)\r\n\r\n    const authToken = localStorage.getItem('authToken')\r\n    const userData = localStorage.getItem('userData')\r\n        ? JSON.parse(localStorage.getItem('userData'))\r\n        : null\r\n\r\n    const dispatch = useDispatch()\r\n    const navigate = useNavigate()\r\n    const { state } = useSubscription()\r\n\r\n    const admins = useSelector((state) => state.admins)\r\n    const { adminList, success, error } = admins\r\n\r\n    useEffect(() => {\r\n        const fetchSubDetail = async () => {\r\n            const details = await getSubscriptionDetails(state)\r\n            setSubscription(details)\r\n        }\r\n\r\n        fetchSubDetail()\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (userData !== null) {\r\n            dispatch(getAdmins(userData.uid))\r\n        }\r\n    }, [dispatch])\r\n\r\n    const handleCreateDialog = () => {\r\n        if (showCreateDialog) {\r\n            setShowCreateDialog(false)\r\n        } else {\r\n            setShowCreateDialog(true)\r\n        }\r\n    }\r\n\r\n    const handleSnackClose = (_, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return\r\n        }\r\n\r\n        setSnackOpen(false)\r\n        setError(null)\r\n        setSuccess(null)\r\n    }\r\n\r\n    return (\r\n        <Box sx={{ p: 4 }}>\r\n            <h2>Manage Admins</h2>\r\n\r\n            <Stack direction='row' justifyContent='flex-end'>\r\n                <Button\r\n                    variant='contained'\r\n                    sx={{ py: 1.2 }}\r\n                    onClick={handleCreateDialog}\r\n                >\r\n                    Create Admin\r\n                </Button>\r\n            </Stack>\r\n\r\n            <Box sx={{ my: 5 }}>\r\n                <AdminTable\r\n                    setSelectedAdmin={setSelectedAdmin}\r\n                    setShowEditDialog={setShowEditDialog}\r\n                />\r\n            </Box>\r\n\r\n            <Box>\r\n                <CreateAdminDialog\r\n                    open={showCreateDialog}\r\n                    setOpen={setShowCreateDialog}\r\n                    createdBy={userData?.uid}\r\n                    setSnackOpen={setSnackOpen}\r\n                    success={setSuccess}\r\n                    error={setError}\r\n                    adminList={adminList}\r\n                    subscription={subscription}\r\n                />\r\n            </Box>\r\n\r\n            <Box>\r\n                <EditAdminDialog\r\n                    open={showEditDialog}\r\n                    setOpen={setShowEditDialog}\r\n                    createdBy={userData?.uid}\r\n                    setSnackOpen={setSnackOpen}\r\n                    selectedAdmin={selectedAdmin}\r\n                    success={setSuccess}\r\n                    error={setError}\r\n                />\r\n            </Box>\r\n\r\n            {success !== null && (\r\n                <Snackbar\r\n                    open={snackOpen}\r\n                    autoHideDuration={4000}\r\n                    onClose={handleSnackClose}\r\n                    anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n                >\r\n                    <Alert\r\n                        onClose={handleSnackClose}\r\n                        severity='success'\r\n                        sx={{ width: '100%' }}\r\n                        variant='filled'\r\n                    >\r\n                        {successMsg}\r\n                    </Alert>\r\n                </Snackbar>\r\n            )}\r\n            {error !== null && (\r\n                <Snackbar\r\n                    open={snackOpen}\r\n                    autoHideDuration={4000}\r\n                    onClose={handleSnackClose}\r\n                    anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n                >\r\n                    <Alert\r\n                        onClose={handleSnackClose}\r\n                        severity='error'\r\n                        sx={{ width: '100%' }}\r\n                        variant='filled'\r\n                    >\r\n                        {errorMsg}\r\n                    </Alert>\r\n                </Snackbar>\r\n            )}\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default ManageAdmins\r\n","import React from 'react'\r\nimport {\r\n    Button,\r\n    Card,\r\n    Chip,\r\n    List,\r\n    ListItem,\r\n    ListItemIcon,\r\n    ListItemText,\r\n    Slider,\r\n    Stack,\r\n    Typography,\r\n    Box,\r\n} from '@mui/material'\r\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle'\r\n\r\nconst ProCard = (props) => {\r\n    const benefits = [\r\n        'Unlimited Hotspots',\r\n        'Unlimited Devices',\r\n        'Unlimited Groups',\r\n        'Unlimited Admins',\r\n        'Get Report of Unlimited Period',\r\n    ]\r\n    return (\r\n        <Card\r\n            className='pricing-card pro'\r\n            sx={{\r\n                boxShadow: 15,\r\n                py: 5,\r\n                px: 4,\r\n            }}\r\n        >\r\n            <Box>\r\n                <Stack\r\n                    spacing={2}\r\n                    direction='row'\r\n                    sx={{ mb: 1 }}\r\n                    alignItems='center'\r\n                    justifyContent='space-between'\r\n                >\r\n                    {/* <FavoriteBorderOutlinedIcon\r\n                                sx={{\r\n                                    fontSize: 50,\r\n                                }}\r\n                                htmlColor='#e91e63'\r\n                            /> */}\r\n\r\n                    <Typography\r\n                        variant='h1'\r\n                        sx={{ my: 2, fontSize: 40, color: 'white' }}\r\n                    >\r\n                        {`$${props.value}`}\r\n                    </Typography>\r\n                    {props.isCurrent && (\r\n                        <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                            <div\r\n                                style={{\r\n                                    width: '15px',\r\n                                    height: '15px',\r\n                                    backgroundColor: '#4CAF50',\r\n                                    borderRadius: '50%',\r\n                                }}\r\n                            ></div>\r\n                            <Typography\r\n                                variant='h4'\r\n                                sx={{ my: 2, color: '#4CAF50', ml: 1 }}\r\n                            >\r\n                                Active\r\n                            </Typography>\r\n                        </Box>\r\n                    )}\r\n                </Stack>\r\n                <Chip\r\n                    label='Pro Account'\r\n                    variant='outlined'\r\n                    className='chip'\r\n                    sx={{\r\n                        my: 2,\r\n                        color: '#fb8c00',\r\n                        border: '1.5px solid #fb8c00',\r\n                        width: '100%',\r\n                    }}\r\n                />\r\n\r\n                <Stack direction='row' justifyContent='space-between'>\r\n                    <Typography\r\n                        variant='h1'\r\n                        sx={{ my: 2, fontSize: 40, color: 'white' }}\r\n                    >\r\n                        $1{' '}\r\n                        <span\r\n                            style={{\r\n                                color: 'gray',\r\n                                fontSize: 15,\r\n                                textTransform: 'uppercase',\r\n                            }}\r\n                        >\r\n                            / user\r\n                        </span>\r\n                    </Typography>\r\n\r\n                    <Typography\r\n                        variant='h1'\r\n                        sx={{ my: 2, fontSize: 40, color: 'white' }}\r\n                    >\r\n                        {`${props.value}`}\r\n                    </Typography>\r\n                </Stack>\r\n\r\n                <Stack\r\n                    spacing={2}\r\n                    direction='row'\r\n                    sx={{ mb: 1 }}\r\n                    alignItems='center'\r\n                >\r\n                    <Typography variant='h5' color='white'>\r\n                        0\r\n                    </Typography>\r\n                    <Slider\r\n                        sx={{ color: 'whitesmoke' }}\r\n                        value={props.value}\r\n                        onChange={props.handleValueChange}\r\n                        max={1000}\r\n                    />\r\n                    <Typography variant='h5' color='white'>\r\n                        1000\r\n                    </Typography>\r\n                </Stack>\r\n\r\n                <List sx={{ my: 3 }}>\r\n                    {benefits.map((x) => (\r\n                        <ListItem disablePadding key={x}>\r\n                            <ListItemIcon>\r\n                                <CheckCircleIcon\r\n                                    htmlColor='#4CAF50'\r\n                                    sx={{ fontSize: 27, my: 0.5, ml: 0.5 }}\r\n                                />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={x} sx={{ color: 'white' }} />\r\n                        </ListItem>\r\n                    ))}\r\n                </List>\r\n            </Box>\r\n\r\n            <Button\r\n                className='pro-btn btn'\r\n                variant='contained'\r\n                //</Card>disabled={props.isCurrent}\r\n                sx={{\r\n                    py: 1.4,\r\n                    borderRadius: 25,\r\n                    boxShadow: 5,\r\n                }}\r\n                onClick={props.action}\r\n            >\r\n                Pay as you go\r\n            </Button>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default ProCard\r\n","import React from 'react'\r\nimport {\r\n    Button,\r\n    Card,\r\n    Chip,\r\n    List,\r\n    ListItem,\r\n    ListItemIcon,\r\n    ListItemText,\r\n    Slider,\r\n    Stack,\r\n    Typography,\r\n    Box,\r\n} from '@mui/material'\r\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle'\r\nimport CancelIcon from '@mui/icons-material/Cancel'\r\nimport FavoriteBorderOutlinedIcon from '@mui/icons-material/FavoriteBorderOutlined'\r\n\r\nconst FreeCard = (props) => {\r\n    const benefits = [\r\n        'Only 10 Hotspots',\r\n        'Unlimited Devices',\r\n        'Only 2 Groups',\r\n        'No Admins',\r\n        'Get Report of last 1 month',\r\n    ]\r\n    return (\r\n        <Card\r\n            className='pricing-card'\r\n            sx={{\r\n                py: 5,\r\n                px: 4,\r\n            }}\r\n        >\r\n            <Box>\r\n                <Stack\r\n                    spacing={2}\r\n                    direction='row'\r\n                    sx={{ mb: 1 }}\r\n                    alignItems='center'\r\n                    justifyContent='space-between'\r\n                >\r\n                    <Typography variant='h1' sx={{ my: 2, fontSize: 40 }}>\r\n                        $0\r\n                    </Typography>\r\n                    {props.isCurrent && (\r\n                        <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                            <div\r\n                                style={{\r\n                                    width: '15px',\r\n                                    height: '15px',\r\n                                    backgroundColor: 'green',\r\n                                    borderRadius: '50%',\r\n                                }}\r\n                            ></div>\r\n                            <Typography\r\n                                variant='h4'\r\n                                sx={{ my: 2, color: '#4CAF50', ml: 1 }}\r\n                            >\r\n                                Active\r\n                            </Typography>\r\n                        </Box>\r\n                    )}\r\n                </Stack>\r\n                <Chip\r\n                    label='Free Account'\r\n                    variant='outlined'\r\n                    className='chip'\r\n                    sx={{\r\n                        my: 2,\r\n                        color: '#e91e63',\r\n                        border: '1.5px solid #e91e63',\r\n                        width: '100%',\r\n                    }}\r\n                />\r\n                <Typography variant='h1' sx={{ my: 2, fontSize: 40 }}>\r\n                    $0{' '}\r\n                    <span\r\n                        style={{\r\n                            color: 'gray',\r\n                            fontSize: 15,\r\n                            textTransform: 'uppercase',\r\n                        }}\r\n                    >\r\n                        / user\r\n                    </span>\r\n                </Typography>\r\n\r\n                <List sx={{ my: 3, mt: 8 }}>\r\n                    {benefits.map((x, i) => (\r\n                        <ListItem key={i} disablePadding>\r\n                            <ListItemIcon>\r\n                                {i === 1 ? (\r\n                                    <CheckCircleIcon\r\n                                        htmlColor='#4CAF50'\r\n                                        sx={{ fontSize: 27, my: 0.5, ml: 0.5 }}\r\n                                    />\r\n                                ) : (\r\n                                    <CancelIcon\r\n                                        htmlColor='#e91e63'\r\n                                        sx={{ fontSize: 27, my: 0.5, ml: 0.5 }}\r\n                                    />\r\n                                )}\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={x} />\r\n                        </ListItem>\r\n                    ))}\r\n                </List>\r\n            </Box>\r\n\r\n            <Button\r\n                className='free-btn btn'\r\n                variant='outlined'\r\n                disabled={props.isCurrent}\r\n                sx={{\r\n                    py: 1.4,\r\n                    borderRadius: 25,\r\n                    boxShadow: 5,\r\n                }}\r\n                onClick={props.action}\r\n            >\r\n                Pick free plan\r\n            </Button>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default FreeCard\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useNavigate } from 'react-router'\r\nimport { Box, Typography, CircularProgress } from '@mui/material'\r\n\r\nimport ProCard from '../components/pricing/ProCard'\r\nimport FreeCard from '../components/pricing/FreeCard'\r\nimport { useSubscription } from '../hooks/useSubscription'\r\nimport axios from 'axios'\r\nimport { API_SERVICE } from '../URI'\r\n\r\nconst Pricing = () => {\r\n    const [quantity, setQuantity] = React.useState(500)\r\n    const [currentPlan, setCurrentPlan] = useState('')\r\n    const [prices, setPrices] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    const navigate = useNavigate()\r\n\r\n    const { state, dispatch } = useSubscription()\r\n    const customerId = state?.customerId\r\n\r\n    useEffect(() => {\r\n        if (state.subscriptions) {\r\n            let subscription\r\n\r\n            if (state.subscriptions.length !== 0) {\r\n                for (let sub of state?.subscriptions?.data) {\r\n                    if (sub.status === 'active') {\r\n                        subscription = sub\r\n                        break\r\n                    }\r\n                }\r\n\r\n                const plan = subscription ? subscription.plan.id : ''\r\n                const subQuantity = subscription ? subscription.quantity : 0\r\n\r\n                setCurrentPlan(plan)\r\n                setQuantity(subQuantity)\r\n            } else {\r\n                setCurrentPlan('')\r\n                setQuantity(0)\r\n            }\r\n        }\r\n    }, [state])\r\n\r\n    useEffect(() => {\r\n        const fetchPrices = async () => {\r\n            const { data } = await axios.get(\r\n                `${API_SERVICE}/subscription/config`\r\n            )\r\n\r\n            setPrices(data.prices)\r\n            setLoading(false)\r\n        }\r\n\r\n        fetchPrices()\r\n    }, [])\r\n\r\n    const handleValueChange = (_, newValue) => {\r\n        setQuantity(newValue)\r\n    }\r\n\r\n    const createSubscription = async (product, amount) => {\r\n        if (amount <= 0) {\r\n            alert('Please select atlest one user')\r\n            return\r\n        }\r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n            }\r\n            const body = {\r\n                customerId,\r\n                priceId: product.id,\r\n                quantity: amount,\r\n            }\r\n            const { data } = await axios.post(\r\n                `${API_SERVICE}/create/subscription`,\r\n                body,\r\n                config\r\n            )\r\n\r\n            console.log(data)\r\n            const { clientSecret } = data\r\n\r\n            if (!clientSecret) {\r\n                console.log('Cannot create Subscription')\r\n                dispatch({\r\n                    type: 'SELECT_PRODUCT',\r\n                    payload: {\r\n                        cart: { product, clientSecret },\r\n                    },\r\n                })\r\n                console.log('Here')\r\n\r\n                if (product.product.name === 'Free Plan') {\r\n                    window.location.reload()\r\n                }\r\n            } else {\r\n                dispatch({\r\n                    type: 'SELECT_PRODUCT',\r\n                    payload: {\r\n                        cart: { product, clientSecret },\r\n                    },\r\n                })\r\n\r\n                if (product.product.name === 'Free Plan') {\r\n                    window.location.reload()\r\n                }\r\n                navigate('/subscribe', { state: { quantity } })\r\n            }\r\n        } catch (error) {\r\n            console.log(error.message)\r\n        }\r\n    }\r\n\r\n    if (loading) {\r\n        return (\r\n            <Box\r\n                sx={{\r\n                    width: '100%',\r\n                    height: '100%',\r\n                    display: 'flex',\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                }}\r\n            >\r\n                <CircularProgress color='secondary' />\r\n            </Box>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Box sx={{ p: 2 }}>\r\n            <Box sx={{ mt: 2, mb: 5 }}>\r\n                <Typography variant='h2' sx={{ textAlign: 'center' }}>\r\n                    Choose your plan\r\n                </Typography>\r\n                <Typography\r\n                    vanriant='h6'\r\n                    sx={{\r\n                        textAlign: 'center',\r\n                        mt: 2,\r\n                        letterSpacing: 0.6,\r\n                        color: 'gray',\r\n                    }}\r\n                >\r\n                    Select one of our plans below as per your convenience\r\n                </Typography>\r\n            </Box>\r\n            <Box\r\n                className='card-container'\r\n                sx={{\r\n                    mt: 6,\r\n                }}\r\n            >\r\n                {prices.map((price) => (\r\n                    <Box key={price.id}>\r\n                        {price.product.name === 'Pro Plan' && (\r\n                            <ProCard\r\n                                value={quantity}\r\n                                handleValueChange={handleValueChange}\r\n                                isCurrent={currentPlan === price.id}\r\n                                action={() =>\r\n                                    createSubscription(price, quantity)\r\n                                }\r\n                            />\r\n                        )}\r\n                        {price.product.name === 'Free Plan' && (\r\n                            <FreeCard\r\n                                isCurrent={currentPlan === price.id}\r\n                                action={() => createSubscription(price, 1)}\r\n                            />\r\n                        )}\r\n                    </Box>\r\n                ))}\r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Pricing\r\n","import React, { useState } from 'react'\r\nimport { CardElement, PaymentElement } from '@stripe/react-stripe-js'\r\nimport Box from '@mui/material/Box'\r\nimport Card from '@mui/material/Card'\r\nimport CardActions from '@mui/material/CardActions'\r\nimport CardContent from '@mui/material/CardContent'\r\nimport Button from '@mui/material/Button'\r\nimport Typography from '@mui/material/Typography'\r\nimport { Grid, TextField } from '@mui/material'\r\nimport { useSubscription } from '../../hooks/useSubscription'\r\nimport ArrowBackIosNewOutlinedIcon from '@mui/icons-material/ArrowBackIosNewOutlined'\r\n\r\nfunction CardSection({ handleBack, handleSubmit, quantity }) {\r\n    const { state } = useSubscription()\r\n    console.log(state)\r\n\r\n    return (\r\n        <Box>\r\n            <Grid container spacing={3}>\r\n                <Grid item xs={12}>\r\n                    <h4>Enter Card Details</h4>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Box>\r\n                        <CardElement />\r\n                    </Box>\r\n                </Grid>\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n                <Box\r\n                    mt={5}\r\n                    alignItems='center'\r\n                    justifyContent='space-between'\r\n                    display='flex'\r\n                >\r\n                    <Button\r\n                        startIcon={<ArrowBackIosNewOutlinedIcon />}\r\n                        onClick={handleBack}\r\n                    >\r\n                        Go Back\r\n                    </Button>\r\n                    <Button\r\n                        type='submit'\r\n                        variant='contained'\r\n                        onClick={handleSubmit}\r\n                        sx={{ py: 1.2, fontSize: 14, px: '40px' }}\r\n                    >\r\n                        {`PAY  $${quantity}`}\r\n                    </Button>\r\n                </Box>\r\n            </Grid>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default CardSection\r\n","export const countries = [\r\n    { name: 'Afghanistan', code: 'AF' },\r\n    { name: 'Åland Islands', code: 'AX' },\r\n    { name: 'Albania', code: 'AL' },\r\n    { name: 'Algeria', code: 'DZ' },\r\n    { name: 'American Samoa', code: 'AS' },\r\n    { name: 'AndorrA', code: 'AD' },\r\n    { name: 'Angola', code: 'AO' },\r\n    { name: 'Anguilla', code: 'AI' },\r\n    { name: 'Antarctica', code: 'AQ' },\r\n    { name: 'Antigua and Barbuda', code: 'AG' },\r\n    { name: 'Argentina', code: 'AR' },\r\n    { name: 'Armenia', code: 'AM' },\r\n    { name: 'Aruba', code: 'AW' },\r\n    { name: 'Australia', code: 'AU' },\r\n    { name: 'Austria', code: 'AT' },\r\n    { name: 'Azerbaijan', code: 'AZ' },\r\n    { name: 'Bahamas', code: 'BS' },\r\n    { name: 'Bahrain', code: 'BH' },\r\n    { name: 'Bangladesh', code: 'BD' },\r\n    { name: 'Barbados', code: 'BB' },\r\n    { name: 'Belarus', code: 'BY' },\r\n    { name: 'Belgium', code: 'BE' },\r\n    { name: 'Belize', code: 'BZ' },\r\n    { name: 'Benin', code: 'BJ' },\r\n    { name: 'Bermuda', code: 'BM' },\r\n    { name: 'Bhutan', code: 'BT' },\r\n    { name: 'Bolivia', code: 'BO' },\r\n    { name: 'Bosnia and Herzegovina', code: 'BA' },\r\n    { name: 'Botswana', code: 'BW' },\r\n    { name: 'Bouvet Island', code: 'BV' },\r\n    { name: 'Brazil', code: 'BR' },\r\n    { name: 'British Indian Ocean Territory', code: 'IO' },\r\n    { name: 'Brunei Darussalam', code: 'BN' },\r\n    { name: 'Bulgaria', code: 'BG' },\r\n    { name: 'Burkina Faso', code: 'BF' },\r\n    { name: 'Burundi', code: 'BI' },\r\n    { name: 'Cambodia', code: 'KH' },\r\n    { name: 'Cameroon', code: 'CM' },\r\n    { name: 'Canada', code: 'CA' },\r\n    { name: 'Cape Verde', code: 'CV' },\r\n    { name: 'Cayman Islands', code: 'KY' },\r\n    { name: 'Central African Republic', code: 'CF' },\r\n    { name: 'Chad', code: 'TD' },\r\n    { name: 'Chile', code: 'CL' },\r\n    { name: 'China', code: 'CN' },\r\n    { name: 'Christmas Island', code: 'CX' },\r\n    { name: 'Cocos (Keeling) Islands', code: 'CC' },\r\n    { name: 'Colombia', code: 'CO' },\r\n    { name: 'Comoros', code: 'KM' },\r\n    { name: 'Congo', code: 'CG' },\r\n    { name: 'Congo, The Democratic Republic of the', code: 'CD' },\r\n    { name: 'Cook Islands', code: 'CK' },\r\n    { name: 'Costa Rica', code: 'CR' },\r\n    { name: \"Cote D'Ivoire\", code: 'CI' },\r\n    { name: 'Croatia', code: 'HR' },\r\n    { name: 'Cuba', code: 'CU' },\r\n    { name: 'Cyprus', code: 'CY' },\r\n    { name: 'Czech Republic', code: 'CZ' },\r\n    { name: 'Denmark', code: 'DK' },\r\n    { name: 'Djibouti', code: 'DJ' },\r\n    { name: 'Dominica', code: 'DM' },\r\n    { name: 'Dominican Republic', code: 'DO' },\r\n    { name: 'Ecuador', code: 'EC' },\r\n    { name: 'Egypt', code: 'EG' },\r\n    { name: 'El Salvador', code: 'SV' },\r\n    { name: 'Equatorial Guinea', code: 'GQ' },\r\n    { name: 'Eritrea', code: 'ER' },\r\n    { name: 'Estonia', code: 'EE' },\r\n    { name: 'Ethiopia', code: 'ET' },\r\n    { name: 'Falkland Islands (Malvinas)', code: 'FK' },\r\n    { name: 'Faroe Islands', code: 'FO' },\r\n    { name: 'Fiji', code: 'FJ' },\r\n    { name: 'Finland', code: 'FI' },\r\n    { name: 'France', code: 'FR' },\r\n    { name: 'French Guiana', code: 'GF' },\r\n    { name: 'French Polynesia', code: 'PF' },\r\n    { name: 'French Southern Territories', code: 'TF' },\r\n    { name: 'Gabon', code: 'GA' },\r\n    { name: 'Gambia', code: 'GM' },\r\n    { name: 'Georgia', code: 'GE' },\r\n    { name: 'Germany', code: 'DE' },\r\n    { name: 'Ghana', code: 'GH' },\r\n    { name: 'Gibraltar', code: 'GI' },\r\n    { name: 'Greece', code: 'GR' },\r\n    { name: 'Greenland', code: 'GL' },\r\n    { name: 'Grenada', code: 'GD' },\r\n    { name: 'Guadeloupe', code: 'GP' },\r\n    { name: 'Guam', code: 'GU' },\r\n    { name: 'Guatemala', code: 'GT' },\r\n    { name: 'Guernsey', code: 'GG' },\r\n    { name: 'Guinea', code: 'GN' },\r\n    { name: 'Guinea-Bissau', code: 'GW' },\r\n    { name: 'Guyana', code: 'GY' },\r\n    { name: 'Haiti', code: 'HT' },\r\n    { name: 'Heard Island and Mcdonald Islands', code: 'HM' },\r\n    { name: 'Holy See (Vatican City State)', code: 'VA' },\r\n    { name: 'Honduras', code: 'HN' },\r\n    { name: 'Hong Kong', code: 'HK' },\r\n    { name: 'Hungary', code: 'HU' },\r\n    { name: 'Iceland', code: 'IS' },\r\n    { name: 'India', code: 'IN' },\r\n    { name: 'Indonesia', code: 'ID' },\r\n    { name: 'Iran, Islamic Republic Of', code: 'IR' },\r\n    { name: 'Iraq', code: 'IQ' },\r\n    { name: 'Ireland', code: 'IE' },\r\n    { name: 'Isle of Man', code: 'IM' },\r\n    { name: 'Israel', code: 'IL' },\r\n    { name: 'Italy', code: 'IT' },\r\n    { name: 'Jamaica', code: 'JM' },\r\n    { name: 'Japan', code: 'JP' },\r\n    { name: 'Jersey', code: 'JE' },\r\n    { name: 'Jordan', code: 'JO' },\r\n    { name: 'Kazakhstan', code: 'KZ' },\r\n    { name: 'Kenya', code: 'KE' },\r\n    { name: 'Kiribati', code: 'KI' },\r\n    { name: \"Korea, Democratic People'S Republic of\", code: 'KP' },\r\n    { name: 'Korea, Republic of', code: 'KR' },\r\n    { name: 'Kuwait', code: 'KW' },\r\n    { name: 'Kyrgyzstan', code: 'KG' },\r\n    { name: \"Lao People'S Democratic Republic\", code: 'LA' },\r\n    { name: 'Latvia', code: 'LV' },\r\n    { name: 'Lebanon', code: 'LB' },\r\n    { name: 'Lesotho', code: 'LS' },\r\n    { name: 'Liberia', code: 'LR' },\r\n    { name: 'Libyan Arab Jamahiriya', code: 'LY' },\r\n    { name: 'Liechtenstein', code: 'LI' },\r\n    { name: 'Lithuania', code: 'LT' },\r\n    { name: 'Luxembourg', code: 'LU' },\r\n    { name: 'Macao', code: 'MO' },\r\n    { name: 'Macedonia, The Former Yugoslav Republic of', code: 'MK' },\r\n    { name: 'Madagascar', code: 'MG' },\r\n    { name: 'Malawi', code: 'MW' },\r\n    { name: 'Malaysia', code: 'MY' },\r\n    { name: 'Maldives', code: 'MV' },\r\n    { name: 'Mali', code: 'ML' },\r\n    { name: 'Malta', code: 'MT' },\r\n    { name: 'Marshall Islands', code: 'MH' },\r\n    { name: 'Martinique', code: 'MQ' },\r\n    { name: 'Mauritania', code: 'MR' },\r\n    { name: 'Mauritius', code: 'MU' },\r\n    { name: 'Mayotte', code: 'YT' },\r\n    { name: 'Mexico', code: 'MX' },\r\n    { name: 'Micronesia, Federated States of', code: 'FM' },\r\n    { name: 'Moldova, Republic of', code: 'MD' },\r\n    { name: 'Monaco', code: 'MC' },\r\n    { name: 'Mongolia', code: 'MN' },\r\n    { name: 'Montserrat', code: 'MS' },\r\n    { name: 'Morocco', code: 'MA' },\r\n    { name: 'Mozambique', code: 'MZ' },\r\n    { name: 'Myanmar', code: 'MM' },\r\n    { name: 'Namibia', code: 'NA' },\r\n    { name: 'Nauru', code: 'NR' },\r\n    { name: 'Nepal', code: 'NP' },\r\n    { name: 'Netherlands', code: 'NL' },\r\n    { name: 'Netherlands Antilles', code: 'AN' },\r\n    { name: 'New Caledonia', code: 'NC' },\r\n    { name: 'New Zealand', code: 'NZ' },\r\n    { name: 'Nicaragua', code: 'NI' },\r\n    { name: 'Niger', code: 'NE' },\r\n    { name: 'Nigeria', code: 'NG' },\r\n    { name: 'Niue', code: 'NU' },\r\n    { name: 'Norfolk Island', code: 'NF' },\r\n    { name: 'Northern Mariana Islands', code: 'MP' },\r\n    { name: 'Norway', code: 'NO' },\r\n    { name: 'Oman', code: 'OM' },\r\n    { name: 'Pakistan', code: 'PK' },\r\n    { name: 'Palau', code: 'PW' },\r\n    { name: 'Palestinian Territory, Occupied', code: 'PS' },\r\n    { name: 'Panama', code: 'PA' },\r\n    { name: 'Papua New Guinea', code: 'PG' },\r\n    { name: 'Paraguay', code: 'PY' },\r\n    { name: 'Peru', code: 'PE' },\r\n    { name: 'Philippines', code: 'PH' },\r\n    { name: 'Pitcairn', code: 'PN' },\r\n    { name: 'Poland', code: 'PL' },\r\n    { name: 'Portugal', code: 'PT' },\r\n    { name: 'Puerto Rico', code: 'PR' },\r\n    { name: 'Qatar', code: 'QA' },\r\n    { name: 'Reunion', code: 'RE' },\r\n    { name: 'Romania', code: 'RO' },\r\n    { name: 'Russian Federation', code: 'RU' },\r\n    { name: 'RWANDA', code: 'RW' },\r\n    { name: 'Saint Helena', code: 'SH' },\r\n    { name: 'Saint Kitts and Nevis', code: 'KN' },\r\n    { name: 'Saint Lucia', code: 'LC' },\r\n    { name: 'Saint Pierre and Miquelon', code: 'PM' },\r\n    { name: 'Saint Vincent and the Grenadines', code: 'VC' },\r\n    { name: 'Samoa', code: 'WS' },\r\n    { name: 'San Marino', code: 'SM' },\r\n    { name: 'Sao Tome and Principe', code: 'ST' },\r\n    { name: 'Saudi Arabia', code: 'SA' },\r\n    { name: 'Senegal', code: 'SN' },\r\n    { name: 'Serbia and Montenegro', code: 'CS' },\r\n    { name: 'Seychelles', code: 'SC' },\r\n    { name: 'Sierra Leone', code: 'SL' },\r\n    { name: 'Singapore', code: 'SG' },\r\n    { name: 'Slovakia', code: 'SK' },\r\n    { name: 'Slovenia', code: 'SI' },\r\n    { name: 'Solomon Islands', code: 'SB' },\r\n    { name: 'Somalia', code: 'SO' },\r\n    { name: 'South Africa', code: 'ZA' },\r\n    { name: 'South Georgia and the South Sandwich Islands', code: 'GS' },\r\n    { name: 'Spain', code: 'ES' },\r\n    { name: 'Sri Lanka', code: 'LK' },\r\n    { name: 'Sudan', code: 'SD' },\r\n    { name: 'Suriname', code: 'SR' },\r\n    { name: 'Svalbard and Jan Mayen', code: 'SJ' },\r\n    { name: 'Swaziland', code: 'SZ' },\r\n    { name: 'Sweden', code: 'SE' },\r\n    { name: 'Switzerland', code: 'CH' },\r\n    { name: 'Syrian Arab Republic', code: 'SY' },\r\n    { name: 'Taiwan, Province of China', code: 'TW' },\r\n    { name: 'Tajikistan', code: 'TJ' },\r\n    { name: 'Tanzania, United Republic of', code: 'TZ' },\r\n    { name: 'Thailand', code: 'TH' },\r\n    { name: 'Timor-Leste', code: 'TL' },\r\n    { name: 'Togo', code: 'TG' },\r\n    { name: 'Tokelau', code: 'TK' },\r\n    { name: 'Tonga', code: 'TO' },\r\n    { name: 'Trinidad and Tobago', code: 'TT' },\r\n    { name: 'Tunisia', code: 'TN' },\r\n    { name: 'Turkey', code: 'TR' },\r\n    { name: 'Turkmenistan', code: 'TM' },\r\n    { name: 'Turks and Caicos Islands', code: 'TC' },\r\n    { name: 'Tuvalu', code: 'TV' },\r\n    { name: 'Uganda', code: 'UG' },\r\n    { name: 'Ukraine', code: 'UA' },\r\n    { name: 'United Arab Emirates', code: 'AE' },\r\n    { name: 'United Kingdom', code: 'GB' },\r\n    { name: 'United States', code: 'US' },\r\n    { name: 'United States Minor Outlying Islands', code: 'UM' },\r\n    { name: 'Uruguay', code: 'UY' },\r\n    { name: 'Uzbekistan', code: 'UZ' },\r\n    { name: 'Vanuatu', code: 'VU' },\r\n    { name: 'Venezuela', code: 'VE' },\r\n    { name: 'Viet Nam', code: 'VN' },\r\n    { name: 'Virgin Islands, British', code: 'VG' },\r\n    { name: 'Virgin Islands, U.S.', code: 'VI' },\r\n    { name: 'Wallis and Futuna', code: 'WF' },\r\n    { name: 'Western Sahara', code: 'EH' },\r\n    { name: 'Yemen', code: 'YE' },\r\n    { name: 'Zambia', code: 'ZM' },\r\n    { name: 'Zimbabwe', code: 'ZW' },\r\n]\r\n","import React, { useState } from 'react'\r\nimport Box from '@mui/material/Box'\r\n\r\nimport Button from '@mui/material/Button'\r\nimport InputLabel from '@mui/material/InputLabel'\r\nimport MenuItem from '@mui/material/MenuItem'\r\nimport FormControl from '@mui/material/FormControl'\r\nimport Select from '@mui/material/Select'\r\nimport { Grid, TextField } from '@mui/material'\r\nimport { countries } from '../../utils/getCountryCode'\r\nimport { useSubscription } from '../../hooks/useSubscription'\r\n\r\nfunction Details(props) {\r\n    const { state } = useSubscription()\r\n    const info = state?.cart?.details\r\n    const [details, setDetails] = useState(\r\n        info\r\n            ? info\r\n            : {\r\n                  name: '',\r\n                  address: '',\r\n                  city: '',\r\n                  state: '',\r\n                  country: '',\r\n              }\r\n    )\r\n\r\n    const handleChange = (e) => {\r\n        setDetails({ ...details, [e.target.name]: e.target.value })\r\n    }\r\n\r\n    const handleDetails = (data) => {\r\n        if (Object.values(data).includes('')) {\r\n            props.setErrorMsg('All Fields are required')\r\n            props.setSnackOpen(true)\r\n            return\r\n        }\r\n        props.handleNext(data)\r\n    }\r\n\r\n    return (\r\n        <Box>\r\n            <Grid container spacing={3}>\r\n                <Grid item xs={12}>\r\n                    <h4>Payment Details</h4>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <TextField\r\n                        autoFocus\r\n                        fullWidth\r\n                        label='Card Holder Name'\r\n                        name='name'\r\n                        required\r\n                        value={details.name}\r\n                        onChange={handleChange}\r\n                    />\r\n                </Grid>\r\n\r\n                <Grid item md={12} xs={12}>\r\n                    <h4>Billing Details</h4>\r\n                </Grid>\r\n                <Grid item md={6} xs={12}>\r\n                    <TextField\r\n                        fullWidth\r\n                        label='Street Address'\r\n                        name='address'\r\n                        required\r\n                        value={details.address}\r\n                        onChange={handleChange}\r\n                    />\r\n                </Grid>\r\n\r\n                <Grid item md={6} xs={12}>\r\n                    <FormControl fullWidth>\r\n                        <InputLabel id='country-select'>Country</InputLabel>\r\n                        <Select\r\n                            required\r\n                            labelId='country-select'\r\n                            name='country'\r\n                            value={details.country}\r\n                            label='Country'\r\n                            onChange={handleChange}\r\n                        >\r\n                            {countries.map((x) => (\r\n                                <MenuItem\r\n                                    sx={{ py: 1 }}\r\n                                    key={x.code}\r\n                                    value={x.code}\r\n                                >{`${x.name} - ${x.code}`}</MenuItem>\r\n                            ))}\r\n                        </Select>\r\n                    </FormControl>\r\n                </Grid>\r\n                <Grid item md={6} xs={12}>\r\n                    <TextField\r\n                        fullWidth\r\n                        label='State'\r\n                        name='state'\r\n                        required\r\n                        value={details.state}\r\n                        onChange={handleChange}\r\n                    />\r\n                </Grid>\r\n                <Grid item md={6} xs={12}>\r\n                    <TextField\r\n                        fullWidth\r\n                        label='City'\r\n                        name='city'\r\n                        required\r\n                        value={details.city}\r\n                        onChange={handleChange}\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <Box\r\n                    mt={5}\r\n                    alignItems='center'\r\n                    justifyContent='space-between'\r\n                    display='flex'\r\n                >\r\n                    <Button\r\n                        type='submit'\r\n                        variant='contained'\r\n                        onClick={() => handleDetails(details)}\r\n                        sx={{\r\n                            width: '100%',\r\n                            py: 1.5,\r\n                        }}\r\n                    >\r\n                        Continue to Pay\r\n                    </Button>\r\n                </Box>\r\n            </Grid>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Details\r\n","import React, { useContext, useEffect, useState } from 'react'\r\nimport { useNavigate, useHref } from 'react-router'\r\nimport { Dialog, DialogContent, Box } from '@mui/material'\r\nimport LinearProgress from '@mui/material/LinearProgress'\r\nimport { useSubscription } from '../../hooks/useSubscription'\r\nimport { SubscriptionContext } from '../../contexts/subscriptionContext'\r\n\r\nconst SuccessDialog = (props) => {\r\n    const [progress, setProgress] = useState(0)\r\n    const [intervalId, setIntervalId] = useState(0)\r\n\r\n    const navigate = useNavigate()\r\n    const { state, dispatch } = useSubscription()\r\n    const { fetchSubscriptions } = useContext(SubscriptionContext)\r\n    const customerId = state?.customerId\r\n\r\n    useEffect(() => {\r\n        const val = sessionStorage.getItem('reload')\r\n\r\n        if (val === 'true') {\r\n            sessionStorage.removeItem('reload')\r\n            navigate('/app/pricing', { replace: true })\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (props.open === false) {\r\n            return\r\n        }\r\n\r\n        const interval = setInterval(() => {\r\n            setProgress((progress) => progress + 5)\r\n        }, 250)\r\n\r\n        setIntervalId(interval)\r\n\r\n        return () => clearInterval(interval)\r\n    }, [props])\r\n\r\n    useEffect(async () => {\r\n        if (progress > 100) {\r\n            clearInterval(intervalId)\r\n            const subscriptions = await fetchSubscriptions(customerId)\r\n            dispatch({\r\n                type: 'SUBSCRIPTION_DATA_CHANGED',\r\n                payload: {\r\n                    customerId: customerId,\r\n                    subscriptions: subscriptions,\r\n                },\r\n            })\r\n            sessionStorage.setItem('reload', 'true')\r\n            window.location.reload()\r\n        }\r\n    }, [progress])\r\n\r\n    console.log('Here')\r\n\r\n    return (\r\n        <Dialog open={props.open} onClose={props.handleClose}>\r\n            <DialogContent>\r\n                <Box>\r\n                    <img\r\n                        src='https://firebasestorage.googleapis.com/v0/b/evencloud-26d32.appspot.com/o/success.png?alt=media&token=14200909-edb3-4628-bfe5-36e346709737'\r\n                        alt='Success Image'\r\n                        style={{ width: '250px', height: '250px' }}\r\n                    />\r\n\r\n                    <LinearProgress\r\n                        variant='determinate'\r\n                        value={progress}\r\n                        color='success'\r\n                    />\r\n                </Box>\r\n            </DialogContent>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nexport default React.memo(SuccessDialog)\r\n","import React, { useState } from 'react'\r\nimport { useNavigate, useLocation } from 'react-router'\r\nimport { Alert, Box, Button, Paper, Snackbar, Typography } from '@mui/material'\r\nimport ArrowBackIosNewOutlinedIcon from '@mui/icons-material/ArrowBackIosNewOutlined'\r\nimport { useStripe, useElements, CardElement } from '@stripe/react-stripe-js'\r\n\r\nimport CardSection from './CardSection.js'\r\nimport Details from './Details.js'\r\nimport { useSubscription } from '../../hooks/useSubscription'\r\nimport SuccessDialog from './SuccessDialog.js'\r\n\r\nexport default function CheckoutForm() {\r\n    const stripe = useStripe()\r\n    const elements = useElements()\r\n    const { state, dispatch } = useSubscription()\r\n    const { cart } = state\r\n\r\n    const [messages, _setMessages] = useState('')\r\n    //const [paymentIntent, setPaymentIntent] = useState()\r\n    const [isPaying, setIsPaying] = useState(false)\r\n\r\n    const [snackOpen, setSnackOpen] = useState(false)\r\n    const [errorMsg, setErrorMsg] = useState(null)\r\n\r\n    const [successDialog, setSuccessDialog] = useState(false)\r\n\r\n    const navigate = useNavigate()\r\n    const location = useLocation()\r\n    const quantity = location.state ? location.state.quantity : 0\r\n\r\n    // helper for displaying status messages.\r\n    const setMessage = (message) => {\r\n        _setMessages(`${messages}\\n\\n${message}`)\r\n    }\r\n\r\n    const handleSubmit = async (event) => {\r\n        // We don't want to let default form submission happen here,\r\n        // which would refresh the page.\r\n        event.preventDefault()\r\n\r\n        if (!stripe || !elements) {\r\n            // Stripe.js has not yet loaded.\r\n            // Make sure to disable form submission until Stripe.js has loaded.\r\n            return\r\n        }\r\n\r\n        console.log(state?.cart)\r\n\r\n        const { error, paymentIntent } = await stripe.confirmCardPayment(\r\n            state?.cart?.clientSecret,\r\n            {\r\n                payment_method: {\r\n                    card: elements.getElement(CardElement),\r\n                    billing_details: {\r\n                        name: cart?.details.name,\r\n                        address: {\r\n                            line1: cart?.details.address,\r\n                            postal_code: cart?.details.zip || '38483',\r\n                            city: cart?.details?.city,\r\n                            country: cart?.details?.country,\r\n                        },\r\n                    },\r\n                },\r\n            }\r\n        )\r\n\r\n        if (error) {\r\n            // Show error to your customer (for example, insufficient funds)\r\n            setMessage(error.message)\r\n            setErrorMsg(error.message)\r\n            setSnackOpen(true)\r\n            console.log(error.message)\r\n        } else {\r\n            // The payment has been processed!\r\n            if (paymentIntent.status === 'succeeded') {\r\n                // Show a success message to your customer\r\n                // There's a risk of the customer closing the window before callback\r\n                // execution. Set up a webhook or plugin to listen for the\r\n                // payment_intent.succeeded event that handles any business critical\r\n                // post-payment actions.\r\n                console.log('Success')\r\n                setSuccessDialog(true)\r\n            }\r\n        }\r\n        //setPaymentIntent(paymentIntent)\r\n    }\r\n\r\n    // if (paymentIntent && paymentIntent.status === 'succeeded') {\r\n    //     //return <div>Success </div>\r\n    //     setSuccessDialog(true)\r\n    // }\r\n\r\n    const handleSnackClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return\r\n        }\r\n\r\n        setSnackOpen(false)\r\n        setErrorMsg(null)\r\n    }\r\n\r\n    const handleDialogClose = () => {\r\n        setSuccessDialog(false)\r\n    }\r\n\r\n    return (\r\n        <Box sx={{ p: 4, background: '#f0f2f5', minHeight: '100%' }}>\r\n            <Box>\r\n                <Button\r\n                    startIcon={<ArrowBackIosNewOutlinedIcon />}\r\n                    onClick={() => navigate('/app/pricing')}\r\n                >\r\n                    Go Back\r\n                </Button>\r\n            </Box>\r\n            <Box sx={{ mt: 2, mb: 5 }}>\r\n                <Typography variant='h2' sx={{ textAlign: 'center' }}>\r\n                    Make a payment\r\n                </Typography>\r\n                <Typography\r\n                    vanriant='h6'\r\n                    sx={{\r\n                        textAlign: 'center',\r\n                        mt: 2,\r\n                        letterSpacing: 0.6,\r\n                        color: 'gray',\r\n                    }}\r\n                >\r\n                    Fill the payment form with Billing Address, Card Holder Name\r\n                    and Card Details\r\n                </Typography>\r\n            </Box>\r\n\r\n            <Paper\r\n                sx={{\r\n                    borderRadius: 3,\r\n                    boxShadow: 10,\r\n                    margin: '40px auto',\r\n                    backgroundColor: 'background.paper',\r\n                    p: 5,\r\n                    maxWidth: '600px',\r\n                    mt: 8,\r\n                }}\r\n            >\r\n                {isPaying && (\r\n                    <CardSection\r\n                        handleBack={() => {\r\n                            setIsPaying(false)\r\n                        }}\r\n                        handleSubmit={handleSubmit}\r\n                        quantity={quantity}\r\n                    />\r\n                )}\r\n                {!isPaying && (\r\n                    <Details\r\n                        handleNext={(details) => {\r\n                            dispatch({\r\n                                type: 'PAYMENT_DETAILS',\r\n                                payload: {\r\n                                    details: details,\r\n                                },\r\n                            })\r\n                            setIsPaying(true)\r\n                        }}\r\n                        setErrorMsg={setErrorMsg}\r\n                        setSnackOpen={setSnackOpen}\r\n                    />\r\n                )}\r\n            </Paper>\r\n\r\n            <SuccessDialog\r\n                open={successDialog}\r\n                handleClose={handleDialogClose}\r\n            />\r\n\r\n            {/* {!isPaying ? (\r\n                <Details\r\n                    handleNext={(details) => {\r\n                        dispatch({\r\n                            type: 'PAYMENT_DETAILS',\r\n                            payload: {\r\n                                details: details,\r\n                            },\r\n                        })\r\n                        setIsPaying(true)\r\n                    }}\r\n                />\r\n            ) : (\r\n                <CardSection\r\n                    handleBack={() => {\r\n                        setIsPaying(false)\r\n                    }}\r\n                    handleSubmit={handleSubmit}\r\n                />\r\n            )}\r\n            <div>{messages}</div> */}\r\n\r\n            {errorMsg !== null && (\r\n                <Snackbar\r\n                    open={snackOpen}\r\n                    autoHideDuration={4000}\r\n                    onClose={handleSnackClose}\r\n                    anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n                >\r\n                    <Alert\r\n                        onClose={handleSnackClose}\r\n                        severity='error'\r\n                        sx={{ width: '100%' }}\r\n                        variant='filled'\r\n                    >\r\n                        {errorMsg}\r\n                    </Alert>\r\n                </Snackbar>\r\n            )}\r\n        </Box>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { loadStripe } from '@stripe/stripe-js'\r\nimport { Elements } from '@stripe/react-stripe-js'\r\nimport CheckoutForm from '../components/pricing/CheckOutForm'\r\n\r\nconst stripePromise = loadStripe(\r\n    'pk_test_51LERE7SHgzLT4nCoLBiNHxLi1VA6lbqcTOnrkwtNlduP9Ht93k7NbY5OF4GXR8vdid3eig3lV1DAxS2XSshACkUe00hDCZvx5x'\r\n)\r\n\r\nconst Subscribe = () => {\r\n    return (\r\n        <Elements stripe={stripePromise}>\r\n            <CheckoutForm />\r\n        </Elements>\r\n    )\r\n}\r\n\r\nexport default Subscribe\r\n","import React, { useState } from 'react'\r\nimport { useNavigate, Link as RouterLink } from 'react-router-dom'\r\nimport {\r\n    Box,\r\n    Button,\r\n    Card,\r\n    TextField,\r\n    Snackbar,\r\n    Alert,\r\n    Link,\r\n    Typography,\r\n} from '@mui/material'\r\n\r\nimport { auth } from '../Firebase'\r\nimport { sendPasswordResetEmail } from 'firebase/auth'\r\n\r\nconst ForgotPassword = () => {\r\n    const [email, setEmail] = useState('')\r\n    const [snackOpen, setSnackOpen] = useState(false)\r\n    const [errorMsg, setErrMsg] = useState('')\r\n    const [successMsg, setSuccessMsg] = useState('')\r\n\r\n    const navigate = useNavigate()\r\n\r\n    const sendLink = () => {\r\n        sendPasswordResetEmail(auth, email)\r\n            .then(() => {\r\n                setSuccessMsg(`Password Reset Email Sent to ${email}`)\r\n                setSnackOpen(true)\r\n                setEmail('')\r\n                setTimeout(() => {\r\n                    navigate('/login')\r\n                }, 4000)\r\n            })\r\n            .catch((error) => {\r\n                const errorCode = error.code\r\n                setErrMsg(getErrMsg(errorCode))\r\n                setSnackOpen(true)\r\n            })\r\n    }\r\n\r\n    const getErrMsg = (msg) => {\r\n        console.log(msg)\r\n        return msg.split('/')[1].split('-').join(' ')\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Box\r\n                sx={{\r\n                    width: '100%',\r\n                    display: 'flex',\r\n                    justifyContent: 'center',\r\n                    p: 5,\r\n                }}\r\n            >\r\n                <Card\r\n                    sx={{\r\n                        width: 500,\r\n                        p: 3,\r\n                        display: 'flex',\r\n                        flexDirection: 'column',\r\n                        alignItems: 'center',\r\n                    }}\r\n                >\r\n                    <h3 style={{ fontWeight: 500 }}>\r\n                        Enter your registered Email Address\r\n                    </h3>\r\n\r\n                    <TextField\r\n                        variant='outlined'\r\n                        margin='normal'\r\n                        fullWidth\r\n                        type='email'\r\n                        placeholder='Email Address'\r\n                        label='Email Address'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                        sx={{ mt: 4 }}\r\n                    />\r\n\r\n                    <Button\r\n                        onClick={sendLink}\r\n                        fullWidth\r\n                        variant='contained'\r\n                        sx={{ py: 1.1, mt: 2 }}\r\n                    >\r\n                        Send Link\r\n                    </Button>\r\n\r\n                    <Box sx={{ mt: 2 }}>\r\n                        <Link\r\n                            component={RouterLink}\r\n                            to='/login'\r\n                            variant='body2'\r\n                            underline='hover'\r\n                        >\r\n                            <Typography component='p'>Back to Login</Typography>\r\n                        </Link>\r\n                    </Box>\r\n                </Card>\r\n            </Box>\r\n            {errorMsg && (\r\n                <Snackbar\r\n                    open={snackOpen}\r\n                    autoHideDuration={4000}\r\n                    onClose={() => setSnackOpen(false)}\r\n                    anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n                >\r\n                    <Alert\r\n                        onClose={() => setSnackOpen(false)}\r\n                        severity='error'\r\n                        sx={{ width: '100%' }}\r\n                        variant='filled'\r\n                    >\r\n                        {errorMsg}\r\n                    </Alert>\r\n                </Snackbar>\r\n            )}\r\n            {successMsg && (\r\n                <Snackbar\r\n                    open={snackOpen}\r\n                    autoHideDuration={4000}\r\n                    onClose={() => setSnackOpen(false)}\r\n                    anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n                >\r\n                    <Alert\r\n                        onClose={() => setSnackOpen(false)}\r\n                        severity='success'\r\n                        sx={{ width: '100%' }}\r\n                        variant='filled'\r\n                    >\r\n                        {successMsg}\r\n                    </Alert>\r\n                </Snackbar>\r\n            )}\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default ForgotPassword\r\n","import { Navigate } from 'react-router-dom'\r\nimport DashboardLayout from './components/DashboardLayout'\r\nimport MainLayout from './components/MainLayout'\r\nimport Dashboard from './pages/Dashboard'\r\nimport Login from './pages/Login'\r\nimport NotFound from './pages/NotFound'\r\nimport Register from './pages/Register'\r\n\r\nimport Locationview from './pages/Locationview'\r\nimport Report from './pages/Report'\r\nimport Notification from './pages/Notification'\r\nimport ManageMobileDevices from './pages/ManageMobileDevices'\r\nimport ManageHotspots from './pages/ManageHotspots'\r\nimport Profile from './pages/Profile'\r\nimport ManageGroups from './pages/ManageGroups'\r\nimport ManageAdmins from './pages/ManageAdmins'\r\nimport Pricing from './pages/Pricing'\r\nimport Subscribe from './pages/Subscribe'\r\nimport ForgotPassword from './pages/ForgotPassword'\r\n\r\nconst routes = [\r\n    {\r\n        path: 'app',\r\n        element: <DashboardLayout />,\r\n        children: [\r\n            { path: 'dashboard', element: <Dashboard /> },\r\n            { path: 'manage-devices', element: <ManageMobileDevices /> },\r\n            { path: 'manage-hotspots', element: <ManageHotspots /> },\r\n            { path: 'manage-groups', element: <ManageGroups /> },\r\n            { path: 'manage-admins', element: <ManageAdmins /> },\r\n            { path: 'pricing', element: <Pricing /> },\r\n            { path: 'notifications', element: <Notification /> },\r\n            { path: 'reports', element: <Report /> },\r\n            {\r\n                path: 'locationview/:phoneNumber/:requestId',\r\n                element: <Locationview />,\r\n            },\r\n            { path: 'profile', element: <Profile /> },\r\n            { path: '*', element: <Navigate to='/404' /> },\r\n        ],\r\n    },\r\n    {\r\n        path: '',\r\n        element: <MainLayout />,\r\n        children: [\r\n            { path: 'register', element: <Register /> },\r\n            { path: 'login', element: <Login /> },\r\n            { path: 'subscribe', element: <Subscribe /> },\r\n            { path: '/forget-password', element: <ForgotPassword /> },\r\n            { path: '404', element: <NotFound /> },\r\n            { path: '/', element: <Navigate to='/app/dashboard' /> },\r\n            { path: '*', element: <Navigate to='/404' /> },\r\n        ],\r\n    },\r\n]\r\n\r\nexport default routes\r\n","import 'react-perfect-scrollbar/dist/css/styles.css'\r\nimport { useRoutes, useNavigate } from 'react-router-dom'\r\nimport { ThemeProvider, StyledEngineProvider } from '@mui/material'\r\nimport GlobalStyles from './components/GlobalStyles'\r\nimport theme from './theme'\r\nimport routes from './routes'\r\nimport './App.css'\r\nimport { useEffect } from 'react'\r\nimport { getDevices, getAdminDevices } from './store/actions/device'\r\n\r\nimport axios from 'axios'\r\nimport { API_SERVICE } from './URI'\r\nimport { getAdminHotspots, getHotspots } from './store/actions/hotspot'\r\nimport { getAdmins } from './store/actions/admin'\r\nimport { getGroups } from './store/actions/group'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nconst App = () => {\r\n    const content = useRoutes(routes)\r\n    const dispatch = useDispatch()\r\n    const navigate = useNavigate()\r\n\r\n    const userData = localStorage.getItem('userData')\r\n        ? JSON.parse(localStorage.getItem('userData'))\r\n        : null\r\n\r\n    const adminData = localStorage.getItem('adminData')\r\n        ? JSON.parse(localStorage.getItem('adminData'))\r\n        : null\r\n\r\n    useEffect(() => {\r\n        const authToken = localStorage.getItem('authToken')\r\n\r\n        if (!authToken) {\r\n            navigate('/login')\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (adminData === null && userData !== null) {\r\n            dispatch(getDevices(userData.uid))\r\n            dispatch(getHotspots(userData.uid))\r\n            dispatch(getGroups(userData.uid))\r\n            dispatch(getAdmins(userData.uid))\r\n        }\r\n\r\n        if (adminData !== null && userData !== null) {\r\n            const getAdminData = async () => {\r\n                const { data } = await axios.get(\r\n                    `${API_SERVICE}/get/admin/${adminData.email}`\r\n                )\r\n                dispatch(\r\n                    getAdminDevices({\r\n                        createdBy: userData.uid,\r\n                        adminGroups: data.groups,\r\n                    })\r\n                )\r\n                dispatch(\r\n                    getAdminHotspots({\r\n                        createdBy: userData.uid,\r\n                        adminGroups: data.groups,\r\n                    })\r\n                )\r\n            }\r\n\r\n            getAdminData()\r\n        }\r\n    }, [dispatch])\r\n\r\n    return (\r\n        <StyledEngineProvider injectFirst>\r\n            <ThemeProvider theme={theme}>\r\n                <GlobalStyles />\r\n                {content}\r\n            </ThemeProvider>\r\n        </StyledEngineProvider>\r\n    )\r\n}\r\n\r\nexport default App\r\n","import * as types from '../constants'\r\n\r\nexport const hotspotReducer = (state = { hotspotList: [] }, action) => {\r\n    switch (action.type) {\r\n        case types.GET_HOTSPOT_SUCCESS:\r\n            return {\r\n                hotspotList: action.payload,\r\n            }\r\n        case types.GET_HOTSPOT_FAIL:\r\n            return {\r\n                error: action.payload,\r\n                hotspotList: [],\r\n            }\r\n\r\n        case types.CREATE_HOTSPOT_SUCCESS: {\r\n            const item = action.payload\r\n            console.log(item)\r\n            const exitHotspot = state.hotspotList.find(\r\n                (x) => x._id === item._id\r\n            )\r\n\r\n            if (exitHotspot) {\r\n                return {\r\n                    ...state,\r\n                    hotspotList: state.hotspotList.map((x) =>\r\n                        x._id === exitHotspot._id ? item : x\r\n                    ),\r\n                    success: 'Hotspot created succssfully',\r\n                }\r\n            }\r\n            return {\r\n                ...state,\r\n                hotspotList: [...state.hotspotList, item],\r\n                success: 'Hotspot created succssfully',\r\n            }\r\n        }\r\n        case types.CREATE_HOTSPOT_FAIL:\r\n            return {\r\n                hotspotList: [...state.hotspotList],\r\n                error: action.payload,\r\n            }\r\n\r\n        case types.UPDATE_HOTSPOT_SUCCESS: {\r\n            const item = action.payload\r\n            console.log(item)\r\n            const exitHotspot = state.hotspotList.find(\r\n                (x) => x._id === item._id\r\n            )\r\n\r\n            if (exitHotspot) {\r\n                return {\r\n                    ...state,\r\n                    hotspotList: state.hotspotList.map((x) =>\r\n                        x._id === exitHotspot._id ? item : x\r\n                    ),\r\n                    success: 'Hotspot updated succssfully',\r\n                }\r\n            }\r\n            return {\r\n                ...state,\r\n                hotspotList: [...state.hotspotList, item],\r\n                success: 'Hotspot updated succssfully',\r\n            }\r\n        }\r\n\r\n        case types.UPDATE_HOTSPOT_FAIL:\r\n            return {\r\n                hotspotList: [...state.hotspotList],\r\n                error: action.payload,\r\n            }\r\n\r\n        case types.DELETE_HOTSPOT_SUCCESS:\r\n            return {\r\n                ...state,\r\n                hotspotList: state.hotspotList.filter(\r\n                    (x) => x._id !== action.payload\r\n                ),\r\n                success: 'Hotspot deleted succssfully',\r\n            }\r\n        case types.DELETE_HOTSPOT_FAIL:\r\n            return {\r\n                error: action.payload,\r\n                hotspotList: [...state.hotspotList],\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import { createStore, applyMiddleware, combineReducers } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\n\r\nimport { hotspotReducer } from './reducers/hotspotReducer'\r\nimport { groupReducer } from './reducers/groupReducer'\r\nimport { adminReducer } from './reducers/adminReducer'\r\nimport { deviceReducer } from './reducers/deviceReducer'\r\n\r\nconst reducer = combineReducers({\r\n    hotspots: hotspotReducer,\r\n    groups: groupReducer,\r\n    admins: adminReducer,\r\n    devices: deviceReducer,\r\n})\r\n\r\nconst hotspotFromStorage = sessionStorage.getItem('hotspotList')\r\n    ? JSON.parse(sessionStorage.getItem('hotspotList'))\r\n    : []\r\n\r\nconst groupFromStorage = sessionStorage.getItem('groupList')\r\n    ? JSON.parse(sessionStorage.getItem('groupList'))\r\n    : []\r\n\r\nconst adminFromStorage = sessionStorage.getItem('adminList')\r\n    ? JSON.parse(sessionStorage.getItem('adminList'))\r\n    : []\r\n\r\nconst deviceFromStorage = sessionStorage.getItem('deviceList')\r\n    ? JSON.parse(sessionStorage.getItem('deviceList'))\r\n    : []\r\n\r\nconst initialState = {\r\n    hotspots: { hotspotList: hotspotFromStorage },\r\n    groups: { groupList: groupFromStorage },\r\n    admins: { adminList: adminFromStorage },\r\n    devices: { deviceList: deviceFromStorage },\r\n}\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(\r\n    reducer,\r\n    initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n)\r\n\r\nexport default store\r\n","import * as types from '../constants'\r\n\r\nexport const groupReducer = (state = { groupList: [] }, action) => {\r\n    switch (action.type) {\r\n        case types.GET_GROUP_SUCCESS:\r\n            return {\r\n                groupList: action.payload,\r\n            }\r\n        case types.GET_GROUP_FAIL:\r\n            return {\r\n                error: action.payload,\r\n                groupList: [],\r\n            }\r\n\r\n        case types.CREATE_GROUP_SUCCESS: {\r\n            const item = action.payload\r\n            const existgroup = state.groupList.find((x) => x._id === item._id)\r\n\r\n            if (existgroup) {\r\n                return {\r\n                    ...state,\r\n                    groupList: state.groupList.map((x) =>\r\n                        x._id === existgroup._id ? item : x\r\n                    ),\r\n                    success: 'Group created succssfully',\r\n                }\r\n            }\r\n            return {\r\n                ...state,\r\n                groupList: [...state.groupList, item],\r\n                success: 'Group created succssfully',\r\n            }\r\n        }\r\n        case types.CREATE_GROUP_FAIL:\r\n            return {\r\n                groupList: [...state.groupList],\r\n                error: action.payload,\r\n            }\r\n\r\n        case types.UPDATE_GROUP_SUCCESS: {\r\n            const item = action.payload\r\n            const existgroup = state.groupList.find((x) => x._id === item._id)\r\n\r\n            if (existgroup) {\r\n                return {\r\n                    ...state,\r\n                    groupList: state.groupList.map((x) =>\r\n                        x._id === existgroup._id ? item : x\r\n                    ),\r\n                    success: 'Group updated succssfully',\r\n                }\r\n            }\r\n            return {\r\n                ...state,\r\n                groupList: [...state.groupList, item],\r\n                success: 'Group updated succssfully',\r\n            }\r\n        }\r\n        case types.UPDATE_GROUP_FAIL:\r\n            return {\r\n                groupList: [...state.groupList],\r\n                error: action.payload,\r\n            }\r\n\r\n        case types.DELETE_GROUP_SUCCESS:\r\n            return {\r\n                ...state,\r\n                groupList: state.groupList.filter(\r\n                    (x) => x._id !== action.payload\r\n                ),\r\n                success: 'Group deleted succssfully',\r\n            }\r\n        case types.DELETE_GROUP_FAIL:\r\n            return {\r\n                error: action.payload,\r\n                groupList: [...state.groupList],\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import * as types from '../constants'\r\n\r\nexport const adminReducer = (state = { adminList: [] }, action) => {\r\n    switch (action.type) {\r\n        case types.GET_ADMIN_SUCCESS:\r\n            return {\r\n                adminList: action.payload,\r\n            }\r\n        case types.GET_ADMIN_FAIL:\r\n            return {\r\n                error: action.payload,\r\n                adminList: [],\r\n            }\r\n\r\n        case types.CREATE_ADMIN_SUCCESS: {\r\n            const item = action.payload\r\n            const existadmin = state.adminList.find((x) => x._id === item._id)\r\n\r\n            if (existadmin) {\r\n                return {\r\n                    ...state,\r\n                    adminList: state.adminList.map((x) =>\r\n                        x._id === existadmin._id ? item : x\r\n                    ),\r\n                    success: 'Admin created succssfully',\r\n                }\r\n            }\r\n            return {\r\n                ...state,\r\n                adminList: [...state.adminList, item],\r\n                success: 'Admin created succssfully',\r\n            }\r\n        }\r\n        case types.CREATE_ADMIN_FAIL:\r\n            return {\r\n                adminList: [...state.adminList],\r\n                error: action.payload,\r\n            }\r\n\r\n        case types.UPDATE_ADMIN_SUCCESS: {\r\n            const item = action.payload\r\n            const existadmin = state.adminList.find((x) => x._id === item._id)\r\n\r\n            if (existadmin) {\r\n                return {\r\n                    ...state,\r\n                    adminList: state.adminList.map((x) =>\r\n                        x._id === existadmin._id ? item : x\r\n                    ),\r\n                    success: 'Admin updated succssfully',\r\n                }\r\n            }\r\n            return {\r\n                ...state,\r\n                adminList: [...state.adminList, item],\r\n                success: 'Admin updated succssfully',\r\n            }\r\n        }\r\n        case types.UPDATE_ADMIN_FAIL:\r\n            return {\r\n                adminList: [...state.adminList],\r\n                error: action.payload,\r\n            }\r\n\r\n        case types.DELETE_ADMIN_SUCCESS:\r\n            return {\r\n                ...state,\r\n                adminList: state.adminList.filter(\r\n                    (x) => x._id !== action.payload\r\n                ),\r\n                success: 'Admin deleted successfully',\r\n            }\r\n        case types.DELETE_ADMIN_FAIL:\r\n            return {\r\n                error: action.payload,\r\n                hotspotList: [...state.adminList],\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import * as types from '../constants'\r\n\r\nexport const deviceReducer = (state = { deviceList: [] }, action) => {\r\n    switch (action.type) {\r\n        case types.GET_DEVICE_SUCCESS:\r\n            return {\r\n                deviceList: action.payload,\r\n            }\r\n        case types.GET_DEVICE_FAIL:\r\n            return {\r\n                error: action.payload,\r\n                deviceList: [],\r\n            }\r\n\r\n        case types.CREATE_DEVICE_SUCCESS: {\r\n            const item = action.payload\r\n            const existdevice = state.deviceList.find((x) => x._id === item._id)\r\n\r\n            if (existdevice) {\r\n                return {\r\n                    ...state,\r\n                    deviceList: state.deviceList.map((x) =>\r\n                        x._id === existdevice._id ? item : x\r\n                    ),\r\n                    success: 'Device added succssfully',\r\n                }\r\n            }\r\n            return {\r\n                ...state,\r\n                deviceList: [...state.deviceList, item],\r\n                success: 'Device added succssfully',\r\n            }\r\n        }\r\n\r\n        case types.CREATE_DEVICE_FAIL:\r\n            return {\r\n                deviceList: [...state.deviceList],\r\n                error: action.payload,\r\n            }\r\n\r\n        case types.UPDATE_DEVICE_SUCCESS: {\r\n            const item = action.payload\r\n            console.log(item)\r\n            const existDevice = state.deviceList.find((x) => x._id === item._id)\r\n\r\n            if (existDevice) {\r\n                return {\r\n                    ...state,\r\n                    deviceList: state.deviceList.map((x) =>\r\n                        x._id === existDevice._id ? item : x\r\n                    ),\r\n                    success: 'Device updated succssfully',\r\n                }\r\n            }\r\n            return {\r\n                ...state,\r\n                deviceList: [...state.deviceList, item],\r\n                success: 'Device updated succssfully',\r\n            }\r\n        }\r\n\r\n        case types.UPDATE_DEVICE_FAIL:\r\n            return {\r\n                deviceList: [...state.deviceList],\r\n                error: action.payload,\r\n            }\r\n\r\n        case types.DELETE_DEVICE_SUCCESS:\r\n            return {\r\n                ...state,\r\n                deviceList: state.deviceList.filter(\r\n                    (x) => x._id !== action.payload\r\n                ),\r\n                success: 'Device deleted succssfully',\r\n            }\r\n        case types.DELETE_DEVICE_FAIL:\r\n            return {\r\n                error: action.payload,\r\n                deviceList: [...state.deviceList],\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import ReactDOM from 'react-dom'\r\nimport { BrowserRouter } from 'react-router-dom'\r\nimport { Provider } from 'react-redux'\r\nimport App from './App'\r\nimport store from './store/store'\r\nimport {\r\n    SubscriptionConsumer,\r\n    SubscriptionProvider,\r\n} from './contexts/subscriptionContext'\r\n\r\nReactDOM.render(\r\n    <SubscriptionProvider>\r\n        <SubscriptionConsumer>\r\n            {(sub) =>\r\n                sub.state.isInitialized && (\r\n                    <Provider store={store}>\r\n                        <BrowserRouter>\r\n                            <App />\r\n                        </BrowserRouter>\r\n                    </Provider>\r\n                )\r\n            }\r\n        </SubscriptionConsumer>\r\n    </SubscriptionProvider>,\r\n\r\n    document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}