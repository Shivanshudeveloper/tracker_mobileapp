{"version":3,"sources":["components/GlobalStyles.js","theme/index.js","Firebase/index.js","components/DashboardNavbar.js","components/DashboardSidebar.js","components/DashboardLayout.js","components/MainLayout.js","URI.js","components/dashboard/LocationTimeline.jsx","pages/Locationview.js","pages/AllLocationView.js","store/constants.js","store/actions/device.js","store/actions/hotspot.js","store/actions/admin.js","store/actions/group.js","pages/Dashboard.js","pages/Login.js","pages/NotFound.js","pages/Register.js","components/report/ReportTable.jsx","components/report/HotspotFilter.jsx","components/report/DeviceFilter.jsx","components/report/MonthFilter.jsx","components/report/GroupFilter.jsx","contexts/subscriptionContext.js","hooks/useSubscription.js","utils/getSubscriptionDetails.js","components/report/HiddenReportTable.jsx","pages/Report.js","pages/Notification.js","components/devices/EditDeviceDialog.jsx","components/devices/DeviceTable.jsx","pages/ManageMobileDevices.js","components/hotspot/EditHotspotDialogForm.jsx","components/hotspot/HotspotTable.jsx","pages/ManageHotspots.js","components/settings/SecuritySetting.js","pages/Profile.js","components/groups/ScheduleForm.jsx","components/groups/CreateGroupDialog.jsx","components/groups/GroupTable.jsx","components/groups/EditGroupDialog.jsx","pages/ManageGroups.js","components/admins/AdminTable.jsx","components/admins/CreateAdminDialog.jsx","components/admins/EditAdminDialog.jsx","pages/ManageAdmins.js","pages/admin/Report.js","pages/admin/ChangePassword.js","components/pricing/ProCard.js","components/pricing/FreeCard.js","pages/Pricing.js","components/pricing/CardSection.js","utils/getCountryCode.js","components/pricing/Details.js","components/pricing/SuccessDialog.js","components/pricing/CheckOutForm.js","pages/Subscribe.js","routes.js","App.js","store/store.js","store/reducers/hotspotReducer.js","store/reducers/groupReducer.js","store/reducers/adminReducer.js","store/reducers/deviceReducer.js","index.js"],"names":["useStyles","makeStyles","createStyles","boxSizing","margin","padding","html","height","width","body","backgroundColor","a","textDecoration","GlobalStyles","theme","createTheme","palette","background","default","paper","primary","contrastText","main","text","secondary","shadows","typography","h1","fontWeight","fontSize","letterSpacing","h2","h3","h4","h5","h6","overline","app","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","db","getAnalytics","getFirestore","auth","getAuth","storage","getStorage","DashboardNavbar","onMobileNavOpen","rest","useState","notifications","setNotifications","anchorEl","setAnchorEl","open","setOpen","navigate","useNavigate","userData","sessionStorage","getItem","JSON","parse","useEffect","notificationRef","collection","uid","q","query","orderBy","limit","unsub","onSnapshot","snapshots","list","forEach","snap","push","data","getTime","sec","str","moment","Date","fromNow","first","split","mid","AppBar","elevation","Toolbar","sx","display","justifyContent","gap","IconButton","onClick","event","currentTarget","color","Popover","id","onClose","anchorOrigin","vertical","horizontal","className","List","map","x","i","Box","style","ListItem","mt","ListItemAvatar","requestStatus","Avatar","src","ListItemText","message","createdAt","seconds","Divider","to","removeItem","signOut","then","replace","catch","error","console","log","root","drawer","flexShrink","whiteSpace","appBar","marginLeft","toolbar","alignItems","spacing","mixins","listContainer","flexDirection","DashboardSidebar","classes","React","setSelectedIndex","adminData","paths","names","CssBaseline","Drawer","variant","HomeOutlined","index","pt","pb","px","borderBottomColor","borderBottomWidth","Typography","DashboardLayoutRoot","styled","overflow","DashboardLayoutWrapper","flex","paddingTop","breakpoints","up","paddingLeft","DashboardLayoutContainer","DashboardLayoutContent","DashboardLayout","isMobileNavOpen","setMobileNavOpen","onMobileClose","openMobile","MainLayoutRoot","MainLayoutWrapper","MainLayoutContainer","MainLayoutContent","MainLayout","dotenv","config","API_SERVICE","process","MAP_TOKEN","MAP_STYLE","LocationTimeline","props","Timeline","mr","locations","location","TimelineItem","TimelineSeparator","TimelineDot","TimelineConnector","TimelineContent","component","address","format","memo","Locationview","user","phoneNumber","createdBy","lat","setlat","long","setlong","latitude","longitude","zoom","viewport","setViewport","selected","setSelected","selectedLat","setSelectedLat","selectedLong","setSelectedLong","userlocationdata","setuserlocationdata","imgUri","setImgUri","load","setLoad","showDetails","setShowDetails","setLocations","axios","get","response","err","userRef","doc","document","exists","liveLocation","profilePicture","getMonth","handleShowDetails","Helmet","minHeight","Container","maxWidth","trackingStatus","mapboxApiAccessToken","mapStyle","onViewportChange","nextViewport","onMouseEnter","e","preventDefault","onMouseLeave","name","arr","length","toUpperCase","getInitials","fullName","textAlign","formattedAddress","position","zIndex","borderRadius","right","bottom","transform","AllLocationView","userList","senderId","trackingList","selectedLocation","setSelectedLocation","selectedDevice","setSelectedDevice","trackingData","setTrackingData","item","marginBottom","CREATE_HOTSPOT_SUCCESS","CREATE_HOTSPOT_FAIL","GET_HOTSPOT_SUCCESS","GET_HOTSPOT_FAIL","UPDATE_HOTSPOT_SUCCESS","UPDATE_HOTSPOT_FAIL","DELETE_HOTSPOT_SUCCESS","DELETE_HOTSPOT_FAIL","CREATE_GROUP_SUCCESS","CREATE_GROUP_FAIL","GET_GROUP_SUCCESS","GET_GROUP_FAIL","UPDATE_GROUP_SUCCESS","UPDATE_GROUP_FAIL","DELETE_GROUP_SUCCESS","DELETE_GROUP_FAIL","CREATE_ADMIN_SUCCESS","CREATE_ADMIN_FAIL","GET_ADMIN_SUCCESS","GET_ADMIN_FAIL","UPDATE_ADMIN_SUCCESS","UPDATE_ADMIN_FAIL","DELETE_ADMIN_SUCCESS","DELETE_ADMIN_FAIL","CREATE_DEVICE_SUCCESS","CREATE_DEVICE_FAIL","GET_DEVICE_SUCCESS","GET_DEVICE_FAIL","UPDATE_DEVICE_SUCCESS","UPDATE_DEVICE_FAIL","DELETE_DEVICE_SUCCESS","DELETE_DEVICE_FAIL","createDevice","bodyData","dispatch","getState","headers","post","type","types","payload","setItem","stringify","devices","deviceList","getDevices","getAdminDevices","getAdminHotspots","getHotspots","createAdmin","admins","adminList","getAdmins","updateAdmin","put","sendEmail","emailData","getGroups","Dashboard","selectedIndex","userLocations","setUserLocations","search","setSearch","searchResult","setSearchResult","snackOpen","setSnackOpen","success","setSuccess","setError","filter","setFilter","menuOpen","Boolean","useDispatch","useSelector","state","handleFilterClose","handleSnackClose","_","reason","email","adminGroups","groups","phoneNumberArr","UsersRef","where","snapshot","users","filterArr","toLowerCase","includes","handleListItemClick","changeFilter","val","Grid","container","xs","overflowY","Paper","TextField","fullWidth","InputProps","startAdornment","InputAdornment","SvgIcon","endAdornment","placeholder","onChange","target","value","Menu","MenuItem","py","button","mb","undefined","disabled","borderLeft","Stack","direction","Snackbar","autoHideDuration","Alert","severity","image","backgroundImage","backgroundRepeat","grey","backgroundSize","backgroundPosition","avatar","form","marginTop","login","googleLogin","Login","setEmail","password","setPassword","remember","setRemember","credentials","localStorage","checked","submitHandler","superRef","getDocs","docs","size","superAdminLogin","adminLogin","signInWithEmailAndPassword","credential","accessToken","superAdminRef","getDoc","superData","passwordChanged","errorCode","code","errorMessage","alert","userCredential","docRef","docSnap","sm","md","square","noValidate","required","label","autoComplete","autoFocus","Link","FormControlLabel","control","Checkbox","Button","RouterLink","underline","NotFound","align","alt","Register","firstName","setFirstName","lastName","setLastName","companyName","setCompanyName","policy","setPolicy","createUserWithEmailAndPassword","updateProfile","currentUser","displayName","profilePhoto","serverTimestamp","setDoc","p","Row","row","hotspotList","selectedHotspots","selectedGroups","selectedMonth","history","setHistory","hotspots","hotspot","checkExist","findIndex","_id","filterGroup","Promise","resolve","group","TableRow","borderBottom","TableCell","scope","device","total","paddingBottom","colSpan","Collapse","in","timeout","unmountOnExit","my","Table","TableHead","TableBody","historyRow","borderWidth","hotspotName","groupName","CircularProgress","ReportTable","TableContainer","tableData","MenuProps","PaperProps","maxHeight","ITEM_HEIGHT","HotspotFilter","FormControl","ml","InputLabel","Select","multiple","selectedHotspotNames","handleHotspotSelect","input","OutlinedInput","renderValue","join","hotspotNames","indexOf","DeviceFilter","selectedDevices","handleSelectedDevice","mobileDevices","MonthFilter","isDisable","setIsDisable","subscription","reportCount","Fragment","setSelectedMonth","Months","month","GroupFilter","selectedGroupNames","handleGroupSelect","groupNames","initialState","customerId","subscriptions","cart","reducer","action","isInitialized","details","SubscriptionContext","createContext","SubscriptionProvider","children","useReducer","onAuthStateChanged","ref","_email","fetchCustomer","customer","fetchSubscriptions","userId","result","Provider","SubscriptionConsumer","Consumer","useSubscription","useContext","fetchPlans","prices","getSubscriptionDetails","sub","status","subscriptionDetail","plans","planArr","plan","productName","product","planId","productId","hotspotCount","Number","MAX_VALUE","deviceCount","quantity","groupCount","adminCount","hidden","Report","setTableData","setSelectedHotspotNames","setSelectedGroups","setSelectedHotspots","setSelectedDevices","loading","setLoading","filteredData","setFilteredData","setSubscription","groupList","fetchData","fetchSubDetail","temp","number","table","filename","sheet","buttonText","HiddenReportTable","Notification","notificationList","filterList","setFilterList","currDate","getDate","start","end","m","lg","xl","boxShadow","Image","EditDeviceDialog","setEditDialogOpen","editDialogOpen","trackingGroups","newFullName","setNewFullName","Object","entries","updateDetails","updateDevice","Dialog","DialogTitle","DialogContent","labelId","DialogActions","DeviceSetting","toggleEditDeviceDialog","removeDevice","delete","minWidth","border","Chip","edge","ManageMobileDevices","setFullName","setPhoneNumber","addDeviceDialog","setAddDeviceDialog","scheduleDialog","setScheduleDialog","successMsg","errorMsg","sendTrackingRequest","sendNotificationToDevice","requestRef","addDoc","recieverFullName","sender","Timestamp","now","androidRef","seen","addNewDevice","DeviceTable","EditHotspotDialogForm","setDialogOpen","selectedHotspot","mapRef","useRef","setHotspotName","setLocation","zipCode","setZipCode","isFetching","setIsFetching","getLatLong","handleViewportChange","useCallback","newViewport","handleGeocoderViewportChange","transitionDuration","res","zipcode","toPrecision","updateHotspot","lngLat","marker","countries","reverseGeocode","HotspotSetting","toggleEditHotspotDialog","removeHotspot","ManageHotspots","setSelectedHotspot","dialogOpen","addHotspotDialog","setAddHotspotDialog","setSuccessMsg","setErrorMsg","allViewport","setAllViewport","locationData","setLocationData","saveHotspot","HotspotTable","SecuritySetting","currentPassword","setCurrentPassword","newPassword","setNewPassword","isUpdating","setIsUpdating","update","EmailAuthProvider","reauthenticateWithCredential","updatePassword","startIcon","Profile","setProfilePhoto","previewUrl","setPreviewUrl","selectedFile","setSelectedFile","updateProfileHandler","uploaProfilPhoto","photo","updateDoc","storageRef","uploadTask","uploadBytesResumable","on","progress","bytesTransferred","totalBytes","getDownloadURL","downloadUrl","files","URL","createObjectURL","accept","ScheduleForm","week","startDay","setStartDay","day","endDay","setEndDay","disableClock","setTime","time","rangeDivider","CreateGroupDialog","setGroupName","selectedAdmins","setSelectedAdmins","saveGroup","members","schedule","startTime","endTime","GroupTable","removeGroup","updatedAt","setSelectedGroup","setEditOpen","EditGroupDialog","keys","selectedGroup","updateGroup","ManageGroups","createOpen","setCreateOpen","editOpen","rowGap","columnGap","AdminTable","removeAdmin","admin","setSelectedAdmin","setShowEditDialog","CreateAdminDialog","saveAdmin","test","subject","EditAdminDialog","selectedAdmin","updateData","ManageAdmins","showCreateDialog","setShowCreateDialog","showEditDialog","authToken","AdminReport","setHotspotNames","setGroupNames","setMobileDevices","phoneNumbers","setPhoneNumbers","setSelectedGroupNames","groupId","snaps","array","newArr","documentId","trackingUserRef","numbers","getPhoneNumbers","getFromDB","count","getHotspotsData","getCollapseData","getDocuments","dataArr","finalData","d","ChangePassword","ProCard","Card","isCurrent","textTransform","Slider","handleValueChange","max","disablePadding","ListItemIcon","htmlColor","FreeCard","Pricing","setQuantity","currentPlan","setCurrentPlan","setPrices","subQuantity","fetchPrices","newValue","createSubscription","amount","priceId","clientSecret","window","reload","vanriant","price","CardSection","handleBack","handleSubmit","Details","info","city","country","setDetails","handleChange","values","handleNext","handleDetails","SuccessDialog","setProgress","intervalId","setIntervalId","interval","setInterval","clearInterval","handleClose","LinearProgress","CheckoutForm","stripe","useStripe","elements","useElements","messages","_setMessages","isPaying","setIsPaying","successDialog","setSuccessDialog","useLocation","confirmCardPayment","payment_method","card","getElement","CardElement","billing_details","line1","postal_code","zip","paymentIntent","stripePromise","loadStripe","Subscribe","routes","path","element","App","content","useRoutes","StyledEngineProvider","injectFirst","ThemeProvider","combineReducers","exitHotspot","find","existgroup","existadmin","existdevice","existDevice","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.6175f67b.chunk.js","sourcesContent":["import { createStyles, makeStyles } from '@mui/styles'\r\n\r\nconst useStyles = makeStyles(() =>\r\n    createStyles({\r\n        '@global': {\r\n            '*': {\r\n                boxSizing: 'border-box',\r\n                margin: 0,\r\n                padding: 0,\r\n            },\r\n            html: {\r\n                '-webkit-font-smoothing': 'antialiased',\r\n                '-moz-osx-font-smoothing': 'grayscale',\r\n                height: '100%',\r\n                width: '100%',\r\n            },\r\n            body: {\r\n                backgroundColor: '#f4f6f8',\r\n                height: '100%',\r\n                width: '100%',\r\n            },\r\n            a: {\r\n                textDecoration: 'none',\r\n            },\r\n            '#root': {\r\n                height: '100%',\r\n                width: '100%',\r\n            },\r\n        },\r\n    })\r\n)\r\n\r\nconst GlobalStyles = () => {\r\n    useStyles()\r\n\r\n    return null\r\n}\r\n\r\nexport default GlobalStyles\r\n","import { createTheme } from '@mui/material'\r\n\r\nconst theme = createTheme({\r\n  palette: {\r\n    background: {\r\n      default: '#f4f6f8',\r\n      paper: '#ffffff',\r\n    },\r\n    primary: {\r\n      contrastText: '#ffffff',\r\n      main: '#5664d2',\r\n    },\r\n    text: {\r\n      primary: '#172b4d',\r\n      secondary: '#6b778c',\r\n    },\r\n  },\r\n  shadows: [\r\n    'none',\r\n    '0 0 0 1px rgba(63,63,68,0.05), 0 1px 2px 0 rgba(63,63,68,0.15)',\r\n    '0 0 1px 0 rgba(0,0,0,0.31), 0 2px 2px -2px rgba(0,0,0,0.25)',\r\n    '0 0 1px 0 rgba(0,0,0,0.31), 0 3px 4px -2px rgba(0,0,0,0.25)',\r\n    '0 0 1px 0 rgba(0,0,0,0.31), 0 3px 4px -2px rgba(0,0,0,0.25)',\r\n    '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 6px -2px rgba(0,0,0,0.25)',\r\n    '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 6px -2px rgba(0,0,0,0.25)',\r\n    '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 8px -2px rgba(0,0,0,0.25)',\r\n    '0 0 1px 0 rgba(0,0,0,0.31), 0 5px 8px -2px rgba(0,0,0,0.25)',\r\n    '0 0 1px 0 rgba(0,0,0,0.31), 0 6px 12px -4px rgba(0,0,0,0.25)',\r\n    '0 0 1px 0 rgba(0,0,0,0.31), 0 7px 12px -4px rgba(0,0,0,0.25)',\r\n    '0 0 1px 0 rgba(0,0,0,0.31), 0 6px 16px -4px rgba(0,0,0,0.25)',\r\n    '0 0 1px 0 rgba(0,0,0,0.31), 0 7px 16px -4px rgba(0,0,0,0.25)',\r\n    '0 0 1px 0 rgba(0,0,0,0.31), 0 8px 18px -8px rgba(0,0,0,0.25)',\r\n    '0 0 1px 0 rgba(0,0,0,0.31), 0 9px 18px -8px rgba(0,0,0,0.25)',\r\n    '0 0 1px 0 rgba(0,0,0,0.31), 0 10px 20px -8px rgba(0,0,0,0.25)',\r\n    '0 0 1px 0 rgba(0,0,0,0.31), 0 11px 20px -8px rgba(0,0,0,0.25)',\r\n    '0 0 1px 0 rgba(0,0,0,0.31), 0 12px 22px -8px rgba(0,0,0,0.25)',\r\n    '0 0 1px 0 rgba(0,0,0,0.31), 0 13px 22px -8px rgba(0,0,0,0.25)',\r\n    '0 0 1px 0 rgba(0,0,0,0.31), 0 14px 24px -8px rgba(0,0,0,0.25)',\r\n    '0 0 1px 0 rgba(0,0,0,0.31), 0 16px 28px -8px rgba(0,0,0,0.25)',\r\n    '0 0 1px 0 rgba(0,0,0,0.31), 0 18px 30px -8px rgba(0,0,0,0.25)',\r\n    '0 0 1px 0 rgba(0,0,0,0.31), 0 20px 32px -8px rgba(0,0,0,0.25)',\r\n    '0 0 1px 0 rgba(0,0,0,0.31), 0 22px 34px -8px rgba(0,0,0,0.25)',\r\n    '0 0 1px 0 rgba(0,0,0,0.31), 0 24px 36px -8px rgba(0,0,0,0.25)',\r\n  ],\r\n  typography: {\r\n    h1: {\r\n      fontWeight: 500,\r\n      fontSize: 35,\r\n      letterSpacing: '-0.24px',\r\n    },\r\n    h2: {\r\n      fontWeight: 500,\r\n      fontSize: 29,\r\n      letterSpacing: '-0.24px',\r\n    },\r\n    h3: {\r\n      fontWeight: 500,\r\n      fontSize: 24,\r\n      letterSpacing: '-0.06px',\r\n    },\r\n    h4: {\r\n      fontWeight: 500,\r\n      fontSize: 20,\r\n      letterSpacing: '-0.06px',\r\n    },\r\n    h5: {\r\n      fontWeight: 500,\r\n      fontSize: 16,\r\n      letterSpacing: '-0.05px',\r\n    },\r\n    h6: {\r\n      fontWeight: 500,\r\n      fontSize: 14,\r\n      letterSpacing: '-0.05px',\r\n    },\r\n    overline: {\r\n      fontWeight: 500,\r\n    },\r\n  },\r\n})\r\n\r\nexport default theme\r\n","import { initializeApp } from 'firebase/app'\r\nimport { getAnalytics } from 'firebase/analytics'\r\nimport { getAuth } from 'firebase/auth'\r\nimport { getFirestore } from 'firebase/firestore'\r\nimport { getStorage } from 'firebase/storage'\r\n\r\n// const firebaseConfig = {\r\n//   apiKey: 'AIzaSyDGpc3IFaTYM-3CQnF6YHdapasZBcpZrEo',\r\n//   authDomain: 'evencloud-26d32.firebaseapp.com',\r\n//   databaseURL: 'https://evencloud-26d32.firebaseio.com',\r\n//   projectId: 'evencloud-26d32',\r\n//   storageBucket: 'evencloud-26d32.appspot.com',\r\n//   messagingSenderId: '599725599274',\r\n//   appId: '1:599725599274:web:0a3c20e350260df4a1f153',\r\n//   measurementId: 'G-PXGR5P46SP',\r\n// }\r\n\r\nconst firebaseConfig = {\r\n    apiKey: 'AIzaSyCB3eqMf02L6kH_F7MAuwXUQVd1dFZfVFQ',\r\n    authDomain: 'mobiletracking-cd8f2.firebaseapp.com',\r\n    databaseURL: 'https://mobiletracking-cd8f2.firebaseio.com',\r\n    projectId: 'mobiletracking-cd8f2',\r\n    storageBucket: 'mobiletracking-cd8f2.appspot.com',\r\n    messagingSenderId: '448981545000',\r\n    appId: '1:448981545000:web:14011a88c4a6079456051d',\r\n    measurementId: 'G-M9EEMS9J5G',\r\n}\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig)\r\nconst analytics = getAnalytics(app)\r\nconst db = getFirestore(app)\r\nconst auth = getAuth(app)\r\nconst storage = getStorage(app)\r\n\r\nexport { db, auth, app, storage }\r\n","import { useState, useEffect } from 'react'\r\nimport {\r\n    Link,\r\n    Link as RouterLink,\r\n    Navigate,\r\n    useNavigate,\r\n} from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\nimport {\r\n    AppBar,\r\n    Avatar,\r\n    Box,\r\n    Divider,\r\n    IconButton,\r\n    List,\r\n    ListItem,\r\n    ListItemAvatar,\r\n    ListItemText,\r\n    Popover,\r\n    Toolbar,\r\n} from '@mui/material'\r\nimport MenuIcon from '@mui/icons-material/Menu'\r\nimport NotificationsIcon from '@mui/icons-material/Notifications'\r\nimport Account from '@mui/icons-material/AccountCircle'\r\nimport { auth, db } from '../Firebase/index'\r\nimport {\r\n    onSnapshot,\r\n    doc,\r\n    query,\r\n    orderBy,\r\n    collection,\r\n    limit,\r\n} from 'firebase/firestore'\r\nimport moment from 'moment'\r\nimport { Image } from '@mui/icons-material'\r\nimport { signOut } from 'firebase/auth'\r\nimport LogoutIcon from '@mui/icons-material/Logout'\r\n\r\nconst DashboardNavbar = ({ onMobileNavOpen, ...rest }) => {\r\n    const [notifications, setNotifications] = useState([])\r\n    const [anchorEl, setAnchorEl] = useState(null)\r\n    const [open, setOpen] = useState(false)\r\n\r\n    const accept =\r\n        'https://firebasestorage.googleapis.com/v0/b/mobiletracking-cd8f2.appspot.com/o/accept.png?alt=media&token=83902429-f4af-40b8-852c-faca1e144a92'\r\n    const pending =\r\n        'https://firebasestorage.googleapis.com/v0/b/mobiletracking-cd8f2.appspot.com/o/pending.png?alt=media&token=20afc88a-6914-4657-962e-ba9d5e684ae5'\r\n    const reject =\r\n        'https://firebasestorage.googleapis.com/v0/b/mobiletracking-cd8f2.appspot.com/o/reject.png?alt=media&token=25da312f-2ec2-492d-97d9-1d47ecd1afd5'\r\n\r\n    const handleMenu = (event) => {\r\n        setAnchorEl(event.currentTarget)\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null)\r\n        setOpen(false)\r\n    }\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget)\r\n        setOpen(true)\r\n    }\r\n\r\n    const navigate = useNavigate()\r\n\r\n    const userData = sessionStorage.getItem('userData')\r\n        ? JSON.parse(sessionStorage.getItem('userData'))\r\n        : null\r\n\r\n    useEffect(() => {\r\n        const authToken = sessionStorage.getItem('authToken')\r\n\r\n        if (!authToken) {\r\n            navigate('/login')\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (userData !== null) {\r\n            const notificationRef = collection(\r\n                db,\r\n                'trackingWebNotification',\r\n                userData?.uid,\r\n                'notifications'\r\n            )\r\n            const q = query(\r\n                notificationRef,\r\n                orderBy('createdAt', 'desc'),\r\n                limit(100)\r\n            )\r\n\r\n            const unsub = onSnapshot(q, (snapshots) => {\r\n                const list = []\r\n                snapshots.forEach((snap) => {\r\n                    list.push(snap.data())\r\n                })\r\n\r\n                setNotifications(list)\r\n            })\r\n\r\n            return () => unsub()\r\n        }\r\n    }, [])\r\n\r\n    const getTime = (sec) => {\r\n        const str = moment(new Date(sec * 1000)).fromNow()\r\n\r\n        switch (str) {\r\n            case 'in a few seconds':\r\n                return 'few sec'\r\n            case 'a few seconds ago':\r\n                return 'few sec'\r\n            case 'a minute ago':\r\n                return '1m'\r\n            case 'an hour ago':\r\n                return '1h'\r\n            case 'a day ago':\r\n                return '1day'\r\n            default:\r\n                const first = str.split(' ')[0]\r\n                let mid = str.split(' ')[1]\r\n                if (mid === 'minutes' || mid === 'minute') {\r\n                    mid = 'm'\r\n                }\r\n                if (mid === 'hours' || mid === 'hour') {\r\n                    mid = 'h'\r\n                }\r\n                if (mid === 'days' || mid === 'day') {\r\n                    mid = 'd'\r\n                }\r\n                return first + mid\r\n        }\r\n    }\r\n\r\n    const logout = () => {\r\n        sessionStorage.removeItem('userData')\r\n        signOut(auth)\r\n            .then(() => navigate('/login', { replace: true }))\r\n            .catch((error) => console.log(error))\r\n    }\r\n\r\n    return (\r\n        <AppBar elevation={0} {...rest}>\r\n            <Toolbar\r\n                sx={{\r\n                    backgroundColor: '#007bff',\r\n                    display: 'flex',\r\n                    justifyContent: 'flex-end',\r\n                    gap: 1,\r\n                }}\r\n            >\r\n                <IconButton onClick={handleClick}>\r\n                    <NotificationsIcon sx={{ color: 'white' }} />\r\n                </IconButton>\r\n                <Popover\r\n                    id='notification'\r\n                    open={open}\r\n                    anchorEl={anchorEl}\r\n                    onClose={handleClose}\r\n                    anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'left',\r\n                    }}\r\n                    className='notification'\r\n                >\r\n                    <List sx={{ padding: 2 }}>\r\n                        {notifications.map((x, i) => (\r\n                            <Box key={++i} style={{ padding: 2 }}>\r\n                                <ListItem sx={{ mt: 1.5 }}>\r\n                                    <ListItemAvatar>\r\n                                        {x.requestStatus === 'pending' && (\r\n                                            <Avatar src={pending} />\r\n                                        )}\r\n                                        {x.requestStatus === 'accepted' && (\r\n                                            <Avatar src={accept} />\r\n                                        )}\r\n                                        {x.requestStatus === 'rejected' && (\r\n                                            <Avatar src={reject} />\r\n                                        )}\r\n                                    </ListItemAvatar>\r\n                                    <ListItemText\r\n                                        primary={x.message}\r\n                                        secondary={\r\n                                            getTime(x.createdAt.seconds) +\r\n                                            ' ago'\r\n                                        }\r\n                                    />\r\n                                </ListItem>\r\n                                <Divider />\r\n                            </Box>\r\n                        ))}\r\n                    </List>\r\n                </Popover>\r\n\r\n                <Link to='/app/profile'>\r\n                    <IconButton onClick={handleMenu}>\r\n                        <Account sx={{ color: 'white' }} />\r\n                    </IconButton>\r\n                </Link>\r\n\r\n                <IconButton onClick={logout}>\r\n                    <LogoutIcon sx={{ color: 'white' }} />\r\n                </IconButton>\r\n            </Toolbar>\r\n        </AppBar>\r\n    )\r\n}\r\n\r\nDashboardNavbar.propTypes = {\r\n    onMobileNavOpen: PropTypes.func,\r\n}\r\n\r\nexport default DashboardNavbar\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { makeStyles } from '@mui/styles'\r\nimport Drawer from '@mui/material/Drawer'\r\nimport List from '@mui/material/List'\r\nimport CssBaseline from '@mui/material/CssBaseline'\r\nimport ListItem from '@mui/material/ListItem'\r\nimport LocationOnIcon from '@mui/icons-material/LocationOnOutlined'\r\nimport PhoneAndroidIcon from '@mui/icons-material/PhoneAndroidOutlined'\r\nimport GroupsIcon from '@mui/icons-material/GroupsOutlined'\r\nimport AdminPanelSettingsIcon from '@mui/icons-material/AdminPanelSettingsRounded'\r\nimport SignalCellularAltIcon from '@mui/icons-material/SignalCellularAltOutlined'\r\nimport MonetizationOnOutlinedIcon from '@mui/icons-material/MonetizationOnOutlined'\r\nimport { Settings, HomeOutlined } from '@mui/icons-material'\r\nimport { AppBar, Toolbar, Typography } from '@mui/material'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    drawer: {\r\n        width: 60,\r\n        flexShrink: 0,\r\n        whiteSpace: 'nowrap',\r\n    },\r\n\r\n    appBar: {\r\n        width: `calc(100% - ${60}px)`,\r\n        marginLeft: 60,\r\n    },\r\n\r\n    toolbar: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n    },\r\n    listContainer: {\r\n        display: 'flex',\r\n        height: '100%',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n    },\r\n}))\r\n\r\nconst DashboardSidebar = () => {\r\n    const classes = useStyles()\r\n\r\n    const [selectedIndex, setSelectedIndex] = React.useState(0)\r\n\r\n    const adminData = sessionStorage.getItem('adminData')\r\n        ? JSON.parse(sessionStorage.getItem('adminData'))\r\n        : null\r\n\r\n    const paths = [\r\n        '/app/dashboard',\r\n        '/app/manage-hotspots',\r\n        '/app/manage-devices',\r\n        '/app/reports',\r\n        '/app/manage-groups',\r\n        '/app/manage-admins',\r\n        '/app/pricing',\r\n    ]\r\n\r\n    const names = [\r\n        'Overview',\r\n        'Hotspots',\r\n        'Devices',\r\n        'Reports',\r\n        'Groups',\r\n        'Admins',\r\n        'Pricing',\r\n    ]\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline />\r\n            <Drawer variant='permanent'>\r\n                <div className={classes.listContainer}>\r\n                    <List>\r\n                        {adminData === null\r\n                            ? [\r\n                                  <HomeOutlined\r\n                                      fontSize='large'\r\n                                      sx={{ color: '#6600cc' }}\r\n                                  />,\r\n                                  <LocationOnIcon\r\n                                      fontSize='large'\r\n                                      sx={{ color: 'red' }}\r\n                                  />,\r\n                                  <PhoneAndroidIcon\r\n                                      fontSize='large'\r\n                                      sx={{ color: '#007bff' }}\r\n                                  />,\r\n                                  <SignalCellularAltIcon\r\n                                      fontSize='large'\r\n                                      sx={{ color: '#fc6a03' }}\r\n                                  />,\r\n                                  <GroupsIcon\r\n                                      fontSize='large'\r\n                                      sx={{ color: 'green' }}\r\n                                  />,\r\n                                  <AdminPanelSettingsIcon\r\n                                      fontSize='large'\r\n                                      sx={{ color: '#cc33ff' }}\r\n                                  />,\r\n                                  <MonetizationOnOutlinedIcon\r\n                                      fontSize='large'\r\n                                      sx={{ color: '#3F00FF' }}\r\n                                  />,\r\n                              ].map((text, index) => (\r\n                                  <Link key={index} to={paths[index]}>\r\n                                      <ListItem\r\n                                          sx={{\r\n                                              pt: 1.5,\r\n                                              pb: 1.5,\r\n                                              px: 1,\r\n                                              display: 'flex',\r\n                                              flexDirection: 'column',\r\n                                              borderBottomColor: '#007bff',\r\n                                              borderBottomWidth: 10,\r\n                                          }}\r\n                                          onClick={() =>\r\n                                              setSelectedIndex(index)\r\n                                          }\r\n                                      >\r\n                                          <div>{text}</div>\r\n\r\n                                          <Typography\r\n                                              color='black'\r\n                                              sx={{\r\n                                                  fontSize: 12,\r\n                                              }}\r\n                                          >\r\n                                              {names[index]}\r\n                                          </Typography>\r\n                                      </ListItem>\r\n                                  </Link>\r\n                              ))\r\n                            : [\r\n                                  <HomeOutlined\r\n                                      fontSize='large'\r\n                                      sx={{ color: '#6600cc' }}\r\n                                  />,\r\n                                  <LocationOnIcon\r\n                                      fontSize='large'\r\n                                      sx={{ color: 'red' }}\r\n                                  />,\r\n                                  <PhoneAndroidIcon\r\n                                      fontSize='large'\r\n                                      sx={{ color: '#007bff' }}\r\n                                  />,\r\n                                  <SignalCellularAltIcon\r\n                                      fontSize='large'\r\n                                      sx={{ color: 'orange' }}\r\n                                  />,\r\n                              ].map((text, index) => (\r\n                                  <Link key={index} to={paths[index]}>\r\n                                      <ListItem\r\n                                          sx={{\r\n                                              pt: 1.5,\r\n                                              pb: 1.5,\r\n                                              px: 1,\r\n                                              display: 'flex',\r\n                                              flexDirection: 'column',\r\n                                              borderBottomColor: '#007bff',\r\n                                              borderBottomWidth: 10,\r\n                                          }}\r\n                                          onClick={() =>\r\n                                              setSelectedIndex(index)\r\n                                          }\r\n                                      >\r\n                                          <div>{text}</div>\r\n\r\n                                          <Typography\r\n                                              color='black'\r\n                                              sx={{\r\n                                                  fontSize: 12,\r\n                                              }}\r\n                                          >\r\n                                              {names[index]}\r\n                                          </Typography>\r\n                                      </ListItem>\r\n                                  </Link>\r\n                              ))}\r\n                    </List>\r\n                </div>\r\n            </Drawer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DashboardSidebar\r\n","import { useState } from 'react'\r\nimport { Outlet } from 'react-router-dom'\r\nimport { styled } from '@mui/material'\r\nimport DashboardNavbar from './DashboardNavbar'\r\nimport DashboardSidebar from './DashboardSidebar'\r\n\r\nconst DashboardLayoutRoot = styled('div')(({ theme }) => ({\r\n  backgroundColor: theme.palette.background.default,\r\n  display: 'flex',\r\n  height: '100%',\r\n  overflow: 'hidden',\r\n  width: '100%',\r\n}))\r\n\r\nconst DashboardLayoutWrapper = styled('div')(({ theme }) => ({\r\n  display: 'flex',\r\n  flex: '1 1 auto',\r\n  overflow: 'hidden',\r\n  paddingTop: 64,\r\n  [theme.breakpoints.up('md')]: {\r\n    paddingLeft: 68,\r\n  },\r\n}))\r\n\r\nconst DashboardLayoutContainer = styled('div')({\r\n  display: 'flex',\r\n  flex: '1 1 auto',\r\n  overflow: 'hidden',\r\n})\r\n\r\nconst DashboardLayoutContent = styled('div')({\r\n  flex: '1 1 auto',\r\n  height: '100%',\r\n  overflow: 'auto',\r\n})\r\n\r\nconst DashboardLayout = () => {\r\n  const [isMobileNavOpen, setMobileNavOpen] = useState(false)\r\n\r\n  return (\r\n    <DashboardLayoutRoot>\r\n      <DashboardNavbar onMobileNavOpen={() => setMobileNavOpen(true)} />\r\n      <DashboardSidebar\r\n        onMobileClose={() => setMobileNavOpen(false)}\r\n        openMobile={isMobileNavOpen}\r\n      />\r\n      <DashboardLayoutWrapper>\r\n        <DashboardLayoutContainer>\r\n          <DashboardLayoutContent>\r\n            <Outlet />\r\n          </DashboardLayoutContent>\r\n        </DashboardLayoutContainer>\r\n      </DashboardLayoutWrapper>\r\n    </DashboardLayoutRoot>\r\n  )\r\n}\r\n\r\nexport default DashboardLayout\r\n","import { Outlet } from 'react-router-dom'\r\nimport { styled } from '@mui/material'\r\nimport MainNavbar from './MainNavbar'\r\n\r\nconst MainLayoutRoot = styled('div')(({ theme }) => ({\r\n  backgroundColor: theme.palette.background.paper,\r\n  display: 'flex',\r\n  height: '100%',\r\n  overflow: 'hidden',\r\n  width: '100%',\r\n}))\r\n\r\nconst MainLayoutWrapper = styled('div')({\r\n  display: 'flex',\r\n  flex: '1 1 auto',\r\n  overflow: 'hidden',\r\n})\r\n\r\nconst MainLayoutContainer = styled('div')({\r\n  display: 'flex',\r\n  flex: '1 1 auto',\r\n  overflow: 'hidden',\r\n})\r\n\r\nconst MainLayoutContent = styled('div')({\r\n  flex: '1 1 auto',\r\n  height: '100%',\r\n  overflow: 'auto',\r\n})\r\n\r\nconst MainLayout = () => (\r\n  <MainLayoutRoot>\r\n    <MainLayoutWrapper>\r\n      <MainLayoutContainer>\r\n        <MainLayoutContent>\r\n          <Outlet />\r\n        </MainLayoutContent>\r\n      </MainLayoutContainer>\r\n    </MainLayoutWrapper>\r\n  </MainLayoutRoot>\r\n)\r\n\r\nexport default MainLayout\r\n","import dotenv from 'dotenv'\r\n\r\ndotenv.config()\r\n\r\nconst API_SERVICE = process.env.REACT_APP_API_SERVICE\r\nconst SECRET_KEY = process.env.REACT_APP_SECRET_KEY\r\nconst MAP_TOKEN = process.env.REACT_APP_MAP_TOKEN\r\nconst MAP_STYLE = process.env.REACT_APP_MAP_STYLE\r\n\r\n// const API_SERVICE = \"https://trackermobileapp.herokuapp.com\";\r\n\r\nexport { API_SERVICE, SECRET_KEY, MAP_TOKEN, MAP_STYLE }\r\n","import React from 'react'\r\nimport { Box, Stack, Typography } from '@mui/material'\r\nimport {\r\n  Timeline,\r\n  TimelineConnector,\r\n  TimelineContent,\r\n  TimelineDot,\r\n  TimelineItem,\r\n  TimelineSeparator,\r\n} from '@mui/lab'\r\nimport moment from 'moment'\r\n\r\nconst LocationTimeline = (props) => {\r\n  return (\r\n    <Box>\r\n      <Timeline sx={{ px: 0, mr: 4 }}>\r\n        {props.locations.map((location) => (\r\n          <TimelineItem>\r\n            <TimelineSeparator>\r\n              <TimelineDot variant=\"outlined\" color=\"error\" />\r\n              <TimelineConnector />\r\n            </TimelineSeparator>\r\n            <TimelineContent>\r\n              <Box sx={{ pb: 1.3 }}>\r\n                <Typography component=\"h6\">{location.address}</Typography>\r\n                <Typography component=\"p\" sx={{ fontSize: 12 }}>\r\n                  {moment(location.createdAt).format('DD MMMM YYYY - hh:mm a')}\r\n                </Typography>\r\n              </Box>\r\n            </TimelineContent>\r\n          </TimelineItem>\r\n        ))}\r\n      </Timeline>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default React.memo(LocationTimeline)\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Helmet } from 'react-helmet'\r\nimport { Avatar, Box, Container, Typography } from '@mui/material'\r\nimport ReactMapGL, { Marker, Popup } from 'react-map-gl'\r\nimport axios from 'axios'\r\nimport { API_SERVICE, MAP_STYLE, MAP_TOKEN } from '../URI'\r\nimport { db } from '../Firebase/index'\r\nimport { doc, onSnapshot } from 'firebase/firestore'\r\nimport LocationTimeline from '../components/dashboard/LocationTimeline'\r\n\r\nconst Locationview = (props) => {\r\n    const { user } = props\r\n    const { phoneNumber, createdBy } = user\r\n\r\n    console.log(user, phoneNumber, createdBy)\r\n\r\n    const [lat, setlat] = useState(0)\r\n    const [long, setlong] = useState(0)\r\n    const [viewport, setViewport] = useState({\r\n        width: '100%',\r\n        height: '100%',\r\n        latitude: lat,\r\n        longitude: long,\r\n        zoom: 15,\r\n    })\r\n\r\n    const [selected, setSelected] = useState(false)\r\n    const [selectedLat, setSelectedLat] = useState(null)\r\n    const [selectedLong, setSelectedLong] = useState(null)\r\n    const [userlocationdata, setuserlocationdata] = useState({})\r\n    const [imgUri, setImgUri] = useState('')\r\n    const [load, setLoad] = useState(false)\r\n    const [showDetails, setShowDetails] = useState(false)\r\n    const [locations, setLocations] = useState([])\r\n\r\n    useEffect(async () => {\r\n        setLoad(true)\r\n        if (lat === 0 || long === 0) {\r\n            return\r\n        }\r\n        axios\r\n            .get(`${API_SERVICE}/getlatlong/${selectedLat}/${selectedLong}`)\r\n            .then((response) => {\r\n                console.log('SETTING DATA')\r\n                setuserlocationdata(response.data)\r\n                setLoad(false)\r\n            })\r\n            .catch((err) => console.log(err))\r\n    }, [selectedLat, selectedLong])\r\n\r\n    useEffect(() => {\r\n        var userRef = doc(db, 'trackerAndroidUser', phoneNumber)\r\n\r\n        const unsub = onSnapshot(userRef, (document) => {\r\n            if (document.exists()) {\r\n                const data = document.data()\r\n                setViewport({\r\n                    width: '100%',\r\n                    height: 800,\r\n                    latitude: data.liveLocation.latitude,\r\n                    longitude: data.liveLocation.longitude,\r\n                    zoom: 15,\r\n                })\r\n                setlat(data.liveLocation.latitude)\r\n                setlong(data.liveLocation.longitude)\r\n                setImgUri(data.profilePicture)\r\n            }\r\n        })\r\n\r\n        return () => unsub()\r\n    }, [phoneNumber])\r\n\r\n    useEffect(async () => {\r\n        try {\r\n            const { data } = await axios.get(\r\n                `${API_SERVICE}/get/location/${createdBy}/${phoneNumber}/${\r\n                    new Date().getMonth() + 1\r\n                }`\r\n            )\r\n\r\n            setLocations(data)\r\n        } catch (error) {\r\n            console.log(error.message)\r\n        }\r\n    }, [user])\r\n\r\n    const handleShowDetails = () => {\r\n        if (showDetails) {\r\n            setShowDetails(false)\r\n            setViewport({ ...viewport, width: '100%' })\r\n        } else {\r\n            setShowDetails(true)\r\n            setViewport({ ...viewport, width: '100%' })\r\n        }\r\n    }\r\n\r\n    const getInitials = (name) => {\r\n        const arr = name.split(' ')\r\n        let initials\r\n        if (arr.length === 1) {\r\n            initials = arr[0].split('')[0].toUpperCase()\r\n        } else {\r\n            initials =\r\n                arr[0].split('')[0].toUpperCase() +\r\n                arr[1].split('')[0].toUpperCase()\r\n        }\r\n\r\n        return initials\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Helmet>\r\n                <title>Dashboard</title>\r\n            </Helmet>\r\n            <Box\r\n                sx={{\r\n                    backgroundColor: 'background.default',\r\n                    minHeight: '100%',\r\n                    display: 'flex',\r\n                }}\r\n            >\r\n                <Container maxWidth={true} sx={{ px: 0, height: '100' }}>\r\n                    {user.trackingStatus === 'accepted' && (\r\n                        <ReactMapGL\r\n                            {...viewport}\r\n                            mapboxApiAccessToken={MAP_TOKEN}\r\n                            mapStyle={MAP_STYLE}\r\n                            onViewportChange={(nextViewport) =>\r\n                                setViewport(nextViewport)\r\n                            }\r\n                        >\r\n                            <Marker\r\n                                key='India Gate1'\r\n                                latitude={lat}\r\n                                longitude={long}\r\n                            >\r\n                                <button\r\n                                    className='marker-btn'\r\n                                    onMouseEnter={(e) => {\r\n                                        e.preventDefault()\r\n                                        setSelected(true)\r\n                                        setSelectedLat(lat)\r\n                                        setSelectedLong(long)\r\n                                    }}\r\n                                    onMouseLeave={(e) => {\r\n                                        e.preventDefault()\r\n                                        setSelected(false)\r\n                                    }}\r\n                                    onClick={handleShowDetails}\r\n                                >\r\n                                    <Avatar\r\n                                        src={imgUri}\r\n                                        sx={{\r\n                                            backgroundColor: 'orange',\r\n                                        }}\r\n                                    >\r\n                                        {getInitials(user.fullName)}\r\n                                    </Avatar>\r\n                                </button>\r\n                            </Marker>\r\n                            {selected ? (\r\n                                <Popup\r\n                                    latitude={selectedLat}\r\n                                    longitude={selectedLong}\r\n                                >\r\n                                    <div>\r\n                                        <h2 style={{ textAlign: 'center' }}>\r\n                                            {user.fullName}\r\n                                        </h2>\r\n                                        {load ? (\r\n                                            <p>Fetching Location ...</p>\r\n                                        ) : (\r\n                                            <p>\r\n                                                {\r\n                                                    userlocationdata.formattedAddress\r\n                                                }\r\n                                            </p>\r\n                                        )}\r\n                                    </div>\r\n                                </Popup>\r\n                            ) : null}\r\n                        </ReactMapGL>\r\n                    )}\r\n\r\n                    {user.trackingStatus === 'pending' && (\r\n                        <Typography\r\n                            sx={{ margin: 10, textAlign: 'center' }}\r\n                            component='h1'\r\n                        >\r\n                            Tracking request is in pending\r\n                        </Typography>\r\n                    )}\r\n\r\n                    {user.trackingStatus === 'rejected' && (\r\n                        <Box sx={{ position: 'relative' }}>\r\n                            <Box\r\n                                sx={{\r\n                                    position: 'absolute',\r\n                                    zIndex: 1000,\r\n                                    backgroundColor: '#f5f5f5',\r\n                                    borderRadius: 25,\r\n                                    right: '50%',\r\n                                    bottom: '30px',\r\n                                    transform: 'translate(50%)',\r\n                                    px: 2,\r\n                                }}\r\n                            >\r\n                                <Typography\r\n                                    sx={{\r\n                                        margin: 2,\r\n                                        textAlign: 'center',\r\n                                        color: 'red',\r\n                                        fontWeight: 'bold',\r\n                                    }}\r\n                                    component='h1'\r\n                                >\r\n                                    Tracking request is rejected\r\n                                </Typography>\r\n                            </Box>\r\n\r\n                            <ReactMapGL\r\n                                {...viewport}\r\n                                mapboxApiAccessToken={MAP_TOKEN}\r\n                                mapStyle={MAP_STYLE}\r\n                                onViewportChange={(nextViewport) =>\r\n                                    setViewport(nextViewport)\r\n                                }\r\n                            >\r\n                                <Marker\r\n                                    key='India Gate1'\r\n                                    latitude={lat}\r\n                                    longitude={long}\r\n                                >\r\n                                    <button\r\n                                        className='marker-btn'\r\n                                        onMouseEnter={(e) => {\r\n                                            e.preventDefault()\r\n                                            setSelected(true)\r\n                                            setSelectedLat(lat)\r\n                                            setSelectedLong(long)\r\n                                        }}\r\n                                        onMouseLeave={(e) => {\r\n                                            e.preventDefault()\r\n                                            setSelected(false)\r\n                                        }}\r\n                                        onClick={handleShowDetails}\r\n                                    >\r\n                                        <Avatar\r\n                                            src={imgUri}\r\n                                            sx={{\r\n                                                backgroundColor: 'orange',\r\n                                            }}\r\n                                        />\r\n                                    </button>\r\n                                </Marker>\r\n                                {selected ? (\r\n                                    <Popup\r\n                                        latitude={selectedLat}\r\n                                        longitude={selectedLong}\r\n                                    >\r\n                                        <div>\r\n                                            <h2 style={{ textAlign: 'center' }}>\r\n                                                {user.fullName}\r\n                                            </h2>\r\n                                            {load ? (\r\n                                                <p>Fetching Location ...</p>\r\n                                            ) : (\r\n                                                <p>\r\n                                                    {\r\n                                                        userlocationdata.formattedAddress\r\n                                                    }\r\n                                                </p>\r\n                                            )}\r\n                                        </div>\r\n                                    </Popup>\r\n                                ) : null}\r\n                            </ReactMapGL>\r\n                        </Box>\r\n                    )}\r\n                </Container>\r\n                {showDetails && (\r\n                    <Box\r\n                        sx={{\r\n                            width: 400,\r\n                            display: 'flex',\r\n                            justifyContent: 'flex-start',\r\n                        }}\r\n                    >\r\n                        {locations.length !== 0 ? (\r\n                            <LocationTimeline locations={locations} />\r\n                        ) : (\r\n                            <Box\r\n                                sx={{\r\n                                    width: 300,\r\n                                    display: 'flex',\r\n                                    alignItems: 'center',\r\n                                    justifyContent: 'center',\r\n                                }}\r\n                            >\r\n                                <Typography component='h5' variant='h5'>\r\n                                    No History Found\r\n                                </Typography>\r\n                            </Box>\r\n                        )}\r\n                    </Box>\r\n                )}\r\n            </Box>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default React.memo(Locationview)\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Helmet } from 'react-helmet'\r\nimport { Avatar, Box, Container, Typography } from '@mui/material'\r\nimport ReactMapGL, { Marker, Popup } from 'react-map-gl'\r\nimport axios from 'axios'\r\nimport LocationTimeline from '../components/dashboard/LocationTimeline'\r\n\r\nimport { API_SERVICE, MAP_STYLE, MAP_TOKEN } from '../URI'\r\n\r\nconst AllLocationView = (props) => {\r\n    const { userList, senderId, trackingList } = props\r\n\r\n    const [selected, setSelected] = useState(false)\r\n    const [selectedLat, setSelectedLat] = useState(null)\r\n    const [selectedLong, setSelectedLong] = useState(null)\r\n    const [selectedLocation, setSelectedLocation] = useState(0)\r\n    const [selectedDevice, setSelectedDevice] = useState('')\r\n    const [userlocationdata, setuserlocationdata] = useState({})\r\n    const [lat, setlat] = useState(28.598)\r\n    const [long, setlong] = useState(77.3)\r\n    const [load, setLoad] = useState(false)\r\n    const [showDetails, setShowDetails] = useState(false)\r\n    const [locations, setLocations] = useState([])\r\n    const [trackingData, setTrackingData] = useState([])\r\n\r\n    const [viewport, setViewport] = useState({\r\n        width: '100%',\r\n        height: '100%',\r\n        latitude: lat,\r\n        longitude: long,\r\n        zoom: 11,\r\n    })\r\n\r\n    useEffect(() => {\r\n        const data = []\r\n        trackingList.forEach((list) => {\r\n            userList.forEach((item) => {\r\n                if (list.phoneNumber === item.phoneNumber) {\r\n                    list['location'] = item.liveLocation\r\n                    data.push(list)\r\n                }\r\n            })\r\n        })\r\n\r\n        setTrackingData(data)\r\n    }, [trackingList, userList])\r\n\r\n    useEffect(async () => {\r\n        setLoad(true)\r\n        axios\r\n            .get(`${API_SERVICE}/getlatlong/${selectedLat}/${selectedLong}`)\r\n            .then((response) => {\r\n                setuserlocationdata(response.data)\r\n                setLoad(false)\r\n            })\r\n            .catch((err) => console.log(err))\r\n    }, [selectedLat, selectedLong])\r\n\r\n    useEffect(async () => {\r\n        if (selectedDevice.length === 0) {\r\n            return\r\n        }\r\n        try {\r\n            const { data } = await axios.get(\r\n                `${API_SERVICE}/get/location/${senderId}/${selectedDevice}/${\r\n                    new Date().getMonth() + 1\r\n                }`\r\n            )\r\n\r\n            setLocations(data)\r\n        } catch (error) {\r\n            console.log(error.message)\r\n        }\r\n    }, [selectedDevice])\r\n\r\n    const handleShowDetails = (user) => {\r\n        if (showDetails) {\r\n            setShowDetails(false)\r\n            setViewport({ ...viewport, width: '100%' })\r\n        } else {\r\n            setShowDetails(true)\r\n            setViewport({ ...viewport, width: '100%' })\r\n            setSelectedDevice(user.phoneNumber)\r\n        }\r\n    }\r\n\r\n    const getInitials = (name) => {\r\n        const arr = name.split(' ')\r\n        let initials\r\n        if (arr.length === 1) {\r\n            initials = arr[0].split('')[0].toUpperCase()\r\n        } else {\r\n            initials =\r\n                arr[0].split('')[0].toUpperCase() +\r\n                arr[1].split('')[0].toUpperCase()\r\n        }\r\n\r\n        return initials\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Helmet>\r\n                <title>Dashboard</title>\r\n            </Helmet>\r\n            <Box\r\n                sx={{\r\n                    backgroundColor: 'background.default',\r\n                    minHeight: '100%',\r\n                    display: 'flex',\r\n                }}\r\n            >\r\n                <Container maxWidth={true} sx={{ height: '100' }}>\r\n                    <ReactMapGL\r\n                        {...viewport}\r\n                        mapboxApiAccessToken={MAP_TOKEN}\r\n                        mapStyle={MAP_STYLE}\r\n                        onViewportChange={(nextViewport) =>\r\n                            setViewport(nextViewport)\r\n                        }\r\n                    >\r\n                        {trackingData.map((user, index) => (\r\n                            <Marker\r\n                                key={user.phoneNumber}\r\n                                latitude={user.location.latitude}\r\n                                longitude={user.location.longitude}\r\n                            >\r\n                                <button\r\n                                    className='marker-btn'\r\n                                    onMouseEnter={(e) => {\r\n                                        e.preventDefault()\r\n                                        setSelected(true)\r\n                                        setSelectedLat(user.location.latitude)\r\n                                        setSelectedLong(user.location.longitude)\r\n                                        setlat(user.location.latitude)\r\n                                        setlong(user.location.longitude)\r\n\r\n                                        setSelectedLocation(index)\r\n                                    }}\r\n                                    onMouseLeave={(e) => {\r\n                                        e.preventDefault()\r\n                                        setSelected(false)\r\n                                    }}\r\n                                    onClick={() => handleShowDetails(user)}\r\n                                >\r\n                                    <Avatar sx={{ backgroundColor: 'orange' }}>\r\n                                        {getInitials(user.fullName)}\r\n                                    </Avatar>\r\n                                </button>\r\n                            </Marker>\r\n                        ))}\r\n                        {selected ? (\r\n                            <Popup\r\n                                latitude={selectedLat}\r\n                                longitude={selectedLong}\r\n                                onClose={() => {\r\n                                    setSelected(false)\r\n                                    setSelectedLat(0)\r\n                                    setSelectedLong(0)\r\n                                }}\r\n                            >\r\n                                <div>\r\n                                    <h2\r\n                                        style={{\r\n                                            textAlign: 'center',\r\n                                            marginBottom: '10px',\r\n                                        }}\r\n                                    >\r\n                                        {\r\n                                            trackingData[selectedLocation]\r\n                                                .fullName\r\n                                        }\r\n                                    </h2>\r\n                                    {load ? (\r\n                                        <p>Fetching Location ...</p>\r\n                                    ) : (\r\n                                        <p>\r\n                                            {userlocationdata.formattedAddress}\r\n                                        </p>\r\n                                    )}\r\n                                </div>\r\n                            </Popup>\r\n                        ) : null}\r\n                    </ReactMapGL>\r\n                </Container>\r\n                {showDetails && (\r\n                    <Box\r\n                        sx={{\r\n                            width: 400,\r\n                            display: 'flex',\r\n                            justifyContent: 'flex-start',\r\n                        }}\r\n                    >\r\n                        {locations.length !== 0 ? (\r\n                            <LocationTimeline locations={locations} />\r\n                        ) : (\r\n                            <Box\r\n                                sx={{\r\n                                    width: 300,\r\n                                    display: 'flex',\r\n                                    alignItems: 'center',\r\n                                    justifyContent: 'center',\r\n                                }}\r\n                            >\r\n                                <Typography component='h5' variant='h5'>\r\n                                    No History Found\r\n                                </Typography>\r\n                            </Box>\r\n                        )}\r\n                    </Box>\r\n                )}\r\n            </Box>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default React.memo(AllLocationView)\r\n","export const ADD_FORM_SUCCESS = 'ADD_FORM_SUCCESS'\r\nexport const GET_FORM_SUCCESS = 'GET_FORM_SUCCESS'\r\nexport const DELETE_FORM_SUCCESS = 'DELETE_FORM_SUCCESS'\r\n\r\nexport const ADD_FORM_FAIL = 'ADD_FORM_FAIL'\r\nexport const GET_FORM_FAIL = 'GET_FORM_FAIL'\r\nexport const DELETE_FORM_FAIL = 'DELETE_FORM_FAIL'\r\n\r\n// ***************** HOTSPOT ******************* //\r\n\r\nexport const CREATE_HOTSPOT_SUCCESS = 'CREATE_HOTSPOT_SUCCESS'\r\nexport const CREATE_HOTSPOT_FAIL = 'CREATE_HOTSPOT_FAIL'\r\n\r\nexport const GET_HOTSPOT_SUCCESS = 'GET_HOTSPOT_SUCCESS'\r\nexport const GET_HOTSPOT_FAIL = 'GET_HOTSPOT_FAIL'\r\n\r\nexport const UPDATE_HOTSPOT_SUCCESS = 'UPDATE_HOTSPOT_SUCCESS'\r\nexport const UPDATE_HOTSPOT_FAIL = 'UPDATE_HOTSPOT_FAIL'\r\n\r\nexport const DELETE_HOTSPOT_SUCCESS = 'DELETE_HOTSPOT_SUCCESS'\r\nexport const DELETE_HOTSPOT_FAIL = 'DELETE_HOTSPOT_FAIL'\r\n\r\n// ***************** GROUP ******************* //\r\n\r\nexport const CREATE_GROUP_SUCCESS = 'CREATE_GROUP_SUCCESS'\r\nexport const CREATE_GROUP_FAIL = 'CREATE_GROUP_FAIL'\r\n\r\nexport const GET_GROUP_SUCCESS = 'GET_GROUP_SUCCESS'\r\nexport const GET_GROUP_FAIL = 'GET_GROUP_FAIL'\r\n\r\nexport const UPDATE_GROUP_SUCCESS = 'UPDATE_GROUP_SUCCESS'\r\nexport const UPDATE_GROUP_FAIL = 'UPDATE_GROUP_FAIL'\r\n\r\nexport const DELETE_GROUP_SUCCESS = 'DELETE_GROUP_SUCCESS'\r\nexport const DELETE_GROUP_FAIL = 'DELETE_GROUP_FAIL'\r\n\r\n// ***************** ADMIN ******************* //\r\n\r\nexport const CREATE_ADMIN_SUCCESS = 'CREATE_ADMIN_SUCCESS'\r\nexport const CREATE_ADMIN_FAIL = 'CREATE_ADMIN_FAIL'\r\n\r\nexport const GET_ADMIN_SUCCESS = 'GET_ADMIN_SUCCESS'\r\nexport const GET_ADMIN_FAIL = 'GET_ADMIN_FAIL'\r\n\r\nexport const UPDATE_ADMIN_SUCCESS = 'UPDATE_ADMIN_SUCCESS'\r\nexport const UPDATE_ADMIN_FAIL = 'UPDATE_ADMIN_FAIL'\r\n\r\nexport const DELETE_ADMIN_SUCCESS = 'DELETE_ADMIN_SUCCESS'\r\nexport const DELETE_ADMIN_FAIL = 'DELETE_ADMIN_FAIL'\r\n\r\n// ***************** DEVICE ******************* //\r\n\r\nexport const CREATE_DEVICE_SUCCESS = 'CREATE_DEVICE_SUCCESS'\r\nexport const CREATE_DEVICE_FAIL = 'CREATE_DEVICE_FAIL'\r\n\r\nexport const GET_DEVICE_SUCCESS = 'GET_DEVICE_SUCCESS'\r\nexport const GET_DEVICE_FAIL = 'GET_DEVICE_FAIL'\r\n\r\nexport const UPDATE_DEVICE_SUCCESS = 'UPDATE_DEVICE_SUCCESS'\r\nexport const UPDATE_DEVICE_FAIL = 'UPDATE_DEVICE_FAIL'\r\n\r\nexport const DELETE_DEVICE_SUCCESS = 'DELETE_DEVICE_SUCCESS'\r\nexport const DELETE_DEVICE_FAIL = 'DELETE_DEVICE_FAIL'\r\n","import * as types from '../constants'\r\nimport axios from 'axios'\r\nimport { API_SERVICE } from '../../URI'\r\n\r\nconst createDevice = (bodyData) => async (dispatch, getState) => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n\r\n        const body = {\r\n            body: bodyData,\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `${API_SERVICE}/create/device`,\r\n            body,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: types.CREATE_DEVICE_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n        sessionStorage.setItem(\r\n            'deviceList',\r\n            JSON.stringify(getState().devices.deviceList)\r\n        )\r\n    } catch (error) {\r\n        dispatch({\r\n            type: types.CREATE_DEVICE_FAIL,\r\n            payload: error.message,\r\n        })\r\n    }\r\n}\r\n\r\nconst getDevices = (createdBy) => async (dispatch) => {\r\n    try {\r\n        const { data } = await axios.get(\r\n            `${API_SERVICE}/get/devices/${createdBy}`\r\n        )\r\n        dispatch({\r\n            type: types.GET_DEVICE_SUCCESS,\r\n            payload: data,\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: types.GET_DEVICE_FAIL,\r\n            payload: error.message,\r\n        })\r\n    }\r\n}\r\n\r\nconst getAdminDevices = (body) => async (dispatch) => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n        const { data } = await axios.post(\r\n            `${API_SERVICE}/get/devices/admin`,\r\n            body,\r\n            config\r\n        )\r\n        dispatch({\r\n            type: types.GET_DEVICE_SUCCESS,\r\n            payload: data,\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: types.GET_DEVICE_FAIL,\r\n            payload: error.message,\r\n        })\r\n    }\r\n}\r\n\r\nconst updateDevice = (body) => async (dispatch, getState) => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `${API_SERVICE}/update/device`,\r\n            body,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: types.UPDATE_DEVICE_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n        sessionStorage.setItem(\r\n            'deviceList',\r\n            JSON.stringify(getState().devices.deviceList)\r\n        )\r\n    } catch (error) {\r\n        dispatch({\r\n            type: types.UPDATE_DEVICE_FAIL,\r\n            payload: error.message,\r\n        })\r\n    }\r\n}\r\n\r\nconst deleteDevice = (_id) => async (dispatch, getState) => {\r\n    try {\r\n        await axios.delete(`${API_SERVICE}/delete/device/${_id}`)\r\n\r\n        dispatch({\r\n            type: types.DELETE_DEVICE_SUCCESS,\r\n            payload: _id,\r\n        })\r\n\r\n        sessionStorage.setItem(\r\n            'deviceList',\r\n            JSON.stringify(getState().devices.deviceList)\r\n        )\r\n    } catch (error) {\r\n        dispatch({\r\n            type: types.DELETE_DEVICE_FAIL,\r\n            payload: error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport { createDevice, getAdminDevices, getDevices, updateDevice, deleteDevice }\r\n","import * as types from '../constants'\r\nimport axios from 'axios'\r\nimport { API_SERVICE } from '../../URI'\r\n\r\nconst createHotspot = (bodyData) => async (dispatch, getState) => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n\r\n        const body = {\r\n            body: bodyData,\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `${API_SERVICE}/create/hotspot`,\r\n            body,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: types.CREATE_HOTSPOT_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n        sessionStorage.setItem(\r\n            'hotspotList',\r\n            JSON.stringify(getState().hotspots.hotspotList)\r\n        )\r\n    } catch (error) {\r\n        dispatch({\r\n            type: types.CREATE_HOTSPOT_FAIL,\r\n            payload: error.message,\r\n        })\r\n    }\r\n}\r\n\r\nconst getAdminHotspots = (body) => async (dispatch) => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n        const { data } = await axios.post(\r\n            `${API_SERVICE}/get/hotspots/admin`,\r\n            body,\r\n            config\r\n        )\r\n        dispatch({\r\n            type: types.GET_HOTSPOT_SUCCESS,\r\n            payload: data,\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: types.GET_HOTSPOT_FAIL,\r\n            payload: error.message,\r\n        })\r\n    }\r\n}\r\n\r\nconst getHotspots = (createdBy) => async (dispatch) => {\r\n    try {\r\n        const { data } = await axios.get(\r\n            `${API_SERVICE}/get/hotspots/${createdBy}`\r\n        )\r\n        dispatch({\r\n            type: types.GET_HOTSPOT_SUCCESS,\r\n            payload: data,\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: types.GET_HOTSPOT_FAIL,\r\n            payload: error.message,\r\n        })\r\n    }\r\n}\r\n\r\nconst updateHotspot = (body) => async (dispatch, getState) => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `${API_SERVICE}/update/hotspot`,\r\n            body,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: types.UPDATE_HOTSPOT_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n        sessionStorage.setItem(\r\n            'hotspotList',\r\n            JSON.stringify(getState().hotspots.hotspotList)\r\n        )\r\n    } catch (error) {\r\n        dispatch({\r\n            type: types.UPDATE_HOTSPOT_FAIL,\r\n            payload: error.message,\r\n        })\r\n    }\r\n}\r\n\r\nconst deleteHotspot = (_id) => async (dispatch, getState) => {\r\n    try {\r\n        await axios.delete(`${API_SERVICE}/delete/hotspot/${_id}`)\r\n\r\n        dispatch({\r\n            type: types.DELETE_HOTSPOT_SUCCESS,\r\n            payload: _id,\r\n        })\r\n\r\n        sessionStorage.setItem(\r\n            'hotspotList',\r\n            JSON.stringify(getState().hotspots.hotspotList)\r\n        )\r\n    } catch (error) {\r\n        dispatch({\r\n            type: types.DELETE_HOTSPOT_FAIL,\r\n            payload: error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport {\r\n    createHotspot,\r\n    getAdminHotspots,\r\n    getHotspots,\r\n    updateHotspot,\r\n    deleteHotspot,\r\n}\r\n","import * as types from '../constants'\r\nimport axios from 'axios'\r\nimport { API_SERVICE } from '../../URI'\r\nimport { async } from '@firebase/util'\r\n\r\nconst createAdmin = (bodyData) => async (dispatch, getState) => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n\r\n        const body = {\r\n            body: bodyData,\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `${API_SERVICE}/create/admin`,\r\n            body,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: types.CREATE_ADMIN_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n        sessionStorage.setItem(\r\n            'adminList',\r\n            JSON.stringify(getState().admins.adminList)\r\n        )\r\n    } catch (error) {\r\n        dispatch({\r\n            type: types.CREATE_ADMIN_FAIL,\r\n            payload: error.message,\r\n        })\r\n    }\r\n}\r\n\r\nconst getAdmins = (createdBy) => async (dispatch) => {\r\n    try {\r\n        const { data } = await axios.get(\r\n            `${API_SERVICE}/get/admins/${createdBy}`\r\n        )\r\n        dispatch({\r\n            type: types.GET_ADMIN_SUCCESS,\r\n            payload: data,\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: types.GET_ADMIN_FAIL,\r\n            payload: error.message,\r\n        })\r\n    }\r\n}\r\n\r\nconst updateAdmin = (body) => async (dispatch, getState) => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `${API_SERVICE}/update/admin`,\r\n            body,\r\n            config\r\n        )\r\n\r\n        console.log(data)\r\n\r\n        dispatch({\r\n            type: types.UPDATE_ADMIN_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n        sessionStorage.setItem(\r\n            'adminList',\r\n            JSON.stringify(getState().admins.adminList)\r\n        )\r\n    } catch (error) {\r\n        dispatch({\r\n            type: types.UPDATE_ADMIN_FAIL,\r\n            payload: error.message,\r\n        })\r\n    }\r\n}\r\n\r\nconst deleteAdmin = (_id) => async (dispatch, getState) => {\r\n    try {\r\n        await axios.delete(`${API_SERVICE}/delete/admin/${_id}`)\r\n\r\n        dispatch({\r\n            type: types.DELETE_ADMIN_SUCCESS,\r\n            payload: _id,\r\n        })\r\n\r\n        sessionStorage.setItem(\r\n            'adminList',\r\n            JSON.stringify(getState().admins.adminList)\r\n        )\r\n    } catch (error) {\r\n        dispatch({\r\n            type: types.DELETE_ADMIN_FAIL,\r\n            payload: error.message,\r\n        })\r\n    }\r\n}\r\n\r\nconst sendEmail = (emailData) => async (dispatch) => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `${API_SERVICE}/send-email`,\r\n            emailData,\r\n            config\r\n        )\r\n\r\n        console.log(data)\r\n    } catch (error) {\r\n        console.log('Error occured while sending email')\r\n    }\r\n}\r\n\r\nexport { createAdmin, getAdmins, updateAdmin, deleteAdmin, sendEmail }\r\n","import * as types from '../constants'\r\nimport axios from 'axios'\r\nimport { API_SERVICE } from '../../URI'\r\n\r\nconst createGroup = (bodyData) => async (dispatch, getState) => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n\r\n        const body = {\r\n            body: bodyData,\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `${API_SERVICE}/create/group`,\r\n            body,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: types.CREATE_GROUP_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n        sessionStorage.setItem(\r\n            'groupList',\r\n            JSON.stringify(getState().groups.groupList)\r\n        )\r\n    } catch (error) {\r\n        dispatch({\r\n            type: types.CREATE_GROUP_FAIL,\r\n            payload: error.message,\r\n        })\r\n    }\r\n}\r\n\r\nconst getGroups = (createdBy) => async (dispatch) => {\r\n    try {\r\n        const { data } = await axios.get(\r\n            `${API_SERVICE}/get/groups/${createdBy}`\r\n        )\r\n        dispatch({\r\n            type: types.GET_GROUP_SUCCESS,\r\n            payload: data,\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: types.GET_GROUP_FAIL,\r\n            payload: error.message,\r\n        })\r\n    }\r\n}\r\n\r\nconst updateGroup = (body) => async (dispatch, getState) => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `${API_SERVICE}/update/group`,\r\n            body,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: types.UPDATE_GROUP_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n        sessionStorage.setItem(\r\n            'groupList',\r\n            JSON.stringify(getState().groups.groupList)\r\n        )\r\n    } catch (error) {\r\n        dispatch({\r\n            type: types.UPDATE_GROUP_FAIL,\r\n            payload: error.message,\r\n        })\r\n    }\r\n}\r\n\r\nconst deleteGroup = (_id) => async (dispatch, getState) => {\r\n    try {\r\n        await axios.delete(`${API_SERVICE}/delete/group/${_id}`)\r\n\r\n        dispatch({\r\n            type: types.DELETE_GROUP_SUCCESS,\r\n            payload: _id,\r\n        })\r\n\r\n        sessionStorage.setItem(\r\n            'groupList',\r\n            JSON.stringify(getState().groups.groupList)\r\n        )\r\n    } catch (error) {\r\n        dispatch({\r\n            type: types.DELETE_GROUP_FAIL,\r\n            payload: error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport { createGroup, getGroups, updateGroup, deleteGroup }\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport {\r\n    Box,\r\n    TextField,\r\n    InputAdornment,\r\n    SvgIcon,\r\n    Typography,\r\n    Grid,\r\n    MenuItem,\r\n    Menu,\r\n    Stack,\r\n} from '@mui/material'\r\nimport { makeStyles } from '@mui/styles'\r\n\r\nimport Paper from '@mui/material/Paper'\r\nimport IconButton from '@mui/material/IconButton'\r\nimport List from '@mui/material/List'\r\nimport ListItem from '@mui/material/ListItem'\r\nimport ListItemText from '@mui/material/ListItemText'\r\nimport ListItemAvatar from '@mui/material/ListItemAvatar'\r\nimport Avatar from '@mui/material/Avatar'\r\nimport PeopleIcon from '@mui/icons-material/People'\r\nimport Button from '@mui/material/Button'\r\nimport Snackbar from '@mui/material/Snackbar'\r\nimport Alert from '@mui/material/Alert'\r\nimport { Search as SearchIcon } from 'react-feather'\r\nimport Locationview from './Locationview'\r\nimport AllLocationView from './AllLocationView'\r\nimport { db, auth } from '../Firebase/index'\r\nimport { collection, query, where, onSnapshot } from 'firebase/firestore'\r\nimport { signOut } from 'firebase/auth'\r\nimport FilterAltIcon from '@mui/icons-material/FilterAlt'\r\nimport { getDevices, getAdminDevices } from '../store/actions/device'\r\n\r\nimport axios from 'axios'\r\nimport { API_SERVICE } from '../URI'\r\nimport { getAdminHotspots, getHotspots } from '../store/actions/hotspot'\r\nimport { getAdmins } from '../store/actions/admin'\r\nimport { getGroups } from '../store/actions/group'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        height: '100%',\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(1),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n    },\r\n}))\r\n\r\nconst Dashboard = () => {\r\n    const classes = useStyles()\r\n\r\n    const [selectedIndex, setSelectedIndex] = useState(-1)\r\n    // const [deviceList, setdeviceList] = useState([])\r\n    const [userLocations, setUserLocations] = useState([])\r\n    const [search, setSearch] = useState('')\r\n    const [searchResult, setSearchResult] = useState([])\r\n\r\n    const [snackOpen, setSnackOpen] = useState(false)\r\n    const [success, setSuccess] = useState(null)\r\n    const [error, setError] = useState(null)\r\n\r\n    const [filter, setFilter] = useState(null)\r\n    const [anchorEl, setAnchorEl] = useState(null)\r\n    const menuOpen = Boolean(anchorEl)\r\n\r\n    const dispatch = useDispatch()\r\n    const devices = useSelector((state) => state.devices)\r\n    const { deviceList } = devices\r\n\r\n    const handleFilterClick = (event) => {\r\n        setAnchorEl(event.currentTarget)\r\n    }\r\n    const handleFilterClose = () => {\r\n        setAnchorEl(null)\r\n    }\r\n\r\n    const navigate = useNavigate()\r\n\r\n    const handleSnackClose = (_, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return\r\n        }\r\n        setSnackOpen(false)\r\n        setError(null)\r\n        setSuccess(null)\r\n    }\r\n\r\n    const userData = sessionStorage.getItem('userData')\r\n        ? JSON.parse(sessionStorage.getItem('userData'))\r\n        : null\r\n\r\n    const adminData = sessionStorage.getItem('adminData')\r\n        ? JSON.parse(sessionStorage.getItem('adminData'))\r\n        : null\r\n\r\n    useEffect(() => {\r\n        const authToken = sessionStorage.getItem('authToken')\r\n\r\n        if (!authToken) {\r\n            navigate('/login')\r\n        }\r\n    }, [])\r\n\r\n    useEffect(async () => {\r\n        if (adminData === null && userData !== null) {\r\n            dispatch(getDevices(userData.uid))\r\n            dispatch(getHotspots(userData.uid))\r\n            dispatch(getGroups(userData.uid))\r\n            dispatch(getAdmins(userData.uid))\r\n        }\r\n\r\n        if (adminData !== null && userData !== null) {\r\n            const { data } = await axios.get(\r\n                `${API_SERVICE}/get/admin/${adminData.email}`\r\n            )\r\n            dispatch(\r\n                getAdminDevices({\r\n                    createdBy: userData.uid,\r\n                    adminGroups: data.groups,\r\n                })\r\n            )\r\n            dispatch(\r\n                getAdminHotspots({\r\n                    createdBy: userData.uid,\r\n                    adminGroups: data.groups,\r\n                })\r\n            )\r\n        }\r\n    }, [dispatch])\r\n\r\n    useEffect(() => {\r\n        if (deviceList.length !== 0) {\r\n            const phoneNumberArr = deviceList.map((x) => x.phoneNumber)\r\n            const UsersRef = collection(db, 'trackerAndroidUser')\r\n            const q = query(\r\n                UsersRef,\r\n                where('phoneNumber', 'in', phoneNumberArr)\r\n            )\r\n\r\n            const unsub = onSnapshot(q, (snapshot) => {\r\n                const users = []\r\n\r\n                snapshot.forEach((doc) => {\r\n                    users.push(doc.data())\r\n                })\r\n\r\n                setUserLocations(users)\r\n            })\r\n\r\n            return () => unsub()\r\n        }\r\n    }, [deviceList])\r\n\r\n    useEffect(() => {\r\n        if (search.length === 0) {\r\n            setSearchResult([])\r\n        }\r\n\r\n        setSelectedIndex(-1)\r\n        const temp = deviceList\r\n\r\n        const filterArr = temp.filter((x) =>\r\n            x.fullName.toLowerCase().includes(search.toLowerCase())\r\n        )\r\n\r\n        setSearchResult(filterArr)\r\n    }, [search])\r\n\r\n    useEffect(() => {\r\n        if (filter === 'all') {\r\n            setSearchResult([])\r\n            return\r\n        }\r\n\r\n        const temp = deviceList\r\n        const filterArr = temp.filter((x) => x.trackingStatus === filter)\r\n        setSearchResult(filterArr)\r\n    }, [filter])\r\n\r\n    const handleListItemClick = (_, index) => {\r\n        setSelectedIndex(index)\r\n    }\r\n\r\n    const logout = () => {\r\n        sessionStorage.removeItem('userData')\r\n        signOut(auth)\r\n            .then(() => navigate('/login', { replace: true }))\r\n            .catch((error) => console.log(error))\r\n    }\r\n\r\n    const changeFilter = (val) => {\r\n        setFilter(val)\r\n        handleFilterClose()\r\n    }\r\n\r\n    const getInitials = (name) => {\r\n        const arr = name.split(' ')\r\n        const initials =\r\n            arr[0].split('')[0].toUpperCase() +\r\n            arr[1].split('')[0].toUpperCase()\r\n\r\n        return initials\r\n    }\r\n\r\n    return (\r\n        <Box className={classes.root}>\r\n            <Grid container sx={{ height: 'inherit' }}>\r\n                <Grid\r\n                    item\r\n                    xs={2.4}\r\n                    sx={{\r\n                        height: '100%',\r\n                        overflowY: 'scroll',\r\n                    }}\r\n                    className='gridItem'\r\n                >\r\n                    <Paper sx={{ minHeight: '100%' }} className={classes.paper}>\r\n                        <Box sx={{ maxWidth: 500 }}>\r\n                            <TextField\r\n                                fullWidth\r\n                                InputProps={{\r\n                                    startAdornment: (\r\n                                        <InputAdornment position='start'>\r\n                                            <SvgIcon\r\n                                                fontSize='small'\r\n                                                color='action'\r\n                                            >\r\n                                                <SearchIcon />\r\n                                            </SvgIcon>\r\n                                        </InputAdornment>\r\n                                    ),\r\n                                    endAdornment: (\r\n                                        <IconButton onClick={handleFilterClick}>\r\n                                            <SvgIcon\r\n                                                fontSize='small'\r\n                                                color='action'\r\n                                            >\r\n                                                <FilterAltIcon />\r\n                                            </SvgIcon>\r\n                                        </IconButton>\r\n                                    ),\r\n                                }}\r\n                                placeholder='Search user'\r\n                                variant='outlined'\r\n                                onChange={(e) => setSearch(e.target.value)}\r\n                            />\r\n                            <Menu\r\n                                anchorEl={anchorEl}\r\n                                open={menuOpen}\r\n                                onClose={handleFilterClose}\r\n                            >\r\n                                <MenuItem\r\n                                    sx={{ py: 1.2, px: 2.5 }}\r\n                                    onClick={() => {\r\n                                        changeFilter('all')\r\n                                        setSelectedIndex(-1)\r\n                                    }}\r\n                                >\r\n                                    All Requests\r\n                                </MenuItem>\r\n                                <MenuItem\r\n                                    sx={{ py: 1.2, px: 2.5 }}\r\n                                    onClick={() => {\r\n                                        changeFilter('accepted')\r\n                                        setSelectedIndex(-1)\r\n                                    }}\r\n                                >\r\n                                    Accepted Requests\r\n                                </MenuItem>\r\n                                <MenuItem\r\n                                    sx={{ py: 1.2, px: 2.5 }}\r\n                                    onClick={() => {\r\n                                        changeFilter('rejected')\r\n                                        setSelectedIndex(-1)\r\n                                    }}\r\n                                >\r\n                                    Rejected Requests\r\n                                </MenuItem>\r\n                                <MenuItem\r\n                                    sx={{ py: 1.2, px: 2.5 }}\r\n                                    onClick={() => {\r\n                                        changeFilter('pending')\r\n                                        setSelectedIndex(-1)\r\n                                    }}\r\n                                >\r\n                                    Pending Requests\r\n                                </MenuItem>\r\n                            </Menu>\r\n                        </Box>\r\n                        <List component='nav'>\r\n                            <ListItem\r\n                                key={-1}\r\n                                button\r\n                                sx={{\r\n                                    mt: 0.5,\r\n                                    mb: 0.5,\r\n                                    backgroundColor: '#F5F5F5',\r\n                                    pt: 1.5,\r\n                                    pb: 1.5,\r\n                                }}\r\n                                selected={selectedIndex === -1}\r\n                                onClick={() => setSelectedIndex(-1)}\r\n                            >\r\n                                <ListItemAvatar>\r\n                                    <Avatar sx={{ backgroundColor: 'orange' }}>\r\n                                        <PeopleIcon />\r\n                                    </Avatar>\r\n                                </ListItemAvatar>\r\n                                <ListItemText primary='Overview All Devices' />\r\n                            </ListItem>\r\n\r\n                            {searchResult.length === 0 &&\r\n                                deviceList !== undefined &&\r\n                                deviceList !== null &&\r\n                                deviceList.map((item, index) => (\r\n                                    <ListItem\r\n                                        key={index}\r\n                                        button\r\n                                        disabled={\r\n                                            item.trackingStatus === 'pending'\r\n                                        }\r\n                                        sx={{\r\n                                            mt: 0.5,\r\n                                            mb: 0.5,\r\n                                            py: 2,\r\n                                            backgroundColor: '#F5F5F5',\r\n                                            borderLeft:\r\n                                                item.trackingStatus ===\r\n                                                'accepted'\r\n                                                    ? '6px solid green'\r\n                                                    : item.trackingStatus ===\r\n                                                      'rejected'\r\n                                                    ? '6px solid red'\r\n                                                    : '6px solid orange',\r\n                                        }}\r\n                                        selected={selectedIndex === index}\r\n                                        onClick={(event) =>\r\n                                            handleListItemClick(event, index)\r\n                                        }\r\n                                    >\r\n                                        <ListItemAvatar>\r\n                                            <Avatar\r\n                                                sx={{\r\n                                                    backgroundColor: 'orange',\r\n                                                }}\r\n                                            >\r\n                                                <Typography\r\n                                                    fontSize={16}\r\n                                                    letterSpacing={1}\r\n                                                >\r\n                                                    {getInitials(item.fullName)}\r\n                                                </Typography>\r\n                                            </Avatar>\r\n                                        </ListItemAvatar>\r\n                                        <ListItemText primary={item.fullName} />\r\n                                    </ListItem>\r\n                                ))}\r\n\r\n                            {/* showing search results */}\r\n                            {searchResult.length !== 0 &&\r\n                                searchResult.map((item, index) => (\r\n                                    <ListItem\r\n                                        key={index}\r\n                                        button\r\n                                        disabled={\r\n                                            item.trackingStatus === 'pending'\r\n                                        }\r\n                                        sx={{\r\n                                            mt: 0.5,\r\n                                            mb: 0.5,\r\n                                            py: 2,\r\n                                            backgroundColor: '#F5F5F5',\r\n                                            borderLeft:\r\n                                                item.trackingStatus ===\r\n                                                'accepted'\r\n                                                    ? '6px solid green'\r\n                                                    : item.trackingStatus ===\r\n                                                      'rejected'\r\n                                                    ? '6px solid red'\r\n                                                    : '6px solid orange',\r\n                                        }}\r\n                                        selected={selectedIndex === index}\r\n                                        onClick={(event) =>\r\n                                            handleListItemClick(event, index)\r\n                                        }\r\n                                    >\r\n                                        <ListItemAvatar>\r\n                                            <Avatar\r\n                                                sx={{\r\n                                                    backgroundColor: 'orange',\r\n                                                }}\r\n                                            >\r\n                                                <Typography\r\n                                                    fontSize={16}\r\n                                                    letterSpacing={1}\r\n                                                >\r\n                                                    {getInitials(item.fullName)}\r\n                                                </Typography>\r\n                                            </Avatar>\r\n                                        </ListItemAvatar>\r\n                                        <ListItemText primary={item.fullName} />\r\n                                    </ListItem>\r\n                                ))}\r\n                        </List>\r\n                    </Paper>\r\n                </Grid>\r\n\r\n                <Grid item xs={9.6} sx={{ height: '100%' }}>\r\n                    <Stack\r\n                        direction='row'\r\n                        justifyContent='space-between'\r\n                        sx={{ padding: 2 }}\r\n                    >\r\n                        <Typography variant='h4' component='h2'>\r\n                            Current Activity\r\n                        </Typography>\r\n                    </Stack>\r\n                    <Box\r\n                        sx={{\r\n                            height: '90%',\r\n                            py: 1,\r\n                        }}\r\n                    >\r\n                        {selectedIndex === -1 && (\r\n                            <AllLocationView\r\n                                userList={userLocations}\r\n                                senderId={userData?.uid}\r\n                                trackingList={deviceList}\r\n                            />\r\n                        )}\r\n                        {selectedIndex >= 0 && searchResult.length === 0 && (\r\n                            <Locationview\r\n                                user={deviceList[selectedIndex]}\r\n                                index={selectedIndex}\r\n                            />\r\n                        )}\r\n\r\n                        {selectedIndex >= 0 && searchResult.length !== 0 && (\r\n                            <Locationview\r\n                                user={searchResult[selectedIndex]}\r\n                                index={selectedIndex}\r\n                            />\r\n                        )}\r\n                    </Box>\r\n                </Grid>\r\n            </Grid>\r\n            {success !== null && (\r\n                <Snackbar\r\n                    open={snackOpen}\r\n                    autoHideDuration={4000}\r\n                    onClose={handleSnackClose}\r\n                    anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n                >\r\n                    <Alert\r\n                        onClose={handleSnackClose}\r\n                        severity='success'\r\n                        sx={{ width: '100%' }}\r\n                    >\r\n                        {success}\r\n                    </Alert>\r\n                </Snackbar>\r\n            )}\r\n            {error !== null && (\r\n                <Snackbar\r\n                    open={snackOpen}\r\n                    autoHideDuration={4000}\r\n                    onClose={handleSnackClose}\r\n                    anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n                >\r\n                    <Alert\r\n                        onClose={handleSnackClose}\r\n                        severity='error'\r\n                        sx={{ width: '100%' }}\r\n                    >\r\n                        {error}\r\n                    </Alert>\r\n                </Snackbar>\r\n            )}\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Dashboard\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useNavigate, Link as RouterLink } from 'react-router-dom'\r\nimport Avatar from '@mui/material/Avatar'\r\nimport Button from '@mui/material/Button'\r\nimport CssBaseline from '@mui/material/CssBaseline'\r\nimport TextField from '@mui/material/TextField'\r\nimport FormControlLabel from '@mui/material/FormControlLabel'\r\nimport Checkbox from '@mui/material/Checkbox'\r\nimport Paper from '@mui/material/Paper'\r\nimport Box from '@mui/material/Box'\r\nimport Grid from '@mui/material/Grid'\r\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined'\r\nimport Typography from '@mui/material/Typography'\r\nimport Link from '@mui/material/Link'\r\nimport { makeStyles } from '@mui/styles'\r\nimport { auth, db } from '../Firebase'\r\nimport { signInWithEmailAndPassword } from 'firebase/auth'\r\nimport {\r\n    collection,\r\n    doc,\r\n    getDoc,\r\n    getDocs,\r\n    query,\r\n    where,\r\n} from 'firebase/firestore'\r\nimport { API_SERVICE } from '../URI'\r\nimport axios from 'axios'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    image: {\r\n        backgroundImage: 'url(https://source.unsplash.com/random)',\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundColor:\r\n            theme.palette.type === 'light'\r\n                ? theme.palette.grey[50]\r\n                : theme.palette.grey[900],\r\n        backgroundSize: 'cover',\r\n        backgroundPosition: 'center',\r\n    },\r\n    paper: {\r\n        margin: theme.spacing(8, 4),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    login: {\r\n        margin: theme.spacing(3, 0, 2),\r\n        padding: theme.spacing(1.4),\r\n        fontSize: 15,\r\n    },\r\n    googleLogin: {\r\n        margin: theme.spacing(2, 0, 2),\r\n        fontSize: 15,\r\n    },\r\n}))\r\n\r\nconst Login = () => {\r\n    const classes = useStyles()\r\n    const navigate = useNavigate()\r\n\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [remember, setRemember] = useState(false)\r\n\r\n    const credentials = localStorage.getItem('credentials')\r\n        ? JSON.parse(localStorage.getItem('credentials'))\r\n        : null\r\n\r\n    useEffect(() => {\r\n        if (credentials !== null) {\r\n            setEmail(credentials.email)\r\n            setPassword(credentials.password)\r\n            setRemember(credentials.checked)\r\n        }\r\n    }, [credentials])\r\n\r\n    const submitHandler = async () => {\r\n        const superRef = collection(db, 'trackerWebUser')\r\n        const q = query(superRef, where('email', '==', email))\r\n        await getDocs(q).then(async (docs) => {\r\n            if (docs.size !== 0) {\r\n                superAdminLogin()\r\n            } else {\r\n                adminLogin()\r\n            }\r\n        })\r\n    }\r\n\r\n    const adminLogin = async () => {\r\n        signInWithEmailAndPassword(auth, email, password)\r\n            .then(async (credential) => {\r\n                sessionStorage.setItem('authToken', credential.user.accessToken)\r\n                try {\r\n                    const { data } = await axios.get(\r\n                        `${API_SERVICE}/get/admin/${email}`\r\n                    )\r\n                    const superAdminRef = doc(\r\n                        db,\r\n                        'trackerWebUser',\r\n                        data.createdBy\r\n                    )\r\n                    const superData = await getDoc(superAdminRef)\r\n\r\n                    if (superData.exists()) {\r\n                        sessionStorage.setItem(\r\n                            'userData',\r\n                            JSON.stringify(superData.data())\r\n                        )\r\n                    }\r\n\r\n                    sessionStorage.setItem('adminData', JSON.stringify(data))\r\n\r\n                    if (data.passwordChanged) {\r\n                        navigate('/app/dashboard', { replace: true })\r\n                    } else {\r\n                        navigate('/admin/change-password', { replace: true })\r\n                    }\r\n                } catch (error) {\r\n                    console.log(error.message)\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                const errorCode = error.code\r\n                const errorMessage = error.message\r\n                alert(errorCode, errorMessage)\r\n            })\r\n    }\r\n\r\n    const superAdminLogin = async () => {\r\n        signInWithEmailAndPassword(auth, email, password)\r\n            .then(async (userCredential) => {\r\n                const user = userCredential.user\r\n                console.log(user)\r\n                sessionStorage.setItem('authToken', user.accessToken)\r\n                const docRef = doc(db, 'trackerWebUser', user.uid)\r\n                const docSnap = await getDoc(docRef)\r\n\r\n                if (docSnap.exists()) {\r\n                    sessionStorage.setItem(\r\n                        'userData',\r\n                        JSON.stringify(docSnap.data())\r\n                    )\r\n                    navigate('/app/dashboard', { replace: true })\r\n                } else {\r\n                    console.log('No such document!')\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                const errorCode = error.code\r\n                const errorMessage = error.message\r\n                alert(errorCode, errorMessage)\r\n            })\r\n    }\r\n\r\n    return (\r\n        <Grid\r\n            sx={{ height: '100%' }}\r\n            container\r\n            component='main'\r\n            className={classes.root}\r\n        >\r\n            <CssBaseline />\r\n            <Grid item xs={false} sm={4} md={7} className={classes.image} />\r\n            <Grid\r\n                item\r\n                xs={12}\r\n                sm={8}\r\n                md={5}\r\n                component={Paper}\r\n                elevation={6}\r\n                square\r\n            >\r\n                <div className={classes.paper}>\r\n                    <Avatar className={classes.avatar}>\r\n                        <LockOutlinedIcon />\r\n                    </Avatar>\r\n                    <Typography\r\n                        component='h1'\r\n                        variant='h1'\r\n                        sx={{ mt: 1, mb: 4 }}\r\n                    >\r\n                        GPS REPORT\r\n                    </Typography>\r\n                    <form className={classes.form} noValidate>\r\n                        <TextField\r\n                            variant='outlined'\r\n                            margin='normal'\r\n                            required\r\n                            fullWidth\r\n                            id='email'\r\n                            label='Email Address'\r\n                            name='email'\r\n                            autoComplete='email'\r\n                            autoFocus\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                        />\r\n                        <TextField\r\n                            variant='outlined'\r\n                            margin='normal'\r\n                            required\r\n                            fullWidth\r\n                            name='password'\r\n                            label='Password'\r\n                            type='password'\r\n                            id='password'\r\n                            autoComplete='current-password'\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                        />\r\n                        <Box\r\n                            sx={{ display: 'flex', justifyContent: 'flex-end' }}\r\n                        >\r\n                            <Link variant='body2'>Forgot password?</Link>\r\n                        </Box>\r\n                        <FormControlLabel\r\n                            control={\r\n                                <Checkbox\r\n                                    value={remember}\r\n                                    color='primary'\r\n                                    onChange={(e) =>\r\n                                        setRemember(e.target.checked)\r\n                                    }\r\n                                />\r\n                            }\r\n                            label='Remember me'\r\n                        />\r\n                        <Button\r\n                            fullWidth\r\n                            variant='contained'\r\n                            color='primary'\r\n                            className={classes.login}\r\n                            onClick={() => submitHandler()}\r\n                        >\r\n                            LOGIN\r\n                        </Button>\r\n\r\n                        <Box\r\n                            sx={{\r\n                                display: 'flex',\r\n                                justifyContent: 'center',\r\n                                mt: 1.3,\r\n                            }}\r\n                        >\r\n                            <Link\r\n                                component={RouterLink}\r\n                                to='/register'\r\n                                variant='body2'\r\n                                underline='hover'\r\n                            >\r\n                                Don't have an account? Sign up for free\r\n                            </Link>\r\n                        </Box>\r\n                    </form>\r\n                </div>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import { Helmet } from 'react-helmet'\r\nimport { Box, Container, Typography } from '@mui/material'\r\n\r\nconst NotFound = () => (\r\n  <>\r\n    <Helmet>\r\n      <title>404 | Material Kit</title>\r\n    </Helmet>\r\n    <Box\r\n      sx={{\r\n        backgroundColor: 'background.default',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        height: '100%',\r\n        justifyContent: 'center',\r\n      }}\r\n    >\r\n      <Container maxWidth='md'>\r\n        <Typography align='center' color='textPrimary' variant='h1'>\r\n          404: The page you are looking for isn’t here\r\n        </Typography>\r\n        <Typography align='center' color='textPrimary' variant='subtitle2'>\r\n          You either tried some shady route or you came here by mistake.\r\n          Whichever it is, try using the navigation\r\n        </Typography>\r\n        <Box sx={{ textAlign: 'center' }}>\r\n          <img\r\n            alt='Under development'\r\n            src='/static/images/undraw_page_not_found_su7k.svg'\r\n            style={{\r\n              marginTop: 50,\r\n              display: 'inline-block',\r\n              maxWidth: '100%',\r\n              width: 560,\r\n            }}\r\n          />\r\n        </Box>\r\n      </Container>\r\n    </Box>\r\n  </>\r\n)\r\n\r\nexport default NotFound\r\n","import React, { useState } from 'react'\r\nimport { useNavigate, Link as RouterLink } from 'react-router-dom'\r\nimport Avatar from '@mui/material/Avatar'\r\nimport Button from '@mui/material/Button'\r\nimport CssBaseline from '@mui/material/CssBaseline'\r\nimport TextField from '@mui/material/TextField'\r\nimport FormControlLabel from '@mui/material/FormControlLabel'\r\nimport Checkbox from '@mui/material/Checkbox'\r\nimport Paper from '@mui/material/Paper'\r\nimport Box from '@mui/material/Box'\r\nimport Grid from '@mui/material/Grid'\r\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined'\r\nimport Typography from '@mui/material/Typography'\r\nimport Link from '@mui/material/Link'\r\nimport { makeStyles } from '@mui/styles'\r\nimport { auth, db } from '../Firebase'\r\nimport { createUserWithEmailAndPassword, updateProfile } from 'firebase/auth'\r\nimport { doc, serverTimestamp, setDoc } from 'firebase/firestore'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    image: {\r\n        backgroundImage: 'url(https://source.unsplash.com/random)',\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundColor:\r\n            theme.palette.type === 'light'\r\n                ? theme.palette.grey[50]\r\n                : theme.palette.grey[900],\r\n        backgroundSize: 'cover',\r\n        backgroundPosition: 'center',\r\n    },\r\n    paper: {\r\n        margin: theme.spacing(4, 2),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    login: {\r\n        margin: theme.spacing(3, 0, 2),\r\n        padding: theme.spacing(1.4),\r\n        fontSize: 15,\r\n    },\r\n    googleLogin: {\r\n        margin: theme.spacing(2, 0, 2),\r\n        fontSize: 15,\r\n    },\r\n}))\r\n\r\nconst Register = () => {\r\n    const classes = useStyles()\r\n    const navigate = useNavigate()\r\n\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [firstName, setFirstName] = useState('')\r\n    const [lastName, setLastName] = useState('')\r\n    const [companyName, setCompanyName] = useState('')\r\n    const [policy, setPolicy] = useState(false)\r\n\r\n    const submitHandler = async () => {\r\n        createUserWithEmailAndPassword(auth, email, password)\r\n            .then(async (userCredential) => {\r\n                const user = userCredential.user\r\n\r\n                updateProfile(auth.currentUser, {\r\n                    displayName: firstName + lastName,\r\n                }).catch((error) => console.log(error.message))\r\n\r\n                const userData = {\r\n                    uid: user.uid,\r\n                    firstName,\r\n                    lastName,\r\n                    email: user.email,\r\n                    profilePhoto:\r\n                        'https://th.bing.com/th/id/OIP.9B2RxsHDB_s7FZT0mljnhQHaHa?pid=ImgDet&rs=1',\r\n                    companyName,\r\n                    createdAt: serverTimestamp(),\r\n                }\r\n\r\n                sessionStorage.setItem('authToken', user.accessToken)\r\n\r\n                const userRef = doc(db, 'trackerWebUser', user.uid)\r\n\r\n                await setDoc(userRef, userData)\r\n                    .then(() => {\r\n                        sessionStorage.setItem(\r\n                            'userData',\r\n                            JSON.stringify(userData)\r\n                        )\r\n                        navigate('/app/dashboard', { replace: true })\r\n                    })\r\n                    .catch((error) => {\r\n                        const errorCode = error.code\r\n                        const errorMessage = error.message\r\n                        alert(errorCode, errorMessage)\r\n                    })\r\n            })\r\n            .catch((error) => {\r\n                const errorCode = error.code\r\n                const errorMessage = error.message\r\n                alert(errorCode, errorMessage)\r\n            })\r\n    }\r\n\r\n    return (\r\n        <Grid sx={{ height: '100%' }} container component='main'>\r\n            <CssBaseline />\r\n            <Grid item xs={false} sm={4} md={7} className={classes.image} />\r\n            <Grid\r\n                item\r\n                xs={12}\r\n                sm={8}\r\n                md={5}\r\n                component={Paper}\r\n                elevation={6}\r\n                square\r\n                sx={{ p: 2 }}\r\n            >\r\n                <div className={classes.paper}>\r\n                    <Avatar className={classes.avatar}>\r\n                        <LockOutlinedIcon />\r\n                    </Avatar>\r\n                    <Typography\r\n                        component='h1'\r\n                        variant='h1'\r\n                        sx={{ mt: 1, mb: 4 }}\r\n                    >\r\n                        GPS REPORT\r\n                    </Typography>\r\n                    <form className={classes.form} noValidate>\r\n                        <TextField\r\n                            variant='outlined'\r\n                            margin='normal'\r\n                            required\r\n                            fullWidth\r\n                            id='firstName'\r\n                            label='First Name'\r\n                            name='firstName'\r\n                            autoComplete='name'\r\n                            autoFocus\r\n                            value={firstName}\r\n                            onChange={(e) => setFirstName(e.target.value)}\r\n                        />\r\n                        <TextField\r\n                            variant='outlined'\r\n                            margin='normal'\r\n                            required\r\n                            fullWidth\r\n                            id='lastName'\r\n                            label='Last Name'\r\n                            name='lastName'\r\n                            autoComplete='name'\r\n                            value={lastName}\r\n                            onChange={(e) => setLastName(e.target.value)}\r\n                        />\r\n                        <TextField\r\n                            variant='outlined'\r\n                            margin='normal'\r\n                            required\r\n                            fullWidth\r\n                            id='email'\r\n                            label='Email Address'\r\n                            name='email'\r\n                            autoComplete='email'\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                        />\r\n                        <TextField\r\n                            variant='outlined'\r\n                            margin='normal'\r\n                            required\r\n                            fullWidth\r\n                            id='email'\r\n                            label='Company Name'\r\n                            name='companyName'\r\n                            autoComplete='text'\r\n                            value={companyName}\r\n                            onChange={(e) => setCompanyName(e.target.value)}\r\n                        />\r\n                        <TextField\r\n                            variant='outlined'\r\n                            margin='normal'\r\n                            required\r\n                            fullWidth\r\n                            name='password'\r\n                            label='Password'\r\n                            type='password'\r\n                            id='password'\r\n                            autoComplete='current-password'\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                        />\r\n                        <FormControlLabel\r\n                            control={\r\n                                <Checkbox\r\n                                    value='remember'\r\n                                    color='primary'\r\n                                    checked={policy}\r\n                                    onChange={(e) =>\r\n                                        setPolicy(e.target.checked)\r\n                                    }\r\n                                />\r\n                            }\r\n                            label='I have read the Terms and Conditions'\r\n                        />\r\n                        <Button\r\n                            fullWidth\r\n                            variant='contained'\r\n                            color='primary'\r\n                            className={classes.login}\r\n                            onClick={() => submitHandler()}\r\n                        >\r\n                            Sign-Up\r\n                        </Button>\r\n                        {/* <Typography sx={{ textAlign: 'center' }} variant='h4'>\r\n              OR\r\n            </Typography>\r\n            <Button\r\n              fullWidth\r\n              variant='outlined'\r\n              color='primary'\r\n              className={classes.googleLogin}\r\n            >\r\n              <Avatar\r\n                alt='Remy Sharp'\r\n                src='/static/images/g.png'\r\n                sx={{ marginRight: 1 }}\r\n              />\r\n              Sign-up with Google\r\n            </Button> */}\r\n                        <Box\r\n                            sx={{\r\n                                display: 'flex',\r\n                                justifyContent: 'center',\r\n                                mt: 1.3,\r\n                            }}\r\n                        >\r\n                            <Link\r\n                                component={RouterLink}\r\n                                to='/login'\r\n                                variant='body2'\r\n                                underline='hover'\r\n                            >\r\n                                Already have an account? Login here\r\n                            </Link>\r\n                        </Box>\r\n                    </form>\r\n                </div>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Register\r\n","import * as React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Box from '@mui/material/Box'\r\nimport Collapse from '@mui/material/Collapse'\r\nimport IconButton from '@mui/material/IconButton'\r\nimport Table from '@mui/material/Table'\r\nimport TableBody from '@mui/material/TableBody'\r\nimport TableCell from '@mui/material/TableCell'\r\nimport TableContainer from '@mui/material/TableContainer'\r\nimport TableHead from '@mui/material/TableHead'\r\nimport TableRow from '@mui/material/TableRow'\r\nimport Typography from '@mui/material/Typography'\r\nimport Paper from '@mui/material/Paper'\r\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown'\r\nimport KeyboardArrowUpIcon from '@mui/icons-material/KeyboardArrowUp'\r\nimport { CircularProgress } from '@mui/material'\r\nimport moment from 'moment'\r\nimport axios from 'axios'\r\nimport { API_SERVICE } from '../../URI'\r\n\r\nfunction Row(props) {\r\n  const {\r\n    row,\r\n    hotspotList,\r\n    selectedHotspots,\r\n    selectedGroups,\r\n    selectedMonth,\r\n  } = props\r\n  const [open, setOpen] = React.useState(false)\r\n  const [history, setHistory] = React.useState([])\r\n  const [load, setLoad] = React.useState(false)\r\n\r\n  const userData = sessionStorage.getItem('userData')\r\n    ? JSON.parse(sessionStorage.getItem('userData'))\r\n    : null\r\n\r\n  const arr = row.hotspots.map((x) => x.hotspot)\r\n\r\n  const checkExist = (x) => {\r\n    const i = arr.findIndex((e) => e === x._id)\r\n    return i\r\n  }\r\n\r\n  const filterGroup = async (data) => {\r\n    return new Promise((resolve) => {\r\n      const arr = []\r\n\r\n      for (let id of selectedGroups) {\r\n        console.log('inside')\r\n        for (let x of data) {\r\n          if (id === x.group._id) {\r\n            arr.push(x)\r\n          }\r\n        }\r\n      }\r\n      console.log('Here')\r\n      resolve(arr)\r\n    })\r\n  }\r\n\r\n  React.useEffect(async () => {\r\n    try {\r\n      setLoad(true)\r\n      const { data } = await axios.get(\r\n        `${API_SERVICE}/get/location/${userData.uid}/${row.phoneNumber}/${\r\n          selectedMonth + 1\r\n        }`,\r\n      )\r\n\r\n      if (selectedGroups.length === 0) {\r\n        setHistory(data)\r\n        setLoad(false)\r\n      } else {\r\n        const arr = await filterGroup(data)\r\n\r\n        setHistory(arr)\r\n        setLoad(false)\r\n      }\r\n    } catch (error) {\r\n      console.log(error.message)\r\n    }\r\n  }, [selectedGroups])\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <TableRow sx={{ '& > *': { borderBottom: 'unset' } }}>\r\n        <TableCell>\r\n          <IconButton\r\n            aria-label=\"expand row\"\r\n            size=\"small\"\r\n            onClick={() => setOpen(!open)}\r\n          >\r\n            {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\r\n          </IconButton>\r\n        </TableCell>\r\n        <TableCell component=\"th\" scope=\"row\">\r\n          {row.device}\r\n        </TableCell>\r\n        <TableCell align=\"center\">{row.phoneNumber}</TableCell>\r\n\r\n        {selectedHotspots.length === 0 &&\r\n          hotspotList.map((x, i) => (\r\n            <React.Fragment key={x.hotspot}>\r\n              {checkExist(x) !== -1 ? (\r\n                <TableCell key={x.hotspot} align=\"center\">\r\n                  {row.hotspots[checkExist(x)].total}\r\n                </TableCell>\r\n              ) : (\r\n                <TableCell key={x.hotspot} align=\"center\">\r\n                  0\r\n                </TableCell>\r\n              )}\r\n            </React.Fragment>\r\n          ))}\r\n        {selectedHotspots.length !== 0 &&\r\n          selectedHotspots.map((x, i) => (\r\n            <React.Fragment key={x.hotspot}>\r\n              {checkExist(x) !== -1 ? (\r\n                <TableCell key={x.hotspot} align=\"center\">\r\n                  {row.hotspots[checkExist(x)].total}\r\n                </TableCell>\r\n              ) : (\r\n                <TableCell key={x.hotspot} align=\"center\">\r\n                  0\r\n                </TableCell>\r\n              )}\r\n            </React.Fragment>\r\n          ))}\r\n      </TableRow>\r\n      <TableRow>\r\n        <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\r\n          <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n            <Box sx={{ margin: 1 }}>\r\n              <Typography variant=\"h6\" sx={{ my: 2 }} component=\"div\">\r\n                History\r\n              </Typography>\r\n              <Table size=\"small\" aria-label=\"purchases\">\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell>Date</TableCell>\r\n                    <TableCell>Address</TableCell>\r\n                    <TableCell align=\"right\">Hotspot</TableCell>\r\n                    <TableCell align=\"right\">Group</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {!load &&\r\n                    history.map((historyRow, index) => (\r\n                      <TableRow key={index + 1}>\r\n                        <TableCell\r\n                          sx={{ borderWidth: 0, padding: '16px' }}\r\n                          component=\"th\"\r\n                          scope=\"row\"\r\n                        >\r\n                          {moment(historyRow.createdAt).format(\r\n                            'DD MMMM YYYY - hh:mm a',\r\n                          )}\r\n                        </TableCell>\r\n                        <TableCell sx={{ borderWidth: 0, padding: '16px' }}>\r\n                          {historyRow.address}\r\n                        </TableCell>\r\n                        <TableCell\r\n                          sx={{ borderWidth: 0, padding: '16px' }}\r\n                          align=\"right\"\r\n                        >\r\n                          {historyRow.hotspot.hotspotName}\r\n                        </TableCell>\r\n                        <TableCell\r\n                          sx={{ borderWidth: 0, padding: '16px' }}\r\n                          align=\"right\"\r\n                        >\r\n                          {historyRow.group.groupName}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    ))}\r\n                </TableBody>\r\n              </Table>\r\n              {load && (\r\n                <Box\r\n                  sx={{\r\n                    display: 'flex',\r\n                    justifyContent: 'center',\r\n                    width: '100%',\r\n                    my: 3,\r\n                  }}\r\n                >\r\n                  <CircularProgress sx={{ fontSize: 30 }} />\r\n                </Box>\r\n              )}\r\n            </Box>\r\n          </Collapse>\r\n        </TableCell>\r\n      </TableRow>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nconst ReportTable = (props) => {\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell />\r\n            <TableCell>Full Name</TableCell>\r\n            <TableCell align=\"center\">Phone Number</TableCell>\r\n            {props.selectedHotspots.length === 0 &&\r\n              props.hotspotList.map((hotspot, index) => (\r\n                <TableCell key={hotspot._id} align=\"center\">\r\n                  {hotspot.hotspotName}\r\n                </TableCell>\r\n              ))}\r\n            {props.selectedHotspots.length !== 0 &&\r\n              props.selectedHotspots.map((hotspot, index) => (\r\n                <TableCell key={hotspot._id} align=\"center\">\r\n                  {hotspot.hotspotName}\r\n                </TableCell>\r\n              ))}\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {props.tableData.map((row) => (\r\n            <Row\r\n              key={row.phoneNumber}\r\n              row={row}\r\n              hotspotList={props.hotspotList}\r\n              selectedHotspots={props.selectedHotspots}\r\n              selectedGroups={props.selectedGroups}\r\n              selectedMonth={props.selectedMonth}\r\n            />\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  )\r\n}\r\n\r\nexport default React.memo(ReportTable)\r\n","import React from 'react'\r\nimport {\r\n  Checkbox,\r\n  FormControl,\r\n  InputLabel,\r\n  ListItemText,\r\n  MenuItem,\r\n  OutlinedInput,\r\n  Select,\r\n} from '@mui/material'\r\n\r\nconst ITEM_HEIGHT = 48\r\nconst ITEM_PADDING_TOP = 8\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n    },\r\n  },\r\n}\r\n\r\nconst HotspotFilter = (props) => {\r\n  return (\r\n    <FormControl variant=\"outlined\" sx={{ width: '250px', ml: 3 }}>\r\n      <InputLabel id=\"hotspotFilter\">Hotspots</InputLabel>\r\n      <Select\r\n        id=\"hotspotFilter\"\r\n        multiple\r\n        value={props.selectedHotspotNames}\r\n        onChange={props.handleHotspotSelect}\r\n        input={<OutlinedInput label=\"Hotspots\" />}\r\n        renderValue={(selected) => selected.join(', ')}\r\n        MenuProps={MenuProps}\r\n      >\r\n        {props.hotspotNames.map((hotspot) => (\r\n          <MenuItem key={hotspot._id} value={hotspot._id}>\r\n            <Checkbox\r\n              checked={props.selectedHotspotNames.indexOf(hotspot._id) > -1}\r\n            />\r\n            <ListItemText primary={hotspot.hotspotName} />\r\n          </MenuItem>\r\n        ))}\r\n      </Select>\r\n    </FormControl>\r\n  )\r\n}\r\n\r\nexport default React.memo(HotspotFilter)\r\n","import React from 'react'\r\nimport {\r\n  Checkbox,\r\n  FormControl,\r\n  InputLabel,\r\n  ListItemText,\r\n  MenuItem,\r\n  OutlinedInput,\r\n  Select,\r\n} from '@mui/material'\r\n\r\nconst ITEM_HEIGHT = 48\r\nconst ITEM_PADDING_TOP = 8\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n    },\r\n  },\r\n}\r\n\r\nconst DeviceFilter = (props) => {\r\n  return (\r\n    <FormControl variant=\"outlined\" sx={{ width: '250px', ml: 3 }}>\r\n      <InputLabel>Mobile Devices</InputLabel>\r\n      <Select\r\n        label=\"Mobile Devices\"\r\n        multiple\r\n        value={props.selectedDevices}\r\n        onChange={props.handleSelectedDevice}\r\n        input={<OutlinedInput label=\"Mobile Devices\" />}\r\n        renderValue={(selected) => selected.join(', ')}\r\n        MenuProps={MenuProps}\r\n      >\r\n        {props.mobileDevices.map((device, i) => (\r\n          <MenuItem\r\n            key={device._id}\r\n            value={`${device.fullName} - ${device.phoneNumber}`}\r\n          >\r\n            <Checkbox\r\n              checked={\r\n                props.selectedDevices.indexOf(\r\n                  `${device.fullName} - ${device.phoneNumber}`,\r\n                ) > -1\r\n              }\r\n            />\r\n            <ListItemText\r\n              primary={`${device.fullName} +91 ${device.phoneNumber}`}\r\n            />\r\n          </MenuItem>\r\n        ))}\r\n      </Select>\r\n    </FormControl>\r\n  )\r\n}\r\n\r\nexport default React.memo(DeviceFilter)\r\n","import React from 'react'\r\nimport {\r\n  Alert,\r\n  FormControl,\r\n  InputLabel,\r\n  MenuItem,\r\n  Select,\r\n  Snackbar,\r\n} from '@mui/material'\r\n\r\nconst MonthFilter = (props) => {\r\n  const [isDisable, setIsDisable] = React.useState(false)\r\n  const [open, setOpen] = React.useState(false)\r\n\r\n  React.useEffect(() => {\r\n    if (props.subscription !== null) {\r\n      setIsDisable(props.subscription.reportCount === 1)\r\n    }\r\n  }, [props.subscription])\r\n\r\n  const showError = () => {\r\n    setOpen(true)\r\n  }\r\n\r\n  console.log(isDisable)\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <FormControl variant=\"outlined\" sx={{ width: '250px', ml: 3 }}>\r\n        <InputLabel>Month</InputLabel>\r\n        <Select\r\n          value={props.selectedMonth}\r\n          onChange={\r\n            isDisable\r\n              ? () => showError()\r\n              : (e) => props.setSelectedMonth(e.target.value)\r\n          }\r\n          label=\"Month\"\r\n        >\r\n          {props.Months.map((month, i) => (\r\n            <MenuItem sx={{ py: 1.2, px: 2 }} key={i} value={month}>\r\n              {month}\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n      <Snackbar\r\n        anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n        open={open}\r\n        autoHideDuration={6000}\r\n        onClose={() => setOpen(false)}\r\n      >\r\n        <Alert\r\n          onClose={() => setOpen(false)}\r\n          severity=\"error\"\r\n          variant=\"filled\"\r\n          sx={{ width: '100%' }}\r\n        >\r\n          You cannot use this feature. Please upgrade your plan.\r\n        </Alert>\r\n      </Snackbar>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default React.memo(MonthFilter)\r\n","import React from 'react'\r\nimport {\r\n  Checkbox,\r\n  FormControl,\r\n  InputLabel,\r\n  ListItemText,\r\n  MenuItem,\r\n  OutlinedInput,\r\n  Select,\r\n} from '@mui/material'\r\n\r\nconst ITEM_HEIGHT = 48\r\nconst ITEM_PADDING_TOP = 8\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n    },\r\n  },\r\n}\r\nconst GroupFilter = (props) => {\r\n  return (\r\n    <FormControl variant=\"outlined\" sx={{ width: '250px', ml: 3 }}>\r\n      <InputLabel id=\"hotspotFilter\">Groups</InputLabel>\r\n      <Select\r\n        id=\"hotspotFilter\"\r\n        multiple\r\n        value={props.selectedGroupNames}\r\n        onChange={props.handleGroupSelect}\r\n        input={<OutlinedInput label=\"Groups\" />}\r\n        renderValue={(selected) => selected.join(', ')}\r\n        MenuProps={MenuProps}\r\n      >\r\n        {props.groupNames.map((group, i) => (\r\n          <MenuItem key={group._id} value={group._id}>\r\n            <Checkbox\r\n              checked={props.selectedGroupNames.indexOf(group._id) > -1}\r\n            />\r\n            <ListItemText primary={group.groupName} />\r\n          </MenuItem>\r\n        ))}\r\n      </Select>\r\n    </FormControl>\r\n  )\r\n}\r\n\r\nexport default React.memo(GroupFilter)\r\n","import { createContext, useEffect, useReducer, useState } from 'react'\r\nimport { auth, db } from '../Firebase'\r\nimport { onAuthStateChanged } from 'firebase/auth'\r\nimport { API_SERVICE } from '../URI'\r\nimport axios from 'axios'\r\nimport { doc, getDoc } from 'firebase/firestore'\r\n\r\nconst initialState = {\r\n    customerId: null,\r\n    subscriptions: [],\r\n    cart: {},\r\n}\r\n\r\nconst reducer = (state, action) => {\r\n    if (action.type === 'SUBSCRIPTION_DATA_CHANGED') {\r\n        const { customerId, subscriptions } = action.payload\r\n        return {\r\n            ...state,\r\n            customerId,\r\n            subscriptions,\r\n            isInitialized: true,\r\n        }\r\n    }\r\n\r\n    if (action.type === 'SELECT_PRODUCT') {\r\n        console.log('Success', action.payload)\r\n        const { cart } = action.payload\r\n        return {\r\n            ...state,\r\n            cart,\r\n        }\r\n    }\r\n\r\n    if (action.type === 'PAYMENT_DETAILS') {\r\n        console.log('Success', action.payload)\r\n        const { details } = action.payload\r\n        return {\r\n            ...state,\r\n            cart: { ...state.cart, details },\r\n        }\r\n    }\r\n\r\n    return state\r\n}\r\n\r\nexport const SubscriptionContext = createContext({\r\n    ...initialState,\r\n})\r\n\r\nexport const SubscriptionProvider = (props) => {\r\n    const { children } = props\r\n    const [state, dispatch] = useReducer(reducer, initialState)\r\n\r\n    useEffect(async () => {\r\n        onAuthStateChanged(auth, async (user) => {\r\n            try {\r\n                const ref = doc(db, 'trackerWebUser', user.uid)\r\n                const snap = await getDoc(ref)\r\n\r\n                let userData\r\n\r\n                if (snap.exists()) {\r\n                    const data = snap.data()\r\n                    userData = {\r\n                        uid: data.uid,\r\n                        displayName: `${data.firstName} ${data.lastName}`,\r\n                        email: data.email,\r\n                    }\r\n                } else {\r\n                    const _email = user.email\r\n                    console.log(_email)\r\n                    const { data } = await axios.get(\r\n                        `${API_SERVICE}/get/admin/${_email}`\r\n                    )\r\n\r\n                    const { createdBy } = data\r\n\r\n                    const ref = doc(db, 'trackerWebUser', createdBy)\r\n                    const snap = await getDoc(ref)\r\n\r\n                    if (snap.exists()) {\r\n                        const data = snap.data()\r\n                        userData = {\r\n                            uid: data.uid,\r\n                            displayName: `${data.firstName} ${data.lastName}`,\r\n                            email: data.email,\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (userData) {\r\n                    const customer = await fetchCustomer(userData)\r\n                    if (customer) {\r\n                        const subscriptions = await fetchSubscriptions(\r\n                            customer?.id\r\n                        )\r\n                        dispatch({\r\n                            type: 'SUBSCRIPTION_DATA_CHANGED',\r\n                            payload: {\r\n                                customerId: customer?.id,\r\n                                subscriptions: subscriptions,\r\n                            },\r\n                        })\r\n                    }\r\n                } else {\r\n                    dispatch({\r\n                        type: 'SUBSCRIPTION_DATA_CHANGED',\r\n                        payload: {\r\n                            customerId: null,\r\n                            subscriptions: [],\r\n                        },\r\n                    })\r\n                }\r\n            } catch (error) {\r\n                console.log(error.message)\r\n                dispatch({\r\n                    type: 'SUBSCRIPTION_DATA_CHANGED',\r\n                    payload: {\r\n                        customerId: null,\r\n                        subscriptions: [],\r\n                    },\r\n                })\r\n            }\r\n        })\r\n    }, [dispatch])\r\n\r\n    const fetchCustomer = async ({ uid, displayName, email }) => {\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n            },\r\n        }\r\n\r\n        const body = {\r\n            userId: uid,\r\n            name: displayName,\r\n            email,\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `${API_SERVICE}/create/customer`,\r\n            body,\r\n            config\r\n        )\r\n\r\n        return data\r\n    }\r\n\r\n    const fetchSubscriptions = async (customerId) => {\r\n        console.log(customerId)\r\n        const { data } = await axios.get(\r\n            `${API_SERVICE}/subscriptions/${customerId}`\r\n        )\r\n        return data.result\r\n    }\r\n\r\n    return (\r\n        <SubscriptionContext.Provider value={{ state, dispatch }}>\r\n            {children}\r\n        </SubscriptionContext.Provider>\r\n    )\r\n}\r\n\r\nexport const SubscriptionConsumer = SubscriptionContext.Consumer\r\n","import { useContext } from 'react'\r\nimport { SubscriptionContext } from '../contexts/subscriptionContext'\r\n\r\nexport const useSubscription = () => useContext(SubscriptionContext)\r\n","import axios from 'axios'\r\nimport { API_SERVICE } from '../URI'\r\n\r\nconst fetchPlans = async () => {\r\n    const { data } = await axios.get(`${API_SERVICE}/subscription/config`)\r\n\r\n    return data.prices\r\n}\r\n\r\nexport const getSubscriptionDetails = async (state) => {\r\n    let subscriptionDetail\r\n\r\n    if (state.subscriptions.length !== 0) {\r\n        for (let sub of state?.subscriptions?.data) {\r\n            if (sub.status === 'active') {\r\n                subscriptionDetail = sub\r\n                break\r\n            }\r\n        }\r\n    }\r\n\r\n    if (subscriptionDetail) {\r\n        const plans = await fetchPlans()\r\n        const planArr =\r\n            plans.length !== 0\r\n                ? plans.filter((x) => x.id === subscriptionDetail.plan.id)\r\n                : []\r\n\r\n        if (planArr.length !== 0) {\r\n            const plan = planArr[0]\r\n            const productName = plan.product.name\r\n\r\n            const sub = {\r\n                planId: plan.id,\r\n                productName,\r\n                productId: plan.product.id,\r\n                hotspotCount:\r\n                    productName === 'Pro Plan' ? Number.MAX_VALUE : 10,\r\n                deviceCount:\r\n                    productName === 'Pro Plan'\r\n                        ? subscriptionDetail.quantity\r\n                        : Number.MAX_VALUE,\r\n                groupCount: productName === 'Pro Plan' ? Number.MAX_VALUE : 2,\r\n                adminCount: productName === 'Pro Plan' ? Number.MAX_VALUE : 0,\r\n                reportCount: productName === 'Pro Plan' ? Number.MAX_VALUE : 1,\r\n            }\r\n\r\n            return sub\r\n        }\r\n    }\r\n\r\n    return null\r\n}\r\n","import * as React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Box from '@mui/material/Box'\r\nimport Collapse from '@mui/material/Collapse'\r\nimport IconButton from '@mui/material/IconButton'\r\nimport Table from '@mui/material/Table'\r\nimport TableBody from '@mui/material/TableBody'\r\nimport TableCell from '@mui/material/TableCell'\r\nimport TableContainer from '@mui/material/TableContainer'\r\nimport TableHead from '@mui/material/TableHead'\r\nimport TableRow from '@mui/material/TableRow'\r\nimport Typography from '@mui/material/Typography'\r\nimport Paper from '@mui/material/Paper'\r\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown'\r\nimport KeyboardArrowUpIcon from '@mui/icons-material/KeyboardArrowUp'\r\nimport { CircularProgress } from '@mui/material'\r\nimport moment from 'moment'\r\nimport axios from 'axios'\r\nimport { API_SERVICE } from '../../URI'\r\n\r\nfunction Row(props) {\r\n  const {\r\n    row,\r\n    hotspotList,\r\n    selectedHotspots,\r\n    selectedGroups,\r\n    selectedMonth,\r\n  } = props\r\n  const [history, setHistory] = React.useState([])\r\n  const [load, setLoad] = React.useState(false)\r\n\r\n  const userData = sessionStorage.getItem('userData')\r\n    ? JSON.parse(sessionStorage.getItem('userData'))\r\n    : null\r\n\r\n  const arr = row.hotspots.map((x) => x.hotspot)\r\n\r\n  const checkExist = (x) => {\r\n    const i = arr.findIndex((e) => e === x._id)\r\n    return i\r\n  }\r\n\r\n  const filterGroup = async (data) => {\r\n    return new Promise((resolve) => {\r\n      const arr = []\r\n\r\n      for (let id of selectedGroups) {\r\n        console.log('inside')\r\n        for (let x of data) {\r\n          if (id === x.group._id) {\r\n            arr.push(x)\r\n          }\r\n        }\r\n      }\r\n      console.log('Here')\r\n      resolve(arr)\r\n    })\r\n  }\r\n\r\n  React.useEffect(async () => {\r\n    try {\r\n      setLoad(true)\r\n      const { data } = await axios.get(\r\n        `${API_SERVICE}/get/location/${userData.uid}/${row.phoneNumber}/${\r\n          selectedMonth + 1\r\n        }`,\r\n      )\r\n\r\n      if (selectedGroups.length === 0) {\r\n        setHistory(data)\r\n        setLoad(false)\r\n      } else {\r\n        const arr = await filterGroup(data)\r\n\r\n        setHistory(arr)\r\n        setLoad(false)\r\n      }\r\n    } catch (error) {\r\n      console.log(error.message)\r\n    }\r\n  }, [selectedGroups])\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <TableRow sx={{ '& > *': { borderBottom: 'unset' } }}>\r\n        <TableCell></TableCell>\r\n        <TableCell component=\"th\" scope=\"row\">\r\n          {row.device}\r\n        </TableCell>\r\n        <TableCell align=\"center\">{row.phoneNumber}</TableCell>\r\n\r\n        {selectedHotspots.length === 0 &&\r\n          hotspotList.map((x, i) => (\r\n            <React.Fragment key={x.hotspot}>\r\n              {checkExist(x) !== -1 ? (\r\n                <TableCell key={x.hotspot} align=\"center\">\r\n                  {row.hotspots[checkExist(x)].total}\r\n                </TableCell>\r\n              ) : (\r\n                <TableCell key={x.hotspot} align=\"center\">\r\n                  0\r\n                </TableCell>\r\n              )}\r\n            </React.Fragment>\r\n          ))}\r\n        {selectedHotspots.length !== 0 &&\r\n          selectedHotspots.map((x, i) => (\r\n            <React.Fragment key={x.hotspot}>\r\n              {checkExist(x) !== -1 ? (\r\n                <TableCell key={x.hotspot} align=\"center\">\r\n                  {row.hotspots[checkExist(x)].total}\r\n                </TableCell>\r\n              ) : (\r\n                <TableCell key={x.hotspot} align=\"center\">\r\n                  0\r\n                </TableCell>\r\n              )}\r\n            </React.Fragment>\r\n          ))}\r\n      </TableRow>\r\n      <TableRow>\r\n        <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\r\n          <Box sx={{ margin: 1 }}>\r\n            <Typography variant=\"h6\" sx={{ my: 2 }} component=\"div\">\r\n              History\r\n            </Typography>\r\n            <Table size=\"small\" aria-label=\"purchases\">\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell>Date</TableCell>\r\n                  <TableCell>Address</TableCell>\r\n                  <TableCell align=\"right\">Hotspot</TableCell>\r\n                  <TableCell align=\"right\">Group</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {!load &&\r\n                  history.map((historyRow, index) => (\r\n                    <TableRow key={index + 1}>\r\n                      <TableCell\r\n                        sx={{ borderWidth: 0, padding: '16px' }}\r\n                        component=\"th\"\r\n                        scope=\"row\"\r\n                      >\r\n                        {moment(historyRow.createdAt).format(\r\n                          'DD MMMM YYYY - hh:mm a',\r\n                        )}\r\n                      </TableCell>\r\n                      <TableCell sx={{ borderWidth: 0, padding: '16px' }}>\r\n                        {historyRow.address}\r\n                      </TableCell>\r\n                      <TableCell\r\n                        sx={{ borderWidth: 0, padding: '16px' }}\r\n                        align=\"right\"\r\n                      >\r\n                        {historyRow.hotspot.hotspotName}\r\n                      </TableCell>\r\n                      <TableCell\r\n                        sx={{ borderWidth: 0, padding: '16px' }}\r\n                        align=\"right\"\r\n                      >\r\n                        {historyRow.group.groupName}\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n              </TableBody>\r\n            </Table>\r\n            {load && (\r\n              <Box\r\n                sx={{\r\n                  display: 'flex',\r\n                  justifyContent: 'center',\r\n                  width: '100%',\r\n                  my: 3,\r\n                }}\r\n              >\r\n                <CircularProgress sx={{ fontSize: 30 }} />\r\n              </Box>\r\n            )}\r\n          </Box>\r\n        </TableCell>\r\n      </TableRow>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nconst ReportTable = (props) => {\r\n  return (\r\n    <TableContainer hidden component={Paper}>\r\n      <Table id={props.id}>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell />\r\n            <TableCell>Full Name</TableCell>\r\n            <TableCell align=\"center\">Phone Number</TableCell>\r\n            {props.selectedHotspots.length === 0 &&\r\n              props.hotspotList.map((hotspot, index) => (\r\n                <TableCell key={hotspot._id} align=\"center\">\r\n                  {hotspot.hotspotName}\r\n                </TableCell>\r\n              ))}\r\n            {props.selectedHotspots.length !== 0 &&\r\n              props.selectedHotspots.map((hotspot, index) => (\r\n                <TableCell key={hotspot._id} align=\"center\">\r\n                  {hotspot.hotspotName}\r\n                </TableCell>\r\n              ))}\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {props.tableData.map((row) => (\r\n            <Row\r\n              key={row.phoneNumber}\r\n              row={row}\r\n              hotspotList={props.hotspotList}\r\n              selectedHotspots={props.selectedHotspots}\r\n              selectedGroups={props.selectedGroups}\r\n              selectedMonth={props.selectedMonth}\r\n            />\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  )\r\n}\r\n\r\nexport default React.memo(ReportTable)\r\n","import React, { useEffect, useState, useRef } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { Box, Button, CircularProgress, Backdrop } from '@mui/material'\r\nimport ReportTable from '../components/report/ReportTable'\r\nimport HotspotFilter from '../components/report/HotspotFilter'\r\nimport DeviceFilter from '../components/report/DeviceFilter'\r\nimport MonthFilter from '../components/report/MonthFilter'\r\nimport GroupFilter from '../components/report/GroupFilter'\r\nimport axios from 'axios'\r\nimport { API_SERVICE } from '../URI'\r\nimport ReactHTMLTableToExcel from 'react-html-table-to-excel'\r\nimport { useNavigate } from 'react-router'\r\nimport { useSubscription } from '../hooks/useSubscription'\r\nimport { getSubscriptionDetails } from '../utils/getSubscriptionDetails'\r\nimport HiddenReportTable from '../components/report/HiddenReportTable'\r\n\r\nconst Months = [\r\n    'January',\r\n    'February',\r\n    'March',\r\n    'April',\r\n    'May',\r\n    'June',\r\n    'July',\r\n    'August',\r\n    'September',\r\n    'October',\r\n    'November',\r\n    'December',\r\n]\r\n\r\nconst Report = () => {\r\n    const [tableData, setTableData] = useState([])\r\n\r\n    const [selectedHotspotNames, setSelectedHotspotNames] = useState([])\r\n    const [selectedGroups, setSelectedGroups] = useState([])\r\n    const [selectedHotspots, setSelectedHotspots] = useState([])\r\n    const [selectedDevices, setSelectedDevices] = useState([])\r\n    const [selectedMonth, setSelectedMonth] = useState(\r\n        Months[new Date().getMonth()]\r\n    )\r\n    const [loading, setLoading] = useState(false)\r\n    const [filteredData, setFilteredData] = useState([])\r\n\r\n    // subscription state\r\n    const [subscription, setSubscription] = useState(null)\r\n\r\n    const userData = sessionStorage.getItem('userData')\r\n        ? JSON.parse(sessionStorage.getItem('userData'))\r\n        : null\r\n\r\n    const devices = useSelector((state) => state.devices)\r\n    const { deviceList } = devices\r\n\r\n    const groups = useSelector((state) => state.groups)\r\n    const { groupList } = groups\r\n    const hotspots = useSelector((state) => state.hotspots)\r\n    const { hotspotList } = hotspots\r\n\r\n    const { state } = useSubscription()\r\n\r\n    const navigate = useNavigate()\r\n\r\n    useEffect(() => {\r\n        const authToken = sessionStorage.getItem('authToken')\r\n\r\n        if (!authToken) {\r\n            navigate('/login')\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (userData !== null) {\r\n            setLoading(true)\r\n            const fetchData = async () => {\r\n                const { data } = await axios.get(\r\n                    `${API_SERVICE}/get/attendance/${userData.uid}/${\r\n                        Months.indexOf(selectedMonth) + 1\r\n                    }`\r\n                )\r\n\r\n                console.log(data)\r\n                setTableData(data)\r\n                setLoading(false)\r\n            }\r\n\r\n            fetchData()\r\n        }\r\n    }, [selectedMonth])\r\n\r\n    useEffect(() => {\r\n        const fetchSubDetail = async () => {\r\n            const details = await getSubscriptionDetails(state)\r\n            setSubscription(details)\r\n        }\r\n\r\n        fetchSubDetail()\r\n    }, [])\r\n\r\n    // handling hotspot selection\r\n    const handleHotspotSelect = async (event) => {\r\n        const {\r\n            target: { value },\r\n        } = event\r\n        setSelectedHotspotNames(\r\n            typeof value === 'string' ? value.split(',') : value\r\n        )\r\n    }\r\n\r\n    // handling group selection\r\n    const handleGroupSelect = async (event) => {\r\n        const {\r\n            target: { value },\r\n        } = event\r\n        setSelectedGroups(typeof value === 'string' ? value.split(',') : value)\r\n    }\r\n\r\n    // handling device selection\r\n    const handleSelectedDevice = (event) => {\r\n        const {\r\n            target: { value },\r\n        } = event\r\n        setSelectedDevices(typeof value === 'string' ? value.split(',') : value)\r\n    }\r\n\r\n    // applying filter\r\n    useEffect(async () => {\r\n        setLoading(true)\r\n        let hotspots = []\r\n        if (selectedHotspotNames.length !== 0) {\r\n            selectedHotspotNames.forEach((x) => {\r\n                const temp = hotspotList\r\n                const filterArr = temp.filter((item) => item._id === x)\r\n                hotspots.push(...filterArr)\r\n            })\r\n        } else {\r\n            hotspots = hotspotList\r\n        }\r\n\r\n        setSelectedHotspots(hotspots)\r\n        let devices = []\r\n        if (selectedDevices.length !== 0) {\r\n            const temp = tableData\r\n            selectedDevices.forEach((x, i) => {\r\n                const number = x.split(' - ')[1]\r\n                const filterArr = temp.filter(\r\n                    (item) => item.phoneNumber === number\r\n                )\r\n                devices.push(...filterArr)\r\n            })\r\n        } else {\r\n            devices = tableData\r\n        }\r\n\r\n        setFilteredData(devices)\r\n\r\n        setLoading(false)\r\n    }, [selectedDevices, selectedHotspotNames])\r\n\r\n    return (\r\n        <Box sx={{ p: 5 }}>\r\n            <Box\r\n                sx={{\r\n                    display: 'flex',\r\n                    justifyContent: 'flex-end',\r\n                    gap: 2,\r\n                    mt: 4,\r\n                }}\r\n            >\r\n                <MonthFilter\r\n                    Months={Months}\r\n                    selectedMonth={selectedMonth}\r\n                    setSelectedMonth={setSelectedMonth}\r\n                    subscription={subscription}\r\n                />\r\n\r\n                <HotspotFilter\r\n                    handleHotspotSelect={handleHotspotSelect}\r\n                    selectedHotspotNames={selectedHotspotNames}\r\n                    hotspotNames={hotspotList}\r\n                />\r\n\r\n                <GroupFilter\r\n                    handleGroupSelect={handleGroupSelect}\r\n                    selectedGroupNames={selectedGroups}\r\n                    groupNames={groupList}\r\n                />\r\n\r\n                <DeviceFilter\r\n                    handleSelectedDevice={handleSelectedDevice}\r\n                    selectedDevices={selectedDevices}\r\n                    mobileDevices={deviceList}\r\n                />\r\n\r\n                <Button variant='outlined' sx={{ p: 0 }}>\r\n                    <ReactHTMLTableToExcel\r\n                        id='test-table-xls-button'\r\n                        table='table-to-xls'\r\n                        filename='report'\r\n                        sheet='tablexls'\r\n                        className='export-btn'\r\n                        buttonText='Export'\r\n                    />\r\n                </Button>\r\n            </Box>\r\n\r\n            <Box sx={{ my: 4 }}>\r\n                {!loading ? (\r\n                    <ReportTable\r\n                        tableData={\r\n                            selectedDevices.length === 0\r\n                                ? tableData\r\n                                : filteredData\r\n                        }\r\n                        id='table-to-xls'\r\n                        hotspotList={hotspotList}\r\n                        selectedHotspots={selectedHotspots}\r\n                        selectedGroups={selectedGroups}\r\n                        selectedMonth={Months.indexOf(selectedMonth)}\r\n                    />\r\n                ) : (\r\n                    <Box\r\n                        sx={{\r\n                            display: 'flex',\r\n                            justifyContent: 'center',\r\n                            mt: '300px',\r\n                        }}\r\n                    >\r\n                        <CircularProgress color='inherit' />\r\n                    </Box>\r\n                )}\r\n            </Box>\r\n            <Box sx={{ my: 4 }}>\r\n                {!loading ? (\r\n                    <HiddenReportTable\r\n                        tableData={\r\n                            selectedDevices.length === 0\r\n                                ? tableData\r\n                                : filteredData\r\n                        }\r\n                        id='table-to-xls'\r\n                        hotspotList={hotspotList}\r\n                        selectedHotspots={selectedHotspots}\r\n                        selectedGroups={selectedGroups}\r\n                        selectedMonth={Months.indexOf(selectedMonth)}\r\n                    />\r\n                ) : (\r\n                    <Box\r\n                        sx={{\r\n                            display: 'flex',\r\n                            justifyContent: 'center',\r\n                            mt: '300px',\r\n                        }}\r\n                    >\r\n                        <CircularProgress color='inherit' />\r\n                    </Box>\r\n                )}\r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Report\r\n","import React, { useState, useEffect } from 'react'\r\nimport {\r\n    Paper,\r\n    Box,\r\n    List,\r\n    ListItem,\r\n    Avatar,\r\n    ListItemAvatar,\r\n    ListItemText,\r\n    Stack,\r\n    Typography,\r\n    FormControl,\r\n    InputLabel,\r\n    Select,\r\n    MenuItem,\r\n    Divider,\r\n} from '@mui/material'\r\nimport { Image } from '@mui/icons-material'\r\n//import { firestore } from '../Firebase/index'\r\nimport { db } from '../Firebase/index'\r\nimport { onSnapshot, doc, query, orderBy } from 'firebase/firestore'\r\nimport moment from 'moment'\r\n\r\nconst Notification = () => {\r\n    const [filter, setFilter] = useState('All')\r\n    const [notificationList, setNotificationList] = useState([])\r\n    const [filterList, setFilterList] = useState([])\r\n\r\n    const userData = sessionStorage.getItem('userData')\r\n        ? JSON.parse(sessionStorage.getItem('userData'))\r\n        : null\r\n\r\n    const handleFilterChange = (event) => {\r\n        setFilter(event.target.value)\r\n    }\r\n\r\n    const getTime = (sec) => {\r\n        const str = moment(new Date(sec * 1000)).fromNow()\r\n\r\n        switch (str) {\r\n            case 'in a few seconds':\r\n                return 'few sec'\r\n            case 'a few seconds ago':\r\n                return 'few sec'\r\n            case 'a minute ago':\r\n                return '1m'\r\n            case 'an hour ago':\r\n                return '1h'\r\n            case 'a day ago':\r\n                return '1day'\r\n            default:\r\n                const first = str.split(' ')[0]\r\n                let mid = str.split(' ')[1]\r\n                if (mid === 'minutes' || mid === 'minute') {\r\n                    mid = 'm'\r\n                }\r\n                if (mid === 'hours' || mid === 'hour') {\r\n                    mid = 'h'\r\n                }\r\n                if (mid === 'days' || mid === 'day') {\r\n                    mid = 'd'\r\n                }\r\n                return first + mid\r\n        }\r\n    }\r\n\r\n    // useEffect(async () => {\r\n    //   const notificationRef = doc(db, 'trackingWebNotification', userData.uid)\r\n\r\n    //   const unsub = onSnapshot(notificationRef, (snap) => {\r\n    //     if (snap.exists()) {\r\n    //       const data = snap.data()\r\n    //       if (data.notificationList !== undefined) {\r\n    //         const list = data.notificationList\r\n    //         list.sort((a, b) => {\r\n    //           return new Date(b.createdAt.seconds) - new Date(a.createdAt.seconds)\r\n    //         })\r\n    //         setNotificationList(list)\r\n    //       }\r\n    //     }\r\n    //   })\r\n\r\n    //   return () => unsub()\r\n    // }, [])\r\n\r\n    useEffect(() => {\r\n        const temp = notificationList\r\n        const currDate = new Date().getTime()\r\n        let filterArr = []\r\n\r\n        if (filter === 'Today') {\r\n            filterArr = temp.filter(\r\n                (x) =>\r\n                    new Date(x.createdAt.seconds * 1000).getDate() ===\r\n                    new Date(currDate).getDate()\r\n            )\r\n        } else if (filter === 'Last Week') {\r\n            let start = new Date(currDate).getDate() - 7\r\n            if (start <= 0) {\r\n                start = 30 + start\r\n            }\r\n            const end = new Date(currDate).getDate()\r\n\r\n            console.log(start, end)\r\n\r\n            filterArr = temp.filter(\r\n                (x) =>\r\n                    new Date(x.createdAt.seconds * 1000).getDate() >= start ||\r\n                    new Date(x.createdAt.seconds * 1000).getDate() <= end\r\n            )\r\n        } else {\r\n            filterArr = temp\r\n        }\r\n\r\n        setFilterList(filterArr)\r\n    }, [filter])\r\n\r\n    return (\r\n        <Box sx={{ display: 'flex', justifyContent: 'center', m: 4 }}>\r\n            <Paper\r\n                sx={{\r\n                    width: { md: '70%', lg: '60%', xl: '50%' },\r\n                    p: 2,\r\n                    borderRadius: 5,\r\n                    boxShadow: 5,\r\n                }}\r\n            >\r\n                <Stack\r\n                    direction='row'\r\n                    justifyContent='space-between'\r\n                    sx={{ p: 2 }}\r\n                >\r\n                    <Box\r\n                        sx={{\r\n                            display: 'flex',\r\n                            flexDirection: 'row',\r\n                            justifyContent: 'space-between',\r\n                            alignItems: 'center',\r\n                            width: '100%',\r\n                        }}\r\n                    >\r\n                        <Box>\r\n                            <Typography variant='h3'>Notifications</Typography>\r\n                        </Box>\r\n                        <Stack direction='row' alignItems='center'>\r\n                            <Typography variant='h4'>Filter By</Typography>\r\n                            <FormControl\r\n                                variant='outlined'\r\n                                sx={{ width: 250, ml: 3 }}\r\n                            >\r\n                                <InputLabel>Select Filter</InputLabel>\r\n                                <Select\r\n                                    value={filter}\r\n                                    onChange={handleFilterChange}\r\n                                    label='Select Filter'\r\n                                >\r\n                                    <MenuItem value={'All'}>All</MenuItem>\r\n                                    <MenuItem value={'Today'}>Today</MenuItem>\r\n                                    <MenuItem value={'Last Week'}>\r\n                                        Last Week\r\n                                    </MenuItem>\r\n                                </Select>\r\n                            </FormControl>\r\n                        </Stack>\r\n                    </Box>\r\n                    {/* <Typography>mark all as read</Typography> */}\r\n                </Stack>\r\n                <List sx={{ padding: 2 }}>\r\n                    {filter === 'All' &&\r\n                        notificationList.map((x, i) => (\r\n                            <div key={++i}>\r\n                                <ListItem sx={{ mt: 1.5 }}>\r\n                                    <ListItemAvatar>\r\n                                        <Avatar>\r\n                                            <Image />\r\n                                        </Avatar>\r\n                                    </ListItemAvatar>\r\n                                    <ListItemText\r\n                                        primary={x.message}\r\n                                        secondary={\r\n                                            getTime(x.createdAt.seconds) +\r\n                                            ' ago'\r\n                                        }\r\n                                    />\r\n                                </ListItem>\r\n                                <Divider />\r\n                            </div>\r\n                        ))}\r\n\r\n                    {filter !== 'All' &&\r\n                        filterList.map((x, i) => (\r\n                            <div key={++i}>\r\n                                <ListItem sx={{ mt: 1.5 }}>\r\n                                    <ListItemAvatar>\r\n                                        <Avatar>\r\n                                            <Image />\r\n                                        </Avatar>\r\n                                    </ListItemAvatar>\r\n                                    <ListItemText\r\n                                        primary={x.message}\r\n                                        secondary={\r\n                                            getTime(x.createdAt.seconds) +\r\n                                            ' ago'\r\n                                        }\r\n                                    />\r\n                                </ListItem>\r\n                                <Divider />\r\n                            </div>\r\n                        ))}\r\n                </List>\r\n            </Paper>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Notification\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport {\r\n  Button,\r\n  Checkbox,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  FormControl,\r\n  InputLabel,\r\n  ListItemText,\r\n  MenuItem,\r\n  Select,\r\n  TextField,\r\n} from '@mui/material'\r\nimport { db } from '../../Firebase/index'\r\nimport { arrayRemove, arrayUnion, doc, updateDoc } from 'firebase/firestore'\r\nimport { updateDevice } from '../../store/actions/device'\r\n\r\nconst ITEM_HEIGHT = 48\r\nconst ITEM_PADDING_TOP = 8\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250,\r\n    },\r\n  },\r\n}\r\n\r\nconst EditDeviceDialog = (props) => {\r\n  const {\r\n    setEditDialogOpen,\r\n    editDialogOpen,\r\n    selectedDevice,\r\n    trackingGroups,\r\n    setSuccess,\r\n    setSnackOpen,\r\n    setError,\r\n  } = props\r\n\r\n  const [newFullName, setNewFullName] = useState('')\r\n  // const [newDeviceGroup, setNewDeviceGroup] = useState([])\r\n  const [selectedGroups, setSelectedGroups] = useState([])\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const handleChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event\r\n    setSelectedGroups(typeof value === 'string' ? value.split(',') : value)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (Object.entries(selectedDevice).length !== 0) {\r\n      setNewFullName(selectedDevice.fullName)\r\n      const groups = selectedDevice.groups\r\n\r\n      const arr = []\r\n      groups.forEach((x) => arr.push(x._id))\r\n      setSelectedGroups(arr)\r\n    }\r\n  }, [selectedDevice])\r\n\r\n  // useEffect(() => {\r\n  //   const arr = []\r\n  //   selectedGroups.forEach((x) => {\r\n  //     const d = trackingGroups.filter((item) => item.id === x)[0]\r\n  //     const data = {\r\n  //       groupName: d.groupName,\r\n  //       id: d.id,\r\n  //     }\r\n  //     arr.push(data)\r\n  //   })\r\n\r\n  //   setNewDeviceGroup(arr)\r\n  // }, [selectedGroups])\r\n\r\n  const updateDetails = () => {\r\n    if (newFullName.length === 0) {\r\n      setError('Full name is required')\r\n      setSnackOpen(true)\r\n      return\r\n    }\r\n    const body = {\r\n      _id: selectedDevice._id,\r\n      fullName: newFullName,\r\n      groups: selectedGroups,\r\n    }\r\n\r\n    dispatch(updateDevice(body))\r\n    setNewFullName('')\r\n    setSelectedGroups([])\r\n    setEditDialogOpen(false)\r\n  }\r\n\r\n  // const updateDevice = () => {\r\n  //   const deviceRef = doc(db, 'trackingUsers', selectedDevice.id)\r\n  //   console.log('Here 1')\r\n  //   updateDoc(deviceRef, {\r\n  //     fullName: newFullName,\r\n  //     deviceGroups: newDeviceGroup,\r\n  //     groupId: selectedGroups,\r\n  //   })\r\n  //     .then(() => {\r\n  //       selectedDevice.deviceGroups.forEach(({ id }) => {\r\n  //         const groupRef = doc(db, 'trackingGroups', id)\r\n  //         updateDoc(groupRef, {\r\n  //           members: arrayRemove(selectedDevice.phoneNumber),\r\n  //         }).catch((error) => console.log(error))\r\n  //       })\r\n  //       console.log('Here')\r\n  //       selectedGroups.forEach((id) => {\r\n  //         const groupRef = doc(db, 'trackingGroups', id)\r\n  //         updateDoc(groupRef, {\r\n  //           members: arrayRemove(selectedDevice.phoneNumber),\r\n  //         }).catch((error) => console.log(error))\r\n  //         updateDoc(groupRef, {\r\n  //           members: arrayUnion(selectedDevice.phoneNumber),\r\n  //         }).catch((error) => console.log(error))\r\n  //       })\r\n  //     })\r\n  //     .then(() => {\r\n  //       setSuccess('Details Updated Successfully')\r\n  //       setSnackOpen(true)\r\n  //       setEditDialogOpen(false)\r\n  //     })\r\n  //     .catch((error) => {\r\n  //       setError(error.message)\r\n  //       setSnackOpen(true)\r\n  //     })\r\n  // }\r\n\r\n  return (\r\n    <Dialog open={editDialogOpen} onClose={() => setEditDialogOpen(false)}>\r\n      <DialogTitle sx={{ fontSize: 22 }}>Edit Device</DialogTitle>\r\n      <DialogContent sx={{ width: 500 }}>\r\n        <TextField\r\n          autoFocus\r\n          margin=\"dense\"\r\n          id=\"name\"\r\n          label=\"Full Name\"\r\n          type=\"text\"\r\n          fullWidth\r\n          variant=\"outlined\"\r\n          value={newFullName}\r\n          onChange={(e) => setNewFullName(e.target.value)}\r\n        />\r\n        <FormControl margin=\"normal\" fullWidth variant=\"outlined\">\r\n          <InputLabel id=\"device-group\">Select Group</InputLabel>\r\n          <Select\r\n            labelId=\"device-group\"\r\n            label=\"Select Group\"\r\n            value={selectedGroups}\r\n            onChange={handleChange}\r\n            multiple\r\n            renderValue={(selected) => selected.join(', ')}\r\n            MenuProps={MenuProps}\r\n          >\r\n            {trackingGroups.map((item) => (\r\n              <MenuItem key={item._id} value={item._id}>\r\n                <Checkbox checked={selectedGroups.indexOf(item._id) > -1} />\r\n                <ListItemText primary={item.groupName} />\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={() => setEditDialogOpen(false)}>Cancel</Button>\r\n        <Button onClick={() => updateDetails()}>Save Changes</Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n}\r\n\r\nexport default EditDeviceDialog\r\n","import React, { useEffect, useState } from 'react'\r\nimport {\r\n  Box,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Paper,\r\n  Typography,\r\n  IconButton,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  Button,\r\n  Chip,\r\n  DialogActions,\r\n  DialogContent,\r\n  Dialog,\r\n  DialogTitle,\r\n} from '@mui/material'\r\nimport DeleteIcon from '@mui/icons-material/Delete'\r\nimport Create from '@mui/icons-material/Create'\r\nimport { db } from '../../Firebase/index'\r\nimport {\r\n  arrayRemove,\r\n  collection,\r\n  deleteDoc,\r\n  doc,\r\n  onSnapshot,\r\n  query,\r\n  setDoc,\r\n  updateDoc,\r\n  where,\r\n} from 'firebase/firestore'\r\nimport TimeRangePicker from '@wojtekmaj/react-timerange-picker'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { deleteDevice } from '../../store/actions/device'\r\n\r\nconst DeviceSetting = (props) => {\r\n  const { success, error, open, toggleEditDeviceDialog } = props\r\n\r\n  const [deviceData, setDeviceData] = useState([])\r\n\r\n  const userData = sessionStorage.getItem('userData')\r\n    ? JSON.parse(sessionStorage.getItem('userData'))\r\n    : null\r\n\r\n  const adminData = sessionStorage.getItem('adminData')\r\n    ? JSON.parse(sessionStorage.getItem('adminData'))\r\n    : null\r\n\r\n  const devices = useSelector((state) => state.devices)\r\n  const { deviceList } = devices\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  // useEffect(async () => {\r\n  //   if (userData !== null) {\r\n  //     const deviceRef = collection(db, 'trackingUsers')\r\n  //     let q\r\n  //     if (adminData !== null) {\r\n  //       q = query(\r\n  //         deviceRef,\r\n  //         where('senderId', '==', userData.uid),\r\n  //         where('groupId', 'array-contains-any', adminData.groupId),\r\n  //       )\r\n  //     } else {\r\n  //       q = query(deviceRef, where('senderId', '==', userData.uid))\r\n  //     }\r\n\r\n  //     const unsub = onSnapshot(q, (snapshot) => {\r\n  //       const devices = []\r\n  //       snapshot.forEach((snap) => {\r\n  //         devices.push({ ...snap.data(), id: snap.id })\r\n  //       })\r\n  //       setDeviceData(devices)\r\n  //     })\r\n\r\n  //     return () => unsub()\r\n  //   }\r\n  // }, [])\r\n\r\n  const removeDevice = (data) => {\r\n    dispatch(deleteDevice(data._id))\r\n  }\r\n\r\n  // const deleteDevice = async (item) => {\r\n  //   const requestRef = doc(db, 'trackingRequest', item.phoneNumber)\r\n  //   await deleteDoc(requestRef)\r\n  //     .then(() => {\r\n  //       item.deviceGroups.forEach(({ id }) => {\r\n  //         const groupRef = doc(db, 'trackingGroups', id)\r\n  //         updateDoc(groupRef, {\r\n  //           members: arrayRemove(item.phoneNumber),\r\n  //         }).catch((error) => console.log(error))\r\n  //       })\r\n  //     })\r\n  //     .then(async () => {\r\n  //       const deviceRef = doc(db, 'trackingUsers', item.id)\r\n  //       await deleteDoc(deviceRef)\r\n  //         .then(() => {\r\n  //           success('Device Deleted Successfully')\r\n  //           open(true)\r\n  //         })\r\n  //         .catch((err) => {\r\n  //           error(err.message)\r\n  //           open(true)\r\n  //         })\r\n  //     })\r\n  //     .catch((err) => console.log(err.message))\r\n  // }\r\n\r\n  return (\r\n    <Box>\r\n      <TableContainer component={Paper} sx={{ boxShadow: 6 }}>\r\n        <Table sx={{ minWidth: 650 }}>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Name</TableCell>\r\n              <TableCell align=\"center\">Mobile Number</TableCell>\r\n              <TableCell align=\"center\">Groups Added</TableCell>\r\n              <TableCell align=\"center\">Tracking Status</TableCell>\r\n              <TableCell align=\"center\">Action</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {deviceList.map((data) => (\r\n              <TableRow\r\n                key={data._id}\r\n                sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n              >\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                  {data.fullName}\r\n                </TableCell>\r\n                <TableCell align=\"center\">+91 {data.phoneNumber}</TableCell>\r\n                {data.groups.length === 0 ? (\r\n                  <TableCell align=\"center\">--</TableCell>\r\n                ) : (\r\n                  <TableCell align=\"center\">\r\n                    {data.groups.map((x, i) => (\r\n                      <>\r\n                        {x.groupName}\r\n                        {i !== data.groups.length - 1 && <>{' ,'}</>}\r\n                      </>\r\n                    ))}\r\n                  </TableCell>\r\n                )}\r\n\r\n                <TableCell align=\"center\">\r\n                  {data.trackingStatus === 'accepted' && (\r\n                    <Chip label=\"Accepted\" color=\"success\" />\r\n                  )}\r\n                  {data.trackingStatus === 'rejected' && (\r\n                    <Chip label=\"Rejected\" color=\"error\" />\r\n                  )}\r\n                  {data.trackingStatus === 'pending' && (\r\n                    <Chip label=\"Pending\" color=\"warning\" />\r\n                  )}\r\n                </TableCell>\r\n                <TableCell align=\"center\" sx={{ p: 0 }}>\r\n                  <IconButton\r\n                    edge=\"end\"\r\n                    aria-label=\"edit\"\r\n                    color=\"primary\"\r\n                    onClick={() => toggleEditDeviceDialog(data)}\r\n                  >\r\n                    <Create />\r\n                  </IconButton>\r\n                  <IconButton color=\"error\" onClick={() => removeDevice(data)}>\r\n                    <DeleteIcon />\r\n                  </IconButton>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default React.memo(DeviceSetting)\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport {\r\n    Box,\r\n    TextField,\r\n    Button,\r\n    Snackbar,\r\n    Alert,\r\n    FormControl,\r\n    InputLabel,\r\n    Select,\r\n    MenuItem,\r\n    ListItemText,\r\n    Dialog,\r\n    DialogTitle,\r\n    DialogContent,\r\n    DialogActions,\r\n    Checkbox,\r\n} from '@mui/material'\r\nimport { makeStyles } from '@mui/styles'\r\n\r\nimport { db } from '../Firebase/index'\r\nimport {\r\n    addDoc,\r\n    collection,\r\n    onSnapshot,\r\n    query,\r\n    where,\r\n    Timestamp,\r\n} from 'firebase/firestore'\r\nimport EditDeviceDialog from '../components/devices/EditDeviceDialog'\r\nimport DeviceTable from '../components/devices/DeviceTable'\r\nimport {\r\n    createDevice,\r\n    getDevices,\r\n    getAdminDevices,\r\n} from '../store/actions/device'\r\n\r\nimport axios from 'axios'\r\nimport { API_SERVICE } from '../URI'\r\nimport { useNavigate } from 'react-router'\r\nimport { useSubscription } from '../hooks/useSubscription'\r\nimport { getSubscriptionDetails } from '../utils/getSubscriptionDetails'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    form: {\r\n        width: '100%',\r\n        marginTop: theme.spacing(1),\r\n    },\r\n}))\r\n\r\nconst ITEM_HEIGHT = 48\r\nconst ITEM_PADDING_TOP = 8\r\nconst MenuProps = {\r\n    PaperProps: {\r\n        style: {\r\n            maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n            width: 250,\r\n        },\r\n    },\r\n}\r\n\r\nconst ManageMobileDevices = () => {\r\n    const classes = useStyles()\r\n\r\n    const userData = sessionStorage.getItem('userData')\r\n        ? JSON.parse(sessionStorage.getItem('userData'))\r\n        : null\r\n\r\n    const adminData = sessionStorage.getItem('adminData')\r\n        ? JSON.parse(sessionStorage.getItem('adminData'))\r\n        : null\r\n\r\n    // adding new device states\r\n    const [fullName, setFullName] = useState('')\r\n    const [phoneNumber, setPhoneNumber] = useState('')\r\n    const [selectedGroups, setSelectedGroups] = useState([])\r\n    // added devices section states\r\n    const [editDialogOpen, setEditDialogOpen] = useState(false)\r\n    const [selectedDevice, setSelectedDevice] = useState({})\r\n    const [addDeviceDialog, setAddDeviceDialog] = useState(false)\r\n    const [scheduleDialog, setScheduleDialog] = useState(false)\r\n    // snackbar states\r\n    const [snackOpen, setSnackOpen] = useState(false)\r\n    const [successMsg, setSuccess] = useState(null)\r\n    const [errorMsg, setError] = useState(null)\r\n    // subscription state\r\n    const [subscription, setSubscription] = useState(null)\r\n\r\n    const dispatch = useDispatch()\r\n    const groups = useSelector((state) => state.groups)\r\n    const { groupList } = groups\r\n\r\n    const devices = useSelector((state) => state.devices)\r\n    const { success, error, deviceList } = devices\r\n\r\n    const navigate = useNavigate()\r\n    const { state } = useSubscription()\r\n\r\n    useEffect(() => {\r\n        const authToken = sessionStorage.getItem('authToken')\r\n\r\n        if (!authToken) {\r\n            navigate('/login')\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        const fetchSubDetail = async () => {\r\n            const details = await getSubscriptionDetails(state)\r\n            setSubscription(details)\r\n        }\r\n\r\n        fetchSubDetail()\r\n    }, [])\r\n\r\n    useEffect(async () => {\r\n        if (adminData === null && userData !== null) {\r\n            dispatch(getDevices(userData.uid))\r\n        }\r\n        if (adminData !== null && userData !== null) {\r\n            const { data } = await axios.get(\r\n                `${API_SERVICE}/get/admin/${adminData.email}`\r\n            )\r\n            dispatch(\r\n                getAdminDevices({\r\n                    createdBy: userData.uid,\r\n                    adminGroups: data.groups,\r\n                })\r\n            )\r\n        }\r\n    }, [dispatch])\r\n\r\n    useEffect(() => {\r\n        if (success) {\r\n            setSuccess(success)\r\n            setSnackOpen(true)\r\n        }\r\n        if (error !== undefined) {\r\n            setError(error)\r\n            setSnackOpen(true)\r\n        }\r\n    }, [success, error])\r\n\r\n    useEffect(async () => {\r\n        if (success === 'Device added succssfully') {\r\n            if (phoneNumber.length !== 0) {\r\n                await sendTrackingRequest()\r\n                await sendNotificationToDevice()\r\n            }\r\n\r\n            setPhoneNumber('')\r\n            setSelectedGroups([])\r\n            setFullName('')\r\n            setAddDeviceDialog(false)\r\n        }\r\n    }, [success])\r\n\r\n    const handleSnackClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return\r\n        }\r\n\r\n        setSnackOpen(false)\r\n        setError(null)\r\n        setSuccess(null)\r\n    }\r\n\r\n    // toggle edit devices dialog\r\n    const toggleEditDeviceDialog = (item) => {\r\n        if (editDialogOpen) {\r\n            setEditDialogOpen(false)\r\n        } else {\r\n            setSelectedDevice(item)\r\n            setEditDialogOpen(true)\r\n        }\r\n    }\r\n\r\n    const sendTrackingRequest = async () => {\r\n        const requestRef = collection(\r\n            db,\r\n            'trackingRequest',\r\n            phoneNumber,\r\n            'requests'\r\n        )\r\n        await addDoc(requestRef, {\r\n            requestStatus: 'pending',\r\n            companyName: userData.companyName,\r\n            recieverFullName: fullName,\r\n            sender: {\r\n                id: userData.uid,\r\n                profilePhoto: userData.profilePhoto,\r\n            },\r\n            createdAt: Timestamp.now(),\r\n        }).catch((error) => console.log(error))\r\n    }\r\n\r\n    const sendNotificationToDevice = async () => {\r\n        const androidRef = collection(\r\n            db,\r\n            'trackingAndroidNotification',\r\n            phoneNumber,\r\n            'notifications'\r\n        )\r\n        await addDoc(androidRef, {\r\n            message: `${userData.companyName} has send you a tracking request`,\r\n            status: 'pending',\r\n            sender: {\r\n                id: userData.uid,\r\n                profilePhoto: userData.profilePhoto,\r\n            },\r\n            createdAt: Timestamp.now(),\r\n            seen: false,\r\n        }).catch((error) => console.log(error))\r\n    }\r\n\r\n    const addNewDevice = async () => {\r\n        if (subscription === null) {\r\n            setError('You do not have any subscription. Please choose a plan')\r\n            setSnackOpen(true)\r\n            return\r\n        } else if (deviceList.length === subscription.deviceCount) {\r\n            setError(\r\n                'You have used your device quota. Please upgrade your subscription'\r\n            )\r\n            setSnackOpen(true)\r\n            return\r\n        } else if (phoneNumber.length !== 10) {\r\n            setError('Phone number must be 10 digit long')\r\n            setSnackOpen(true)\r\n            return\r\n        } else if (fullName.length === 0) {\r\n            setError('Full name is required')\r\n            setSnackOpen(true)\r\n            return\r\n        }\r\n\r\n        const body = {\r\n            fullName,\r\n            phoneNumber,\r\n            groups: selectedGroups,\r\n            createdBy: userData.uid,\r\n            trackingStatus: 'pending',\r\n        }\r\n\r\n        dispatch(createDevice(body))\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n        const {\r\n            target: { value },\r\n        } = event\r\n        setSelectedGroups(typeof value === 'string' ? value.split(',') : value)\r\n    }\r\n\r\n    return (\r\n        <Box sx={{ width: '100%', p: 4 }}>\r\n            <h2>Manage Mobile Devices</h2>\r\n            <Box\r\n                sx={{\r\n                    width: '100%',\r\n                    display: 'flex',\r\n                    justifyContent: 'flex-end',\r\n                    flexDirection: 'row',\r\n                    gap: 2,\r\n                }}\r\n            >\r\n                <Button\r\n                    variant='contained'\r\n                    sx={{\r\n                        py: 1.2,\r\n                    }}\r\n                    onClick={() => setAddDeviceDialog(true)}\r\n                >\r\n                    Add New Device\r\n                </Button>\r\n            </Box>\r\n\r\n            <Box sx={{ mt: 5 }}>\r\n                <DeviceTable\r\n                    toggleEditDeviceDialog={toggleEditDeviceDialog}\r\n                    scheduleDialog={scheduleDialog}\r\n                    setScheduleDialog={setScheduleDialog}\r\n                />\r\n            </Box>\r\n\r\n            {/** Dialog for adding a new device */}\r\n            <Dialog\r\n                open={addDeviceDialog}\r\n                onClose={() => setAddDeviceDialog(false)}\r\n            >\r\n                <DialogTitle sx={{ fontSize: 22 }}>Add New Device</DialogTitle>\r\n                <DialogContent sx={{ width: 500 }}>\r\n                    <form className={classes.form} noValidate>\r\n                        <TextField\r\n                            variant='outlined'\r\n                            margin='normal'\r\n                            fullWidth\r\n                            id='fullName'\r\n                            label='Full Name'\r\n                            name='fullName'\r\n                            autoComplete='name'\r\n                            autoFocus\r\n                            value={fullName}\r\n                            onChange={(e) => setFullName(e.target.value)}\r\n                        />\r\n                        <TextField\r\n                            variant='outlined'\r\n                            margin='normal'\r\n                            fullWidth\r\n                            id='phoneNumber'\r\n                            label='Phone Number'\r\n                            name='phoneNumber'\r\n                            value={phoneNumber}\r\n                            onChange={(e) => setPhoneNumber(e.target.value)}\r\n                        />\r\n\r\n                        <FormControl\r\n                            margin='normal'\r\n                            fullWidth\r\n                            variant='outlined'\r\n                        >\r\n                            <InputLabel id='device-group'>\r\n                                Select Group\r\n                            </InputLabel>\r\n                            <Select\r\n                                labelId='device-group'\r\n                                label='Select Group'\r\n                                value={selectedGroups}\r\n                                onChange={handleChange}\r\n                                multiple\r\n                                renderValue={(selected) => selected.join(', ')}\r\n                                MenuProps={MenuProps}\r\n                            >\r\n                                {groupList.map((item) => (\r\n                                    <MenuItem key={item._id} value={item._id}>\r\n                                        <Checkbox\r\n                                            checked={\r\n                                                selectedGroups.indexOf(\r\n                                                    item._id\r\n                                                ) > -1\r\n                                            }\r\n                                        />\r\n                                        <ListItemText\r\n                                            primary={item.groupName}\r\n                                        />\r\n                                    </MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </FormControl>\r\n                    </form>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => setAddDeviceDialog(false)}>\r\n                        Cancel\r\n                    </Button>\r\n                    <Button onClick={() => addNewDevice()}>Save Device</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            {/** Dialog for editing a device */}\r\n            <EditDeviceDialog\r\n                editDialogOpen={editDialogOpen}\r\n                setEditDialogOpen={setEditDialogOpen}\r\n                selectedDevice={selectedDevice}\r\n                trackingGroups={groupList}\r\n                setSuccess={setSuccess}\r\n                setError={setError}\r\n                setSnackOpen={setSnackOpen}\r\n            />\r\n\r\n            {successMsg && (\r\n                <Snackbar\r\n                    open={snackOpen}\r\n                    autoHideDuration={4000}\r\n                    onClose={handleSnackClose}\r\n                    anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n                >\r\n                    <Alert\r\n                        onClose={handleSnackClose}\r\n                        severity='success'\r\n                        sx={{ width: '100%' }}\r\n                        variant='filled'\r\n                    >\r\n                        {successMsg}\r\n                    </Alert>\r\n                </Snackbar>\r\n            )}\r\n            {errorMsg && (\r\n                <Snackbar\r\n                    open={snackOpen}\r\n                    autoHideDuration={4000}\r\n                    onClose={handleSnackClose}\r\n                    anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n                >\r\n                    <Alert\r\n                        onClose={handleSnackClose}\r\n                        severity='error'\r\n                        sx={{ width: '100%' }}\r\n                        variant='filled'\r\n                    >\r\n                        {errorMsg}\r\n                    </Alert>\r\n                </Snackbar>\r\n            )}\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default ManageMobileDevices\r\n","import React, { useState, useEffect, useRef, useCallback } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport {\r\n  Checkbox,\r\n  FormControl,\r\n  InputLabel,\r\n  ListItemText,\r\n  MenuItem,\r\n  Select,\r\n  TextField,\r\n  Dialog,\r\n  DialogContent,\r\n  DialogActions,\r\n  Button,\r\n} from '@mui/material'\r\nimport ReactMapGL, { Marker, Popup } from 'react-map-gl'\r\nimport Geocoder from 'react-map-gl-geocoder'\r\nimport 'react-map-gl-geocoder/dist/mapbox-gl-geocoder.css'\r\nimport axios from 'axios'\r\nimport { API_SERVICE, MAP_STYLE, MAP_TOKEN } from '../../URI'\r\nimport { arrayRemove, arrayUnion, doc, updateDoc } from 'firebase/firestore'\r\nimport { db } from '../../Firebase'\r\nimport { updateHotspot } from '../../store/actions/hotspot'\r\n\r\nconst ITEM_HEIGHT = 48\r\nconst ITEM_PADDING_TOP = 8\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250,\r\n    },\r\n  },\r\n}\r\n\r\nconst EditHotspotDialogForm = (props) => {\r\n  const { trackingGroups, setDialogOpen, open, selectedHotspot } = props\r\n\r\n  const mapRef = useRef()\r\n\r\n  const [hotspotName, setHotspotName] = useState('')\r\n  const [selectedGroups, setSelectedGroups] = useState([])\r\n  const [newGroups, setNewGroups] = useState([])\r\n  const [location, setLocation] = useState('')\r\n  const [lat, setlat] = useState(28.6077159025)\r\n  const [long, setlong] = useState(77.224249103)\r\n  const [zipCode, setZipCode] = useState(0)\r\n  const [viewport, setViewport] = useState({\r\n    width: '100%',\r\n    height: 400,\r\n    latitude: lat,\r\n    longitude: long,\r\n    zoom: 15,\r\n  })\r\n  const [isFetching, setIsFetching] = useState(false)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    if (Object.entries(selectedHotspot).length !== 0) {\r\n      setHotspotName(selectedHotspot.hotspotName)\r\n      const groups = selectedHotspot.groups\r\n\r\n      const arr = []\r\n      groups.forEach((x) => arr.push(x._id))\r\n      setSelectedGroups(arr)\r\n\r\n      getLatLong(\r\n        selectedHotspot.location.latitude,\r\n        selectedHotspot.location.longitude,\r\n      )\r\n      setViewport({\r\n        ...viewport,\r\n        latitude: selectedHotspot.location.latitude,\r\n        longitude: selectedHotspot.location.longitude,\r\n      })\r\n      setlat(selectedHotspot.location.latitude)\r\n      setlong(selectedHotspot.location.longitude)\r\n    }\r\n  }, [selectedHotspot])\r\n\r\n  const handleViewportChange = useCallback(\r\n    (newViewport) => setViewport(newViewport),\r\n    [],\r\n  )\r\n\r\n  const handleGeocoderViewportChange = useCallback((newViewport) => {\r\n    const geocoderDefaultOverrides = { transitionDuration: 1000 }\r\n\r\n    getLatLong(newViewport.latitude, newViewport.longitude)\r\n\r\n    return handleViewportChange({\r\n      ...newViewport,\r\n      ...geocoderDefaultOverrides,\r\n    })\r\n  }, [])\r\n\r\n  const getLatLong = async (latitude, longitude) => {\r\n    axios\r\n      .get(`${API_SERVICE}/getlatlong/${latitude}/${longitude}`)\r\n      .then((res) => {\r\n        setLocation(res.data.formattedAddress)\r\n        setZipCode(res.data.zipcode)\r\n        setIsFetching(false)\r\n      })\r\n      .catch((error) => {\r\n        console.log(error)\r\n      })\r\n  }\r\n\r\n  const handleChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event\r\n    setSelectedGroups(typeof value === 'string' ? value.split(',') : value)\r\n  }\r\n\r\n  const updateDetails = () => {\r\n    const body = {\r\n      _id: selectedHotspot._id,\r\n      hotspotName,\r\n      location: {\r\n        latitude: Number(lat.toPrecision(6)),\r\n        longitude: Number(long.toPrecision(6)),\r\n        zipCode,\r\n      },\r\n      groups: selectedGroups,\r\n    }\r\n    dispatch(updateHotspot(body))\r\n    setDialogOpen(false)\r\n  }\r\n\r\n  return (\r\n    <Dialog open={open} onClose={() => setDialogOpen(false)}>\r\n      <DialogContent sx={{ width: '1200' }}>\r\n        <form noValidate style={{ marginBottom: '20px' }}>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            fullWidth\r\n            id=\"hotspotName\"\r\n            label=\"Hotspot Name\"\r\n            name=\"hotspotName\"\r\n            autoFocus\r\n            value={hotspotName}\r\n            onChange={(e) => setHotspotName(e.target.value)}\r\n          />\r\n\r\n          <FormControl margin=\"normal\" fullWidth variant=\"outlined\">\r\n            <InputLabel id=\"device-group\">Select Group</InputLabel>\r\n            <Select\r\n              labelId=\"device-group\"\r\n              label=\"Select Group\"\r\n              value={selectedGroups}\r\n              onChange={handleChange}\r\n              multiple\r\n              renderValue={(selected) => selected.join(', ')}\r\n              MenuProps={MenuProps}\r\n            >\r\n              {trackingGroups.map((item) => (\r\n                <MenuItem key={item._id} value={item._id}>\r\n                  <Checkbox checked={selectedGroups.indexOf(item._id) > -1} />\r\n                  <ListItemText primary={item.groupName} />\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            fullWidth\r\n            id=\"location\"\r\n            label=\"Set Location\"\r\n            name=\"location\"\r\n            value={location}\r\n            onChange={(e) => {}}\r\n          />\r\n        </form>\r\n        <ReactMapGL\r\n          {...viewport}\r\n          ref={mapRef}\r\n          mapboxApiAccessToken={MAP_TOKEN}\r\n          mapStyle={MAP_STYLE}\r\n          onViewportChange={(nextViewport) => setViewport(nextViewport)}\r\n          onClick={async (e) => {\r\n            setlat(e.lngLat[1])\r\n            setlong(e.lngLat[0])\r\n            setIsFetching(true)\r\n            getLatLong(e.lngLat[1], e.lngLat[0])\r\n          }}\r\n        >\r\n          <Geocoder\r\n            mapRef={mapRef}\r\n            onViewportChange={handleGeocoderViewportChange}\r\n            mapboxApiAccessToken={MAP_TOKEN}\r\n            position=\"top-left\"\r\n            marker={true}\r\n            countries=\"IN\"\r\n            reverseGeocode={true}\r\n          />\r\n          <Marker key=\"1\" latitude={lat} longitude={long}>\r\n            <button className=\"marker-btn\">\r\n              <img\r\n                alt=\"Image\"\r\n                src=\"https://www.nbp.co.uk/Content/Images/uploaded/contact-branch-details.png\"\r\n              />\r\n            </button>\r\n          </Marker>\r\n        </ReactMapGL>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={() => setDialogOpen(false)}>Cancel</Button>\r\n        <Button disabled={isFetching} onClick={() => updateDetails()}>\r\n          Update\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n}\r\n\r\nexport default EditHotspotDialogForm\r\n","import React, { useEffect, useState } from 'react'\r\nimport {\r\n  Box,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Paper,\r\n  Typography,\r\n  IconButton,\r\n} from '@mui/material'\r\nimport DeleteIcon from '@mui/icons-material/Delete'\r\nimport Create from '@mui/icons-material/Create'\r\nimport { db } from '../../Firebase/index'\r\nimport {\r\n  collection,\r\n  getDocs,\r\n  query,\r\n  where,\r\n  deleteDoc,\r\n  doc,\r\n  updateDoc,\r\n  arrayRemove,\r\n  onSnapshot,\r\n} from 'firebase/firestore'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { deleteHotspot } from '../../store/actions/hotspot'\r\n\r\nconst HotspotSetting = (props) => {\r\n  const { open, success, error, toggleEditHotspotDialog } = props\r\n\r\n  //const [hotspots, setHotspots] = useState([])\r\n\r\n  const userData = sessionStorage.getItem('userData')\r\n    ? JSON.parse(sessionStorage.getItem('userData'))\r\n    : null\r\n\r\n  const adminData = sessionStorage.getItem('adminData')\r\n    ? JSON.parse(sessionStorage.getItem('adminData'))\r\n    : null\r\n\r\n  const dispatch = useDispatch()\r\n  const hotspots = useSelector((state) => state.hotspots)\r\n  const { hotspotList } = hotspots\r\n\r\n  //Get All Hotspots\r\n  // useEffect(() => {\r\n  //   const ref = collection(db, 'trackingHotspots')\r\n  //   let q\r\n  //   let unsub\r\n  //   if (adminData === null) {\r\n  //     q = query(ref, where('createdBy', '==', userData.uid))\r\n\r\n  //     unsub = onSnapshot(q, (snapshot) => {\r\n  //       const array = []\r\n  //       snapshot.forEach((document) => {\r\n  //         array.push({ ...document.data(), id: document.id })\r\n  //       })\r\n  //       setHotspots(array)\r\n  //     })\r\n  //   } else {\r\n  //     const array = []\r\n  //     adminData.groupId.forEach((x) => {\r\n  //       q = query(\r\n  //         ref,\r\n  //         where('createdBy', '==', userData.uid),\r\n  //         where('groupId', 'array-contains-any', adminData.groupId),\r\n  //       )\r\n  //       unsub = onSnapshot(q, (snapshot) => {\r\n  //         snapshot.forEach((document) => {\r\n  //           array.push({ ...document.data(), id: document.id })\r\n  //         })\r\n  //       })\r\n  //     })\r\n\r\n  //     setHotspots(array)\r\n  //   }\r\n  // }, [])\r\n\r\n  const removeHotspot = (hotspot) => {\r\n    dispatch(deleteHotspot(hotspot._id))\r\n  }\r\n\r\n  // const deleteHotspot = async (hotspot) => {\r\n  //   await deleteDoc(doc(db, 'trackingHotspots', hotspot.id))\r\n  //     .then(() => {\r\n  //       const groups = hotspot.groups\r\n\r\n  //       for (let group of groups) {\r\n  //         const ref = doc(db, 'trackingGroups', group.id)\r\n  //         updateDoc(ref, {\r\n  //           hotspot: arrayRemove({\r\n  //             hotspotName: hotspot.hotspotName,\r\n  //             id: hotspot.id,\r\n  //             zipCode: hotspot.location.zipCode,\r\n  //           }),\r\n  //         }).catch((err) => console.log(err))\r\n  //       }\r\n  //     })\r\n  //     .then(() => {\r\n  //       success('Hotspot Deleted Successfully !!')\r\n  //       open(true)\r\n  //     })\r\n  //     .catch((err) => {\r\n  //       console.log(err)\r\n  //     })\r\n  // }\r\n\r\n  return (\r\n    <Box>\r\n      <TableContainer component={Paper} sx={{ boxShadow: 6 }}>\r\n        <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Hotspot Name</TableCell>\r\n              <TableCell align=\"center\">Address (Zip Code)</TableCell>\r\n              <TableCell align=\"center\">Groups Added</TableCell>\r\n              <TableCell align=\"center\">Action</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {hotspotList.map((row) => (\r\n              <TableRow\r\n                key={row._id}\r\n                sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n              >\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                  {row.hotspotName}\r\n                </TableCell>\r\n                <TableCell align=\"center\">{row.location.zipCode}</TableCell>\r\n                <TableCell\r\n                  align=\"center\"\r\n                  sx={{ display: 'flex', justifyContent: 'center' }}\r\n                >\r\n                  {row.groups.length === 0 && <>---</>}\r\n                  {row.groups.map((x, i) => (\r\n                    <div key={i}>\r\n                      <Typography variant=\"p\" component=\"p\">\r\n                        {x.groupName}\r\n                        {i !== row.groups.length - 1 && <>{' ,'}</>}\r\n                      </Typography>\r\n                    </div>\r\n                  ))}\r\n                </TableCell>\r\n                <TableCell align=\"center\" sx={{ p: 0 }}>\r\n                  <IconButton\r\n                    edge=\"end\"\r\n                    aria-label=\"edit\"\r\n                    color=\"primary\"\r\n                    onClick={() => toggleEditHotspotDialog(row)}\r\n                    sx={{ mr: 0.2 }}\r\n                  >\r\n                    <Create />\r\n                  </IconButton>\r\n                  <IconButton color=\"error\" onClick={() => removeHotspot(row)}>\r\n                    <DeleteIcon />\r\n                  </IconButton>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default HotspotSetting\r\n","import React, { useEffect, useState, useRef, useCallback } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {\r\n    Box,\r\n    Grid,\r\n    TextField,\r\n    FormControl,\r\n    InputLabel,\r\n    Select,\r\n    MenuItem,\r\n    Button,\r\n    ListItemText,\r\n    Checkbox,\r\n    Snackbar,\r\n    Alert,\r\n    Dialog,\r\n    DialogTitle,\r\n    DialogContent,\r\n    DialogActions,\r\n} from '@mui/material'\r\nimport ReactMapGL, { Marker, Popup } from 'react-map-gl'\r\nimport EditHotspotDialogForm from '../components/hotspot/EditHotspotDialogForm'\r\nimport Geocoder from 'react-map-gl-geocoder'\r\nimport 'react-map-gl-geocoder/dist/mapbox-gl-geocoder.css'\r\nimport axios from 'axios'\r\nimport { API_SERVICE, MAP_STYLE, MAP_TOKEN } from '../URI'\r\nimport HotspotTable from '../components/hotspot/HotspotTable'\r\nimport {\r\n    createHotspot,\r\n    getHotspots,\r\n    getAdminHotspots,\r\n} from '../store/actions/hotspot'\r\nimport { getGroups } from '../store/actions/group'\r\nimport { useNavigate } from 'react-router'\r\nimport { useSubscription } from '../hooks/useSubscription'\r\nimport { getSubscriptionDetails } from '../utils/getSubscriptionDetails'\r\n\r\nconst ITEM_HEIGHT = 48\r\nconst ITEM_PADDING_TOP = 8\r\nconst MenuProps = {\r\n    PaperProps: {\r\n        style: {\r\n            maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n            width: 250,\r\n        },\r\n    },\r\n}\r\n\r\nconst ManageHotspots = () => {\r\n    const mapRef = useRef()\r\n    const [hotspotName, setHotspotName] = useState('')\r\n    const [selectedGroups, setSelectedGroups] = useState([])\r\n    // const [groups, setGroups] = useState([])\r\n    const [location, setLocation] = useState('')\r\n    const [lat, setlat] = useState(28.6077159025)\r\n    const [long, setlong] = useState(77.224249103)\r\n    const [zipCode, setZipCode] = useState(0)\r\n    const [viewport, setViewport] = useState({\r\n        width: '100%',\r\n        height: 400,\r\n        latitude: 28.6077159025,\r\n        longitude: 77.224249103,\r\n        zoom: 15,\r\n    })\r\n    const [selectedHotspot, setSelectedHotspot] = useState({})\r\n    const [dialogOpen, setDialogOpen] = useState(false)\r\n    const [addHotspotDialog, setAddHotspotDialog] = useState(false)\r\n    // snackbar states\r\n    const [snackOpen, setSnackOpen] = useState(false)\r\n    const [successMsg, setSuccessMsg] = useState(null)\r\n    const [errorMsg, setErrorMsg] = useState(null)\r\n    // map states\r\n    const [allViewport, setAllViewport] = useState({\r\n        width: '100%',\r\n        height: '100%',\r\n        latitude: 28.52,\r\n        longitude: 77.402,\r\n        zoom: 10,\r\n    })\r\n    const [load, setLoad] = useState(false)\r\n    const [selected, setSelected] = useState(false)\r\n    const [selectedLat, setSelectedLat] = useState(null)\r\n    const [selectedLong, setSelectedLong] = useState(null)\r\n    const [locationData, setLocationData] = useState({})\r\n\r\n    // subscription state\r\n    const [subscription, setSubscription] = useState(null)\r\n\r\n    const dispatch = useDispatch()\r\n    const hotspots = useSelector((state) => state.hotspots)\r\n    const { hotspotList, success, error } = hotspots\r\n    const groups = useSelector((state) => state.groups)\r\n    const { groupList } = groups\r\n\r\n    const userData = sessionStorage.getItem('userData')\r\n        ? JSON.parse(sessionStorage.getItem('userData'))\r\n        : null\r\n\r\n    const adminData = sessionStorage.getItem('adminData')\r\n        ? JSON.parse(sessionStorage.getItem('adminData'))\r\n        : null\r\n\r\n    const navigate = useNavigate()\r\n    const { state } = useSubscription()\r\n\r\n    useEffect(() => {\r\n        const authToken = sessionStorage.getItem('authToken')\r\n\r\n        if (!authToken) {\r\n            navigate('/login')\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        const fetchSubDetail = async () => {\r\n            const details = await getSubscriptionDetails(state)\r\n            setSubscription(details)\r\n        }\r\n\r\n        fetchSubDetail()\r\n    }, [])\r\n\r\n    useEffect(async () => {\r\n        if (userData !== null) {\r\n            dispatch(getGroups(userData?.uid))\r\n        }\r\n    }, [dispatch])\r\n\r\n    useEffect(() => {\r\n        if (success) {\r\n            setSuccessMsg(success)\r\n            setSnackOpen(true)\r\n        }\r\n\r\n        if (error) {\r\n            setErrorMsg(error)\r\n            setSnackOpen(true)\r\n        }\r\n    }, [success, error])\r\n\r\n    useEffect(async () => {\r\n        if (adminData === null && userData !== null) {\r\n            dispatch(getHotspots(userData.uid))\r\n        }\r\n        if (adminData !== null && userData !== null) {\r\n            const { data } = await axios.get(\r\n                `${API_SERVICE}/get/admin/${adminData.email}`\r\n            )\r\n            dispatch(\r\n                getAdminHotspots({\r\n                    createdBy: userData.uid,\r\n                    adminGroups: data.groups,\r\n                })\r\n            )\r\n        }\r\n    }, [dispatch])\r\n\r\n    useEffect(async () => {\r\n        setLoad(true)\r\n        axios\r\n            .get(`${API_SERVICE}/getlatlong/${selectedLat}/${selectedLong}`)\r\n            .then((response) => {\r\n                console.log(response)\r\n                setLocationData(response.data)\r\n                setLoad(false)\r\n            })\r\n            .catch((err) => console.log(err))\r\n    }, [selectedLat, selectedLong])\r\n\r\n    const handleViewportChange = useCallback(\r\n        (newViewport) => setViewport(newViewport),\r\n        []\r\n    )\r\n\r\n    const handleGeocoderViewportChange = useCallback((newViewport) => {\r\n        const geocoderDefaultOverrides = { transitionDuration: 1000 }\r\n\r\n        getLatLong(newViewport.latitude, newViewport.longitude)\r\n\r\n        return handleViewportChange({\r\n            ...newViewport,\r\n            ...geocoderDefaultOverrides,\r\n        })\r\n    }, [])\r\n\r\n    const handleSnackClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return\r\n        }\r\n\r\n        setSnackOpen(false)\r\n        setErrorMsg(null)\r\n        setSuccessMsg(null)\r\n    }\r\n\r\n    const getLatLong = async (latitude, longitude) => {\r\n        axios\r\n            .get(`${API_SERVICE}/getlatlong/${latitude}/${longitude}`)\r\n            .then((res) => {\r\n                setLocation(res.data.formattedAddress)\r\n                setZipCode(res.data.zipcode)\r\n            })\r\n            .catch((errorMsg) => {\r\n                console.log(errorMsg)\r\n            })\r\n    }\r\n\r\n    const saveHotspot = () => {\r\n        if (subscription === null) {\r\n            setErrorMsg(\r\n                'You do not have any subscription. Please choose a plan'\r\n            )\r\n            setSnackOpen(true)\r\n            return\r\n        } else if (hotspotList.length === subscription.hotspotCount) {\r\n            setErrorMsg(\r\n                'You have used your hotspot quota. Please upgrade your subscription'\r\n            )\r\n            setSnackOpen(true)\r\n            return\r\n        } else if (hotspotName.length < 3) {\r\n            setErrorMsg('Hotspot name must be atleast 3 characters')\r\n            setSnackOpen(true)\r\n            return\r\n        }\r\n\r\n        const body = {\r\n            hotspotName,\r\n            groups: selectedGroups,\r\n            createdBy: userData.uid,\r\n            location: {\r\n                latitude: Number(lat.toPrecision(6)),\r\n                longitude: Number(long.toPrecision(6)),\r\n                zipCode,\r\n            },\r\n        }\r\n\r\n        dispatch(createHotspot(body))\r\n        setAddHotspotDialog(false)\r\n        setHotspotName('')\r\n        setSelectedGroups([])\r\n        setLocation('')\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n        const {\r\n            target: { value },\r\n        } = event\r\n        setSelectedGroups(typeof value === 'string' ? value.split(',') : value)\r\n    }\r\n\r\n    const toggleEditHotspotDialog = (item) => {\r\n        if (dialogOpen) {\r\n            setDialogOpen(false)\r\n        } else {\r\n            setSelectedHotspot(item)\r\n            setDialogOpen(true)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Box sx={{ width: '100%', p: 4, height: '100%' }}>\r\n            <h2>Manage Hotspots</h2>\r\n\r\n            <Grid container spacing={2} sx={{ height: '100%' }}>\r\n                <Grid item xs={12} md={6}>\r\n                    <Box\r\n                        sx={{\r\n                            width: '100%',\r\n                            display: 'flex',\r\n                            justifyContent: 'flex-end',\r\n                            flexDirection: 'row',\r\n                            gap: 2,\r\n                        }}\r\n                    >\r\n                        <Button\r\n                            variant='contained'\r\n                            sx={{\r\n                                py: 1.2,\r\n                            }}\r\n                            onClick={() => setAddHotspotDialog(true)}\r\n                        >\r\n                            Add New Hotspot\r\n                        </Button>\r\n                    </Box>\r\n\r\n                    <Box sx={{ my: 5 }}>\r\n                        <HotspotTable\r\n                            successMsg={setSuccessMsg}\r\n                            errorMsg={setErrorMsg}\r\n                            open={setSnackOpen}\r\n                            toggleEditHotspotDialog={toggleEditHotspotDialog}\r\n                        />\r\n                    </Box>\r\n                </Grid>\r\n                <Grid item xs={12} md={6} sx={{ height: '100' }}>\r\n                    <ReactMapGL\r\n                        {...allViewport}\r\n                        mapboxApiAccessToken={MAP_TOKEN}\r\n                        mapStyle={MAP_STYLE}\r\n                        onViewportChange={(nextViewport) =>\r\n                            setAllViewport(nextViewport)\r\n                        }\r\n                    >\r\n                        {hotspotList.map((hotspot) => (\r\n                            <Marker\r\n                                key={hotspot._id}\r\n                                latitude={hotspot.location.latitude}\r\n                                longitude={hotspot.location.longitude}\r\n                            >\r\n                                <button\r\n                                    className='marker-btn'\r\n                                    onMouseEnter={(e) => {\r\n                                        e.preventDefault()\r\n                                        setSelected(true)\r\n                                        setSelectedLat(\r\n                                            hotspot.location.latitude\r\n                                        )\r\n                                        setSelectedLong(\r\n                                            hotspot.location.longitude\r\n                                        )\r\n                                    }}\r\n                                    onMouseLeave={(e) => {\r\n                                        e.preventDefault()\r\n                                        setSelected(false)\r\n                                    }}\r\n                                >\r\n                                    <img\r\n                                        alt='Image'\r\n                                        src='https://www.nbp.co.uk/Content/Images/uploaded/contact-branch-details.png'\r\n                                    />\r\n                                </button>\r\n                            </Marker>\r\n                        ))}\r\n                        {selected ? (\r\n                            <Popup\r\n                                latitude={selectedLat}\r\n                                longitude={selectedLong}\r\n                                onClose={() => {\r\n                                    setSelected(false)\r\n                                    setSelectedLat(0)\r\n                                    setSelectedLong(0)\r\n                                }}\r\n                            >\r\n                                <div>\r\n                                    {load ? (\r\n                                        <p>Fetching Location ...</p>\r\n                                    ) : (\r\n                                        <p>{locationData.formattedAddress}</p>\r\n                                    )}\r\n                                </div>\r\n                            </Popup>\r\n                        ) : null}\r\n                    </ReactMapGL>\r\n                </Grid>\r\n            </Grid>\r\n\r\n            <Dialog\r\n                open={addHotspotDialog}\r\n                onClose={() => setAddHotspotDialog(false)}\r\n            >\r\n                <DialogTitle sx={{ fontSize: 22 }}>Add New Hotspot</DialogTitle>\r\n                <DialogContent sx={{ width: 600 }}>\r\n                    <form noValidate style={{ marginBottom: '20px' }}>\r\n                        <TextField\r\n                            variant='outlined'\r\n                            margin='normal'\r\n                            fullWidth\r\n                            id='hotspotName'\r\n                            label='Hotspot Name'\r\n                            name='hotspotName'\r\n                            autoFocus\r\n                            value={hotspotName}\r\n                            onChange={(e) => setHotspotName(e.target.value)}\r\n                        />\r\n\r\n                        <FormControl\r\n                            margin='normal'\r\n                            fullWidth\r\n                            variant='outlined'\r\n                        >\r\n                            <InputLabel id='device-group'>\r\n                                Select Group\r\n                            </InputLabel>\r\n                            <Select\r\n                                labelId='device-group'\r\n                                label='Select Group'\r\n                                value={selectedGroups}\r\n                                onChange={handleChange}\r\n                                multiple\r\n                                renderValue={(selected) => selected.join(', ')}\r\n                                MenuProps={MenuProps}\r\n                            >\r\n                                {groupList.map((item) => (\r\n                                    <MenuItem key={item._id} value={item._id}>\r\n                                        <Checkbox\r\n                                            checked={\r\n                                                selectedGroups.indexOf(\r\n                                                    item._id\r\n                                                ) > -1\r\n                                            }\r\n                                        />\r\n                                        <ListItemText\r\n                                            primary={item.groupName}\r\n                                        />\r\n                                    </MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </FormControl>\r\n\r\n                        <TextField\r\n                            variant='outlined'\r\n                            margin='normal'\r\n                            fullWidth\r\n                            id='location'\r\n                            label='Set Location'\r\n                            name='location'\r\n                            value={location}\r\n                            onChange={(e) => {}}\r\n                        />\r\n                    </form>\r\n                    <ReactMapGL\r\n                        {...viewport}\r\n                        ref={mapRef}\r\n                        mapboxApiAccessToken={MAP_TOKEN}\r\n                        mapStyle={MAP_STYLE}\r\n                        onViewportChange={(nextViewport) =>\r\n                            setViewport(nextViewport)\r\n                        }\r\n                        onClick={async (e) => {\r\n                            setlat(e.lngLat[1])\r\n                            setlong(e.lngLat[0])\r\n                            getLatLong(e.lngLat[1], e.lngLat[0])\r\n                        }}\r\n                    >\r\n                        <Geocoder\r\n                            mapRef={mapRef}\r\n                            onViewportChange={handleGeocoderViewportChange}\r\n                            mapboxApiAccessToken={MAP_TOKEN}\r\n                            position='top-left'\r\n                            marker={true}\r\n                            countries='IN'\r\n                            reverseGeocode={true}\r\n                        />\r\n                        <Marker key='1' latitude={lat} longitude={long}>\r\n                            <button className='marker-btn'>\r\n                                <img\r\n                                    alt='Image'\r\n                                    src='https://www.nbp.co.uk/Content/Images/uploaded/contact-branch-details.png'\r\n                                />\r\n                            </button>\r\n                        </Marker>\r\n                    </ReactMapGL>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => setAddHotspotDialog(false)}>\r\n                        Cancel\r\n                    </Button>\r\n                    <Button onClick={() => saveHotspot()}>Save Hotspot</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            {/* Dialog to Edit the Hotspot */}\r\n            <EditHotspotDialogForm\r\n                open={dialogOpen}\r\n                setDialogOpen={setDialogOpen}\r\n                selectedHotspot={selectedHotspot}\r\n                trackingGroups={groupList}\r\n                setSnackOpen={setSnackOpen}\r\n                setSuccessMsg={setSuccessMsg}\r\n                setErrorMsg={setErrorMsg}\r\n            />\r\n\r\n            {successMsg !== null && (\r\n                <Snackbar\r\n                    open={snackOpen}\r\n                    autoHideDuration={4000}\r\n                    onClose={handleSnackClose}\r\n                    anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n                >\r\n                    <Alert\r\n                        onClose={handleSnackClose}\r\n                        severity='success'\r\n                        variant='filled'\r\n                        sx={{ width: '100%' }}\r\n                    >\r\n                        {successMsg}\r\n                    </Alert>\r\n                </Snackbar>\r\n            )}\r\n            {errorMsg !== null && (\r\n                <Snackbar\r\n                    open={snackOpen}\r\n                    autoHideDuration={4000}\r\n                    onClose={handleSnackClose}\r\n                    anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n                >\r\n                    <Alert\r\n                        onClose={handleSnackClose}\r\n                        severity='error'\r\n                        variant='filled'\r\n                        sx={{ width: '100%' }}\r\n                    >\r\n                        {errorMsg}\r\n                    </Alert>\r\n                </Snackbar>\r\n            )}\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default ManageHotspots\r\n","import React, { useState } from 'react'\r\nimport { TextField, Button, Box, CircularProgress } from '@mui/material'\r\nimport { makeStyles } from '@material-ui/styles'\r\nimport { auth } from '../../Firebase/index'\r\nimport {\r\n  updatePassword,\r\n  reauthenticateWithCredential,\r\n  EmailAuthProvider,\r\n} from 'firebase/auth'\r\n\r\nconst SecuritySetting = (props) => {\r\n  const { open, success, error } = props\r\n\r\n  const [currentPassword, setCurrentPassword] = useState('')\r\n  const [newPassword, setNewPassword] = useState('')\r\n\r\n  const [isUpdating, setIsUpdating] = useState(false)\r\n\r\n  const userData = sessionStorage.getItem('userData')\r\n    ? JSON.parse(sessionStorage.getItem('userData'))\r\n    : null\r\n\r\n  const update = async () => {\r\n    try {\r\n      setIsUpdating(true)\r\n      const user = auth.currentUser\r\n\r\n      const credential = EmailAuthProvider.credential(\r\n        userData.email,\r\n        currentPassword\r\n      )\r\n\r\n      reauthenticateWithCredential(user, credential)\r\n        .then(() => {\r\n          updatePassword(user, newPassword)\r\n            .then(() => {\r\n              success('Password updated successfully')\r\n              open(true)\r\n              setNewPassword('')\r\n              setCurrentPassword('')\r\n              setIsUpdating(false)\r\n            })\r\n            .catch((err) => {\r\n              const errorCode = err.code\r\n              const errorMessage = err.message\r\n              error(`${errorCode} ${errorMessage}`)\r\n              open(true)\r\n              setIsUpdating(false)\r\n            })\r\n        })\r\n        .catch((err) => {\r\n          const errorCode = err.code\r\n          const errorMessage = err.message\r\n          error(`${errorCode} ${errorMessage}`)\r\n          open(true)\r\n          setIsUpdating(false)\r\n        })\r\n    } catch (err) {\r\n      error(err)\r\n      open(true)\r\n      setIsUpdating(false)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Box>\r\n      <form noValidate>\r\n        <TextField\r\n          variant='outlined'\r\n          margin='normal'\r\n          fullWidth\r\n          id='password'\r\n          label='Current Password'\r\n          name='password'\r\n          autoComplete='name'\r\n          value={currentPassword}\r\n          onChange={(e) => setCurrentPassword(e.target.value)}\r\n        />\r\n        <TextField\r\n          variant='outlined'\r\n          margin='normal'\r\n          fullWidth\r\n          id='password'\r\n          label='New Password'\r\n          name='password'\r\n          autoComplete='name'\r\n          value={newPassword}\r\n          onChange={(e) => setNewPassword(e.target.value)}\r\n        />\r\n        <Button\r\n          sx={{ py: 1.2, px: 4, fontSize: 15, mt: 2 }}\r\n          variant='contained'\r\n          onClick={() => update()}\r\n          startIcon={\r\n            isUpdating && <CircularProgress size={20} color='inherit' />\r\n          }\r\n        >\r\n          Update Password\r\n        </Button>\r\n      </form>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default SecuritySetting\r\n","import React, { useState, useEffect } from 'react'\r\nimport {\r\n    Box,\r\n    Grid,\r\n    TextField,\r\n    Button,\r\n    Avatar,\r\n    IconButton,\r\n    CircularProgress,\r\n    Snackbar,\r\n    Alert,\r\n} from '@mui/material'\r\nimport { makeStyles } from '@mui/styles'\r\n\r\nimport PhotoCamera from '@mui/icons-material/PhotoCamera'\r\nimport { storage, db } from '../Firebase'\r\nimport { ref, uploadBytesResumable, getDownloadURL } from 'firebase/storage'\r\nimport { updateDoc, doc } from 'firebase/firestore'\r\nimport SecuritySetting from '../components/settings/SecuritySetting'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n}))\r\n\r\nconst Profile = () => {\r\n    const classes = useStyles()\r\n\r\n    const [firstName, setFirstName] = useState('')\r\n    const [lastName, setLastName] = useState('')\r\n    const [companyName, setCompanyName] = useState('')\r\n\r\n    const [profilePhoto, setProfilePhoto] = useState('')\r\n    const [previewUrl, setPreviewUrl] = useState(null)\r\n    const [selectedFile, setSelectedFile] = useState(null)\r\n    const [isUpdating, setIsUpdating] = useState(false)\r\n    // snackbar states\r\n    const [snackOpen, setSnackOpen] = useState(false)\r\n    const [success, setSuccess] = useState(null)\r\n    const [error, setError] = useState(null)\r\n\r\n    const userData = sessionStorage.getItem('userData')\r\n        ? JSON.parse(sessionStorage.getItem('userData'))\r\n        : null\r\n\r\n    useEffect(() => {\r\n        if (userData !== null) {\r\n            setProfilePhoto(userData.profilePhoto)\r\n            setFirstName(userData.firstName)\r\n            setCompanyName(userData.companyName)\r\n            setLastName(userData.lastName)\r\n        }\r\n    }, [])\r\n\r\n    const handleSnackClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return\r\n        }\r\n\r\n        setSnackOpen(false)\r\n        setError(null)\r\n        setSuccess(null)\r\n    }\r\n\r\n    const updateProfileHandler = async () => {\r\n        try {\r\n            setIsUpdating(true)\r\n            await uploaProfilPhoto()\r\n                .then(async (photo) => {\r\n                    const userRef = doc(db, 'trackerWebUser', userData.uid)\r\n                    await updateDoc(userRef, {\r\n                        firstName,\r\n                        lastName,\r\n                        companyName,\r\n                        profilePhoto: photo,\r\n                    }).then(() => {\r\n                        const data = {\r\n                            firstName,\r\n                            lastName,\r\n                            companyName,\r\n                            profilePhoto: photo,\r\n                            uid: userData.uid,\r\n                            createdAt: userData.createdAt,\r\n                            email: userData.email,\r\n                        }\r\n                        sessionStorage.setItem('userData', JSON.stringify(data))\r\n                        setSuccess('Profile updated successfully')\r\n                        setSnackOpen(true)\r\n                        setSelectedFile(null)\r\n                        setPreviewUrl(null)\r\n                        setProfilePhoto(photo)\r\n                        setIsUpdating(false)\r\n                    })\r\n                })\r\n                .catch((error) => {\r\n                    setError(error.message)\r\n                    setSnackOpen(true)\r\n                    setIsUpdating(false)\r\n                })\r\n        } catch (err) {\r\n            setError(err.message)\r\n            setSnackOpen(true)\r\n            setIsUpdating(false)\r\n        }\r\n    }\r\n\r\n    const uploaProfilPhoto = async () => {\r\n        console.log(previewUrl, profilePhoto, selectedFile)\r\n        return new Promise((resolve) => {\r\n            if (previewUrl === null) {\r\n                resolve(userData.profilePhoto)\r\n            }\r\n\r\n            const storageRef = ref(\r\n                storage,\r\n                `superAdmin/profile/${userData.uid}`\r\n            )\r\n            const uploadTask = uploadBytesResumable(storageRef, selectedFile)\r\n\r\n            uploadTask.on(\r\n                'state_changed',\r\n                (snapshot) => {\r\n                    const progress =\r\n                        (snapshot.bytesTransferred / snapshot.totalBytes) * 100\r\n                    console.log('Upload is ' + progress + '% done')\r\n                    switch (snapshot.state) {\r\n                        case 'paused':\r\n                            console.log('Upload is paused')\r\n                            break\r\n                        case 'running':\r\n                            console.log('Upload is running')\r\n                            break\r\n                    }\r\n                },\r\n                (error) => {\r\n                    console.log(error.message)\r\n                },\r\n                () => {\r\n                    getDownloadURL(uploadTask.snapshot.ref).then(\r\n                        (downloadUrl) => {\r\n                            resolve(downloadUrl)\r\n                        }\r\n                    )\r\n                }\r\n            )\r\n        })\r\n    }\r\n\r\n    const fileSelectHandler = (e) => {\r\n        const selected = e.target.files[0]\r\n        if (selected) {\r\n            setSelectedFile(selected)\r\n\r\n            let src = URL.createObjectURL(selected)\r\n            setPreviewUrl(src)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Box\r\n            sx={{\r\n                width: '100%',\r\n                p: 4,\r\n                display: 'flex',\r\n                justifyContent: 'center',\r\n            }}\r\n        >\r\n            <Box sx={{ width: '70%' }}>\r\n                <Grid container spacing={2}>\r\n                    <Grid\r\n                        item\r\n                        md={5}\r\n                        sx={{\r\n                            display: 'flex',\r\n                            justifyContent: 'center',\r\n                            alignItems: 'center',\r\n                            flexDirection: 'column',\r\n                        }}\r\n                    >\r\n                        <Avatar\r\n                            src={\r\n                                previewUrl === null ? profilePhoto : previewUrl\r\n                            }\r\n                            alt='profiile photo'\r\n                            sx={{ my: 1.5, width: 200, height: 200 }}\r\n                        />\r\n\r\n                        <IconButton\r\n                            component='label'\r\n                            sx={{ width: 50, height: 50 }}\r\n                        >\r\n                            <PhotoCamera />\r\n                            <input\r\n                                type='file'\r\n                                hidden\r\n                                onChange={fileSelectHandler}\r\n                                accept='image/*'\r\n                            />\r\n                        </IconButton>\r\n                    </Grid>\r\n                    <Grid item md={7}>\r\n                        <form className={classes.form} noValidate>\r\n                            <TextField\r\n                                variant='outlined'\r\n                                margin='normal'\r\n                                fullWidth\r\n                                id='firstName'\r\n                                label='First Name'\r\n                                name='firstName'\r\n                                autoComplete='name'\r\n                                autoFocus\r\n                                value={firstName}\r\n                                onChange={(e) => setFirstName(e.target.value)}\r\n                            />\r\n                            <TextField\r\n                                variant='outlined'\r\n                                margin='normal'\r\n                                fullWidth\r\n                                id='lastName'\r\n                                label='Last Name'\r\n                                name='lastName'\r\n                                autoComplete='name'\r\n                                value={lastName}\r\n                                onChange={(e) => setLastName(e.target.value)}\r\n                            />\r\n                            <TextField\r\n                                variant='outlined'\r\n                                margin='normal'\r\n                                fullWidth\r\n                                id='email'\r\n                                label='Company Name'\r\n                                name='companyName'\r\n                                autoComplete='text'\r\n                                value={companyName}\r\n                                onChange={(e) => setCompanyName(e.target.value)}\r\n                            />\r\n\r\n                            <Button\r\n                                variant='contained'\r\n                                onClick={() => updateProfileHandler()}\r\n                                sx={{\r\n                                    py: 1.2,\r\n                                    px: 4,\r\n                                    fontSize: 15,\r\n                                    mt: 2,\r\n                                    mb: 4,\r\n                                }}\r\n                                startIcon={\r\n                                    isUpdating && (\r\n                                        <CircularProgress\r\n                                            size={20}\r\n                                            color='inherit'\r\n                                        />\r\n                                    )\r\n                                }\r\n                            >\r\n                                Update Profile\r\n                            </Button>\r\n                        </form>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container spacing={2}>\r\n                    <Grid item md={5}></Grid>\r\n                    <Grid item md={7}>\r\n                        <SecuritySetting\r\n                            open={setSnackOpen}\r\n                            success={setSuccess}\r\n                            error={setError}\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n            </Box>\r\n\r\n            {success !== null && (\r\n                <Snackbar\r\n                    open={snackOpen}\r\n                    autoHideDuration={4000}\r\n                    onClose={handleSnackClose}\r\n                    anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n                >\r\n                    <Alert\r\n                        onClose={handleSnackClose}\r\n                        severity='success'\r\n                        sx={{ width: '100%' }}\r\n                    >\r\n                        {success}\r\n                    </Alert>\r\n                </Snackbar>\r\n            )}\r\n            {error !== null && (\r\n                <Snackbar\r\n                    open={snackOpen}\r\n                    autoHideDuration={4000}\r\n                    onClose={handleSnackClose}\r\n                    anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n                >\r\n                    <Alert\r\n                        onClose={handleSnackClose}\r\n                        severity='error'\r\n                        sx={{ width: '100%' }}\r\n                    >\r\n                        {error}\r\n                    </Alert>\r\n                </Snackbar>\r\n            )}\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Profile\r\n","import React, { useState } from 'react'\r\nimport {\r\n  Box,\r\n  Dialog,\r\n  DialogContent,\r\n  DialogTitle,\r\n  DialogActions,\r\n  FormControl,\r\n  InputLabel,\r\n  MenuItem,\r\n  Select,\r\n  Button,\r\n} from '@mui/material'\r\nimport TimeRangePicker from '@wojtekmaj/react-timerange-picker'\r\nimport { db } from '../../Firebase/index'\r\nimport { doc, setDoc } from 'firebase/firestore'\r\n\r\nconst ScheduleForm = (props) => {\r\n  const week = [\r\n    'Sunday',\r\n    'Monday',\r\n    'Tuesday',\r\n    'Wednesday',\r\n    'Thursday',\r\n    'Friday',\r\n    'Saturday',\r\n  ]\r\n\r\n  return (\r\n    <Box>\r\n      <Box\r\n        sx={{ display: 'flex', justifyContent: 'space-between', gap: 2, mt: 2 }}\r\n      >\r\n        <FormControl fullWidth variant=\"outlined\">\r\n          <InputLabel id=\"Start Day\">Start Day</InputLabel>\r\n          <Select\r\n            labelId=\"Start Day\"\r\n            value={props.startDay}\r\n            onChange={(e) => props.setStartDay(e.target.value)}\r\n            label=\"Start Day\"\r\n          >\r\n            {week.map((day, i) => (\r\n              <MenuItem key={i} value={day} sx={{ p: 1.2 }}>\r\n                {day}\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n\r\n        <FormControl fullWidth variant=\"outlined\">\r\n          <InputLabel id=\"End Day\">End Day</InputLabel>\r\n          <Select\r\n            labelId=\"Emd Day\"\r\n            value={props.endDay}\r\n            onChange={(e) => props.setEndDay(e.target.value)}\r\n            label=\"End Day\"\r\n          >\r\n            {week.map((day, i) => (\r\n              <MenuItem key={i} value={day} sx={{ p: 1.2 }}>\r\n                {day}\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n      </Box>\r\n\r\n      <Box\r\n        sx={{\r\n          height: '58px',\r\n          display: 'flex',\r\n          mb: 2,\r\n          mt: 3,\r\n        }}\r\n      >\r\n        <TimeRangePicker\r\n          disableClock={true}\r\n          onChange={props.setTime}\r\n          value={props.time}\r\n          rangeDivider=\"-- to --\"\r\n        />\r\n      </Box>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default React.memo(ScheduleForm)\r\n","import React, { useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  TextField,\r\n  DialogActions,\r\n  Button,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  ListItemText,\r\n  Checkbox,\r\n} from '@mui/material'\r\nimport ScheduleForm from './ScheduleForm'\r\nimport { createGroup } from '../../store/actions/group'\r\n\r\nconst ITEM_HEIGHT = 48\r\nconst ITEM_PADDING_TOP = 8\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250,\r\n    },\r\n  },\r\n}\r\n\r\nconst CreateGroupDialog = (props) => {\r\n  const [groupName, setGroupName] = useState('')\r\n  //const [adminList, setAdminList] = useState([])\r\n  const [selectedAdmins, setSelectedAdmins] = useState([])\r\n  //const [admins, setAdmins] = useState([])\r\n\r\n  const [startDay, setStartDay] = useState('')\r\n  const [endDay, setEndDay] = useState('')\r\n  const [time, setTime] = useState(['', ''])\r\n\r\n  const dispatch = useDispatch()\r\n  const admins = useSelector((state) => state.admins)\r\n  const adminList = admins.adminList\r\n\r\n  const saveGroup = () => {\r\n    if (props.subscription === null) {\r\n      props.setError('You do not have any subscription. Please choose a plan')\r\n      props.setSnackOpen(true)\r\n      return\r\n    } else if (props.groupList.length === props.subscription.groupCount) {\r\n      props.setError(\r\n        'You have used your groups quota. Please upgrade your subscription',\r\n      )\r\n      props.setSnackOpen(true)\r\n      return\r\n    } else if (groupName.length < 4) {\r\n      props.setError('Group name must be atleast 4 characters')\r\n      props.setSnackOpen(true)\r\n      return\r\n    }\r\n\r\n    const body = {\r\n      groupName: groupName,\r\n      createdBy: props.createdBy.id,\r\n      members: [],\r\n      hotspot: [],\r\n      admins: selectedAdmins,\r\n      schedule: {\r\n        startDay,\r\n        endDay,\r\n        time: {\r\n          startTime: time[0],\r\n          endTime: time[1],\r\n        },\r\n      },\r\n    }\r\n    dispatch(createGroup(body))\r\n    props.setOpen(false)\r\n    setSelectedAdmins([])\r\n    setGroupName('')\r\n    setStartDay('')\r\n    setEndDay('')\r\n    setTime(['', ''])\r\n  }\r\n\r\n  const handleChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event\r\n    setSelectedAdmins(typeof value === 'string' ? value.split(',') : value)\r\n  }\r\n\r\n  return (\r\n    <Dialog open={props.open} onClose={() => props.setOpen(false)}>\r\n      <DialogTitle sx={{ fontSize: 22 }}>Add New Group</DialogTitle>\r\n      <DialogContent sx={{ width: 500 }}>\r\n        <TextField\r\n          autoFocus\r\n          margin=\"normal\"\r\n          id=\"groupName\"\r\n          label=\"Group Name\"\r\n          type=\"text\"\r\n          fullWidth\r\n          variant=\"outlined\"\r\n          value={groupName}\r\n          onChange={(e) => setGroupName(e.target.value)}\r\n        />\r\n        {props.subscription !== null &&\r\n          props.subscription.groupCount === Number.MAX_VALUE && (\r\n            <FormControl margin=\"normal\" fullWidth variant=\"outlined\">\r\n              <InputLabel id=\"admin\">Select Admin</InputLabel>\r\n              <Select\r\n                labelId=\"admin\"\r\n                label=\"Select Admin\"\r\n                value={selectedAdmins}\r\n                onChange={handleChange}\r\n                multiple\r\n                renderValue={(selected) => selected.join(', ')}\r\n                MenuProps={MenuProps}\r\n              >\r\n                {adminList.map((item) => (\r\n                  <MenuItem key={item._id} value={item._id}>\r\n                    <Checkbox checked={selectedAdmins.indexOf(item._id) > -1} />\r\n                    <ListItemText primary={item.fullName} />\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n          )}\r\n\r\n        <ScheduleForm\r\n          startDay={startDay}\r\n          endDay={endDay}\r\n          setStartDay={setStartDay}\r\n          setEndDay={setEndDay}\r\n          time={time}\r\n          setTime={setTime}\r\n        />\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={() => props.setOpen(false)}>Cancel</Button>\r\n        <Button onClick={() => saveGroup()}>Create</Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n}\r\n\r\nexport default React.memo(CreateGroupDialog)\r\n","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {\r\n  Box,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Paper,\r\n  Typography,\r\n  IconButton,\r\n} from '@mui/material'\r\nimport DeleteIcon from '@mui/icons-material/Delete'\r\nimport Create from '@mui/icons-material/Create'\r\nimport moment from 'moment'\r\nimport { getGroups, deleteGroup } from '../../store/actions/group'\r\n\r\nconst GroupTable = (props) => {\r\n  // const [groups, setGroups] = useState([])\r\n\r\n  const userData = sessionStorage.getItem('userData')\r\n    ? JSON.parse(sessionStorage.getItem('userData'))\r\n    : null\r\n\r\n  const adminData = sessionStorage.getItem('adminData')\r\n    ? JSON.parse(sessionStorage.getItem('adminData'))\r\n    : null\r\n\r\n  const dispatch = useDispatch()\r\n  const groups = useSelector((state) => state.groups)\r\n  const { groupList } = groups\r\n\r\n  useEffect(async () => {\r\n    if (userData !== null && adminData === null) {\r\n      dispatch(getGroups(userData.uid))\r\n    }\r\n\r\n    // if (adminData !== null && userData !== null) {\r\n    //   const { data } = await axios.get(\r\n    //     `${API_SERVICE}/get/admin/${adminData.email}`,\r\n    //   )\r\n\r\n    // }\r\n  }, [dispatch, userData])\r\n\r\n  const removeGroup = (row) => {\r\n    dispatch(deleteGroup(row._id))\r\n  }\r\n\r\n  return (\r\n    <Box>\r\n      <TableContainer component={Paper}>\r\n        <Table aria-label=\"simple table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell sx={{ fontWeight: 600 }}>Group Name</TableCell>\r\n              <TableCell sx={{ fontWeight: 600 }} align=\"center\">\r\n                Admins\r\n              </TableCell>\r\n              <TableCell sx={{ fontWeight: 600 }} align=\"center\">\r\n                Schedule\r\n              </TableCell>\r\n              <TableCell sx={{ fontWeight: 600 }} align=\"center\">\r\n                Hotspot/s Added\r\n              </TableCell>\r\n              <TableCell sx={{ fontWeight: 600 }} align=\"center\">\r\n                Created At\r\n              </TableCell>\r\n              <TableCell sx={{ fontWeight: 600 }} align=\"center\">\r\n                Modified At\r\n              </TableCell>\r\n              <TableCell sx={{ fontWeight: 600 }} align=\"center\">\r\n                Action\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {groupList.map((row) => (\r\n              <TableRow\r\n                key={row._id}\r\n                sx={{\r\n                  '&:last-child td, &:last-child th': { border: 0 },\r\n                }}\r\n              >\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                  {row.groupName}\r\n                </TableCell>\r\n                <TableCell align=\"center\">\r\n                  {row.admins.length === 0 && <>---</>}\r\n                  {row.admins.map((x, i) => (\r\n                    <React.Fragment key={i}>\r\n                      {`${x.fullName}\r\n                        ${i !== row.admins.length - 1 ? ', ' : ''}`}\r\n                    </React.Fragment>\r\n                  ))}\r\n                </TableCell>\r\n\r\n                {Object.entries(row.schedule).length !== 0 ? (\r\n                  <TableCell align=\"center\">\r\n                    {`${row.schedule.startDay} to ${row.schedule.endDay} , ${row.schedule.time.startTime} to ${row.schedule.time.endTime}`}\r\n                  </TableCell>\r\n                ) : (\r\n                  <TableCell align=\"center\">---</TableCell>\r\n                )}\r\n\r\n                <TableCell align=\"center\">\r\n                  {row.hotspots.length === 0 && <>---</>}\r\n                  {row.hotspots.map((x, i) => (\r\n                    <React.Fragment key={i}>\r\n                      {`${x.hotspotName}\r\n                        ${i !== row.hotspots.length - 1 ? ' , ' : ''}`}\r\n                    </React.Fragment>\r\n                  ))}\r\n                </TableCell>\r\n\r\n                <TableCell align=\"center\" component=\"th\" scope=\"row\">\r\n                  {moment(row.createdAt).format('DD MMMM YYYY')}\r\n                </TableCell>\r\n\r\n                <TableCell align=\"center\" component=\"th\" scope=\"row\">\r\n                  {moment(row.updatedAt).format('DD MMMM YYYY')}\r\n                </TableCell>\r\n\r\n                <TableCell align=\"center\" sx={{ p: 0 }}>\r\n                  <IconButton\r\n                    color=\"success\"\r\n                    onClick={() => {\r\n                      props.setSelectedGroup(row)\r\n                      props.setEditOpen(true)\r\n                    }}\r\n                  >\r\n                    <Create />\r\n                  </IconButton>\r\n                  <IconButton color=\"error\" onClick={() => removeGroup(row)}>\r\n                    <DeleteIcon />\r\n                  </IconButton>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default React.memo(GroupTable)\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  TextField,\r\n  Checkbox,\r\n  ListItemText,\r\n  MenuItem,\r\n} from '@mui/material'\r\nimport ScheduleForm from './ScheduleForm'\r\nimport { updateGroup } from '../../store/actions/group'\r\n\r\nconst ITEM_HEIGHT = 48\r\nconst ITEM_PADDING_TOP = 8\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250,\r\n    },\r\n  },\r\n}\r\n\r\nconst EditGroupDialog = (props) => {\r\n  const [groupName, setGroupName] = useState('')\r\n  // const [adminList, setAdminList] = useState([])\r\n  const [selectedAdmins, setSelectedAdmins] = useState([])\r\n  // const [admins, setAdmins] = useState([])\r\n\r\n  const [startDay, setStartDay] = useState('Sunday')\r\n  const [endDay, setEndDay] = useState('Saturday')\r\n  const [time, setTime] = useState(['10:00', '11:00'])\r\n\r\n  const admins = useSelector((state) => state.admins)\r\n  const { adminList } = admins\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(props.selectedGroup).length !== 0) {\r\n      setGroupName(props.selectedGroup.groupName)\r\n      setStartDay(props.selectedGroup.schedule.startDay)\r\n      setEndDay(props.selectedGroup.schedule.endDay)\r\n      setTime([\r\n        props.selectedGroup.schedule.time.startTime,\r\n        props.selectedGroup.schedule.time.endTime,\r\n      ])\r\n\r\n      const arr = props.selectedGroup.admins.map((x) => x._id)\r\n      setSelectedAdmins(arr)\r\n    }\r\n  }, [props.selectedGroup])\r\n\r\n  const handleChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event\r\n    setSelectedAdmins(typeof value === 'string' ? value.split(',') : value)\r\n  }\r\n\r\n  const updateDetails = () => {\r\n    if (groupName.length < 3) {\r\n      props.setError('Group Name length must be atleast 3')\r\n      props.setSnackOpen(true)\r\n      return\r\n    } else if (admins.length === 0) {\r\n      props.setError('Select atleast one admin')\r\n      props.setSnackOpen(true)\r\n      return\r\n    }\r\n\r\n    const body = {\r\n      _id: props.selectedGroup._id,\r\n      groupName,\r\n      admins: selectedAdmins,\r\n      schedule: {\r\n        startDay,\r\n        endDay,\r\n        time: {\r\n          startTime: time[0],\r\n          endTime: time[1],\r\n        },\r\n      },\r\n    }\r\n\r\n    dispatch(updateGroup(body))\r\n    props.setOpen(false)\r\n    setGroupName('')\r\n    setSelectedAdmins([])\r\n    setStartDay('Sunday')\r\n    setEndDay('Sunday')\r\n    setTime(['10:00', '11:00'])\r\n  }\r\n\r\n  return (\r\n    <Dialog open={props.open} onClose={() => props.setOpen(false)}>\r\n      <DialogTitle sx={{ fontSize: 22 }}>Edit Group Details</DialogTitle>\r\n      <DialogContent sx={{ width: 500 }}>\r\n        <TextField\r\n          autoFocus\r\n          margin=\"normal\"\r\n          id=\"groupName\"\r\n          label=\"Group Name\"\r\n          type=\"text\"\r\n          fullWidth\r\n          variant=\"outlined\"\r\n          value={groupName}\r\n          onChange={(e) => setGroupName(e.target.value)}\r\n        />\r\n\r\n        <FormControl margin=\"normal\" fullWidth variant=\"outlined\">\r\n          <InputLabel id=\"admin\">Select Admin</InputLabel>\r\n          <Select\r\n            labelId=\"admin\"\r\n            label=\"Select Admin\"\r\n            value={selectedAdmins}\r\n            onChange={handleChange}\r\n            multiple\r\n            renderValue={(selected) => selected.join(', ')}\r\n            MenuProps={MenuProps}\r\n          >\r\n            {adminList.map((item) => (\r\n              <MenuItem key={item._id} value={item._id}>\r\n                <Checkbox checked={selectedAdmins.indexOf(item._id) > -1} />\r\n                <ListItemText primary={item.fullName} />\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n\r\n        <ScheduleForm\r\n          startDay={startDay}\r\n          endDay={endDay}\r\n          setStartDay={setStartDay}\r\n          setEndDay={setEndDay}\r\n          time={time}\r\n          setTime={setTime}\r\n        />\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={() => props.setOpen(false)}>Cancel</Button>\r\n        <Button onClick={() => updateDetails()}>Update</Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n}\r\n\r\nexport default React.memo(EditGroupDialog)\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useNavigate } from 'react-router'\r\nimport { Alert, Box, Button, Snackbar, Stack } from '@mui/material'\r\nimport CreateGroupDialog from '../components/groups/CreateGroupDialog'\r\nimport GroupTable from '../components/groups/GroupTable'\r\nimport EditGroupDialog from '../components/groups/EditGroupDialog'\r\nimport { useSubscription } from '../hooks/useSubscription'\r\nimport { getSubscriptionDetails } from '../utils/getSubscriptionDetails'\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst ManageGroups = () => {\r\n    const [createOpen, setCreateOpen] = useState(false)\r\n    const [editOpen, setEditOpen] = useState(false)\r\n    const [selectedGroup, setSelectedGroup] = useState({})\r\n    const [snackOpen, setSnackOpen] = useState(false)\r\n    const [successMsg, setSuccessMsg] = useState(null)\r\n    const [errorMsg, setErrorMsg] = useState(null)\r\n\r\n    // subscription state\r\n    const [subscription, setSubscription] = useState(null)\r\n\r\n    const userData = sessionStorage.getItem('userData')\r\n        ? JSON.parse(sessionStorage.getItem('userData'))\r\n        : null\r\n\r\n    const groups = useSelector((state) => state.groups)\r\n    const { groupList, success, error } = groups\r\n\r\n    const navigate = useNavigate()\r\n    const { state } = useSubscription()\r\n\r\n    useEffect(() => {\r\n        const authToken = sessionStorage.getItem('authToken')\r\n\r\n        if (!authToken) {\r\n            navigate('/login')\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        const fetchSubDetail = async () => {\r\n            const details = await getSubscriptionDetails(state)\r\n            setSubscription(details)\r\n        }\r\n\r\n        fetchSubDetail()\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (success) {\r\n            setSuccessMsg(success)\r\n            setSnackOpen(true)\r\n        }\r\n        if (error !== undefined) {\r\n            setErrorMsg(error)\r\n            setSnackOpen(true)\r\n        }\r\n    }, [success, error])\r\n\r\n    const handleSnackClose = (_, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return\r\n        }\r\n\r\n        setSnackOpen(false)\r\n        setErrorMsg(null)\r\n        setSuccessMsg(null)\r\n    }\r\n\r\n    return (\r\n        <Box sx={{ p: 4 }}>\r\n            <h2>Manage Groups</h2>\r\n\r\n            <Stack\r\n                direction='row'\r\n                justifyContent='flex-end'\r\n                rowGap={2}\r\n                columnGap={2}\r\n            >\r\n                <Button\r\n                    variant='contained'\r\n                    sx={{ py: 1.2 }}\r\n                    onClick={() => setCreateOpen(true)}\r\n                >\r\n                    Create New Group\r\n                </Button>\r\n            </Stack>\r\n\r\n            <Box sx={{ my: 5 }}>\r\n                <GroupTable\r\n                    success={setSuccessMsg}\r\n                    error={setErrorMsg}\r\n                    open={setSnackOpen}\r\n                    setSelectedGroup={setSelectedGroup}\r\n                    setEditOpen={setEditOpen}\r\n                />\r\n            </Box>\r\n\r\n            <Box>\r\n                <CreateGroupDialog\r\n                    open={createOpen}\r\n                    setOpen={setCreateOpen}\r\n                    createdBy={{\r\n                        id: userData?.uid,\r\n                        fullName: `${userData?.firstName} ${userData?.lastName}`,\r\n                    }}\r\n                    subscription={subscription}\r\n                    setError={setErrorMsg}\r\n                    setSnackOpen={setSnackOpen}\r\n                    setSuccess={setSuccessMsg}\r\n                    groupList={groupList}\r\n                />\r\n            </Box>\r\n\r\n            <Box>\r\n                <EditGroupDialog\r\n                    open={editOpen}\r\n                    setOpen={setEditOpen}\r\n                    selectedGroup={selectedGroup}\r\n                    setError={setErrorMsg}\r\n                    setSnackOpen={setSnackOpen}\r\n                    setSuccess={setSuccessMsg}\r\n                    createdBy={{\r\n                        id: userData?.uid,\r\n                        fullName: `${userData?.firstName} ${userData?.lastName}`,\r\n                    }}\r\n                />\r\n            </Box>\r\n\r\n            {success !== null && (\r\n                <Snackbar\r\n                    open={snackOpen}\r\n                    autoHideDuration={4000}\r\n                    onClose={handleSnackClose}\r\n                    anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n                >\r\n                    <Alert\r\n                        onClose={handleSnackClose}\r\n                        severity='success'\r\n                        sx={{ width: '100%' }}\r\n                        variant='filled'\r\n                    >\r\n                        {successMsg}\r\n                    </Alert>\r\n                </Snackbar>\r\n            )}\r\n            {error !== null && (\r\n                <Snackbar\r\n                    open={snackOpen}\r\n                    autoHideDuration={4000}\r\n                    onClose={handleSnackClose}\r\n                    anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n                >\r\n                    <Alert\r\n                        onClose={handleSnackClose}\r\n                        severity='error'\r\n                        sx={{ width: '100%' }}\r\n                        variant='filled'\r\n                    >\r\n                        {errorMsg}\r\n                    </Alert>\r\n                </Snackbar>\r\n            )}\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default ManageGroups\r\n","import React from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport {\r\n  Box,\r\n  IconButton,\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Typography,\r\n} from '@mui/material'\r\nimport { Delete, Create } from '@mui/icons-material'\r\nimport { arrayRemove, deleteDoc, doc, updateDoc } from 'firebase/firestore'\r\nimport { db } from '../../Firebase/index'\r\nimport moment from 'moment'\r\nimport { deleteAdmin } from '../../store/actions/admin'\r\n\r\nconst AdminTable = (props) => {\r\n  const admins = useSelector((state) => state.admins)\r\n  const { adminList } = admins\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const removeAdmin = (admin) => {\r\n    dispatch(deleteAdmin(admin._id))\r\n  }\r\n\r\n  return (\r\n    <Box>\r\n      <TableContainer component={Paper} sx={{ boxShadow: 6 }}>\r\n        <Table sx={{ minWidth: 650 }}>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell className=\"table-head\">Admin Name</TableCell>\r\n              <TableCell className=\"table-head\" align=\"center\">\r\n                Admin Id\r\n              </TableCell>\r\n              <TableCell className=\"table-head\" align=\"center\">\r\n                Email\r\n              </TableCell>\r\n              <TableCell className=\"table-head\" align=\"center\">\r\n                Groups\r\n              </TableCell>\r\n              <TableCell sx={{ fontWeight: 600 }} align=\"center\">\r\n                Created At\r\n              </TableCell>\r\n              <TableCell sx={{ fontWeight: 600 }} align=\"center\">\r\n                Modified At\r\n              </TableCell>\r\n              <TableCell className=\"table-head\" align=\"center\">\r\n                Action\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {adminList.map((row) => (\r\n              <TableRow\r\n                key={row._id}\r\n                sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n              >\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                  {row.fullName}\r\n                </TableCell>\r\n                <TableCell align=\"center\">{row._id}</TableCell>\r\n                <TableCell align=\"center\">{row.email}</TableCell>\r\n                <TableCell align=\"center\">\r\n                  {row.groups.length === 0 && <>---</>}\r\n                  {row.groups.map((x, i) => (\r\n                    <React.Fragment key={i}>{`${x.groupName} ${\r\n                      i !== row.groups.length - 1 ? ', ' : ''\r\n                    }`}</React.Fragment>\r\n                  ))}\r\n                </TableCell>\r\n\r\n                <TableCell align=\"center\">\r\n                  {moment(row.createdAt).format('DD MMM YYYY')}\r\n                </TableCell>\r\n\r\n                <TableCell align=\"center\">\r\n                  {moment(row.updatedAt).format('DD MMMM YYYY')}\r\n                </TableCell>\r\n\r\n                <TableCell align=\"center\" sx={{ p: 0 }}>\r\n                  <IconButton\r\n                    color=\"success\"\r\n                    onClick={() => {\r\n                      props.setSelectedAdmin(row)\r\n                      props.setShowEditDialog(true)\r\n                    }}\r\n                  >\r\n                    <Create />\r\n                  </IconButton>\r\n                  <IconButton color=\"error\" onClick={() => removeAdmin(row)}>\r\n                    <Delete />\r\n                  </IconButton>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default React.memo(AdminTable)\r\n","import React, { useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport {\r\n  Box,\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  TextField,\r\n} from '@mui/material'\r\nimport { addDoc, collection, doc, setDoc, Timestamp } from 'firebase/firestore'\r\nimport { auth, db } from '../../Firebase'\r\nimport { v4 as uuidv4 } from 'uuid'\r\nimport { createUserWithEmailAndPassword } from 'firebase/auth'\r\nimport { createAdmin, sendEmail } from '../../store/actions/admin'\r\n\r\nconst CreateAdminDialog = (props) => {\r\n  const [fullName, setFullName] = useState('')\r\n  const [email, setEmail] = useState('')\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const isValidEmail = (enteredEmail) => {\r\n    const emailRegex = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n\r\n    return emailRegex.test(enteredEmail)\r\n  }\r\n\r\n  function verifyData() {\r\n    if (props.subscription === null) {\r\n      props.error('You do not have any subscription. Please choose a plan')\r\n      props.setSnackOpen(true)\r\n      return false\r\n    } else if (props.adminList.length === props.subscription.adminCount) {\r\n      props.error(\r\n        'You have used your admin quota. Please upgrade your subscription',\r\n      )\r\n      props.setSnackOpen(true)\r\n      return false\r\n    } else if (fullName === '') {\r\n      props.error('Full Name cannot be empty')\r\n      props.setSnackOpen(true)\r\n      return false\r\n    } else if (email === '' || !isValidEmail(email)) {\r\n      props.error('Invalid Email')\r\n      props.setSnackOpen(true)\r\n      return false\r\n    }\r\n\r\n    return true\r\n  }\r\n\r\n  const saveAdmin = async () => {\r\n    if (verifyData()) {\r\n      const password = '#123321#'\r\n\r\n      await createUserWithEmailAndPassword(auth, email, password)\r\n        .then(async function (user) {\r\n          const body = {\r\n            fullName,\r\n            email,\r\n            groups: [],\r\n            createdBy: props.createdBy,\r\n            passwordChanged: false,\r\n          }\r\n          dispatch(createAdmin(body))\r\n\r\n          const emailData = {\r\n            to: email,\r\n            subject: 'GPS Tracker login credentials for admin',\r\n            body: `Your login credentials are:\\nemail: ${email}\\npassword: ${password}`,\r\n          }\r\n          dispatch(sendEmail(emailData))\r\n\r\n          setFullName('')\r\n          setEmail('')\r\n          props.setOpen(false)\r\n        })\r\n        .catch((error) => {\r\n          const errorCode = error.code\r\n          const errorMessage = error.message\r\n          alert(errorCode, errorMessage)\r\n        })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Dialog open={props.open} onClose={() => props.setOpen(false)}>\r\n      <DialogTitle sx={{ fontSize: 16 }}>Create New Admin</DialogTitle>\r\n      <DialogContent sx={{ width: 500 }}>\r\n        <TextField\r\n          fullWidth\r\n          autoFocus\r\n          margin=\"normal\"\r\n          id=\"name\"\r\n          label=\"Full Name\"\r\n          type=\"name\"\r\n          variant=\"outlined\"\r\n          value={fullName}\r\n          onChange={(e) => setFullName(e.target.value)}\r\n        />\r\n        <TextField\r\n          fullWidth\r\n          margin=\"normal\"\r\n          id=\"email\"\r\n          label=\"Email Address\"\r\n          type=\"email\"\r\n          variant=\"outlined\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n        />\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={() => props.setOpen(false)}>Cancel</Button>\r\n        <Button onClick={() => saveAdmin()}>Create</Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n}\r\n\r\nexport default React.memo(CreateAdminDialog)\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  TextField,\r\n} from '@mui/material'\r\nimport {\r\n  arrayRemove,\r\n  arrayUnion,\r\n  doc,\r\n  Timestamp,\r\n  updateDoc,\r\n} from 'firebase/firestore'\r\nimport { db } from '../../Firebase'\r\nimport { updateAdmin } from '../../store/actions/admin'\r\n\r\nconst EditAdminDialog = (props) => {\r\n  const [fullName, setFullName] = useState('')\r\n  const [email, setEmail] = useState('')\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    setFullName(props.selectedAdmin.fullName)\r\n    setEmail(props.selectedAdmin.email)\r\n  }, [props.selectedAdmin])\r\n\r\n  const isValidEmail = (enteredEmail) => {\r\n    const emailRegex = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n\r\n    return emailRegex.test(enteredEmail)\r\n  }\r\n\r\n  function verifyData() {\r\n    if (fullName === '') {\r\n      props.error('Full Name cannot be empty')\r\n      props.setSnackOpen(true)\r\n      return false\r\n    } else if (email === '' || !isValidEmail(email)) {\r\n      props.error('Invalid Email')\r\n      props.setSnackOpen(true)\r\n      return false\r\n    }\r\n\r\n    return true\r\n  }\r\n\r\n  const updateData = () => {\r\n    if (verifyData()) {\r\n      const body = {\r\n        _id: props.selectedAdmin._id,\r\n        fullName,\r\n        email,\r\n      }\r\n\r\n      dispatch(updateAdmin(body))\r\n      props.success('Admin Updated')\r\n      props.setSnackOpen(true)\r\n      setFullName('')\r\n      setEmail('')\r\n      props.setOpen(false)\r\n    }\r\n  }\r\n\r\n  //   console.log(props.selectedAdmin)\r\n\r\n  // const updateAdmin = async () => {\r\n  //   if (verifyData()) {\r\n  //     const ref = doc(db, 'trackerAdmin', props.selectedAdmin.id)\r\n  //     await updateDoc(ref, {\r\n  //       fullName,\r\n  //       email,\r\n  //       modifiedAt: Timestamp.now(),\r\n  //     })\r\n  //       .then(() => {\r\n  //         props.selectedAdmin.groups.forEach(async ({ id }) => {\r\n  //           const ref = doc(db, 'trackingGroups', id)\r\n  //           await updateDoc(ref, {\r\n  //             admins: arrayRemove({\r\n  //               fullName: props.selectedAdmin.fullName,\r\n  //               id: props.selectedAdmin.id,\r\n  //             }),\r\n  //           }).catch((error) => console.log(error))\r\n  //         })\r\n\r\n  //         props.selectedAdmin.groups.forEach(async ({ id }) => {\r\n  //           const ref = doc(db, 'trackingGroups', id)\r\n  //           await updateDoc(ref, {\r\n  //             admins: arrayUnion({\r\n  //               fullName: fullName,\r\n  //               id: props.selectedAdmin.id,\r\n  //             }),\r\n  //           }).catch((error) => console.log(error))\r\n  //         })\r\n  //       })\r\n  //       .then(() => {\r\n  //         props.success('Admin Updated')\r\n  //         props.setSnackOpen(true)\r\n  //         setFullName('')\r\n  //         setEmail('')\r\n  //         props.setOpen(false)\r\n  //       })\r\n  //       .catch((err) => console.log(err.message))\r\n  //   }\r\n  // }\r\n\r\n  return (\r\n    <Dialog open={props.open} onClose={() => props.setOpen(false)}>\r\n      <DialogTitle sx={{ fontSize: 18 }}>Edit Admin Details</DialogTitle>\r\n      <DialogContent sx={{ width: 500 }}>\r\n        <TextField\r\n          fullWidth\r\n          autoFocus\r\n          margin=\"normal\"\r\n          id=\"name\"\r\n          label=\"Full Name\"\r\n          type=\"name\"\r\n          variant=\"outlined\"\r\n          value={fullName}\r\n          onChange={(e) => setFullName(e.target.value)}\r\n        />\r\n        <TextField\r\n          fullWidth\r\n          margin=\"normal\"\r\n          id=\"email\"\r\n          label=\"Email Address\"\r\n          type=\"email\"\r\n          variant=\"outlined\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n        />\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={() => props.setOpen(false)}>Cancel</Button>\r\n        <Button onClick={() => updateData()}>Update</Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n}\r\n\r\nexport default React.memo(EditAdminDialog)\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useNavigate } from 'react-router'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { Alert, Box, Button, Snackbar, Stack } from '@mui/material'\r\nimport AdminTable from '../components/admins/AdminTable'\r\nimport CreateAdminDialog from '../components/admins/CreateAdminDialog'\r\nimport EditAdminDialog from '../components/admins/EditAdminDialog'\r\nimport { getAdmins } from '../store/actions/admin'\r\nimport { useSubscription } from '../hooks/useSubscription'\r\nimport { getSubscriptionDetails } from '../utils/getSubscriptionDetails'\r\n\r\nconst ManageAdmins = () => {\r\n    const [showCreateDialog, setShowCreateDialog] = useState(false)\r\n    const [showEditDialog, setShowEditDialog] = useState(false)\r\n    const [selectedAdmin, setSelectedAdmin] = useState({})\r\n    //const [adminList, setAdminList] = useState([])\r\n    const [snackOpen, setSnackOpen] = useState(false)\r\n    const [successMsg, setSuccess] = useState(null)\r\n    const [errorMsg, setError] = useState(null)\r\n    // subscription state\r\n    const [subscription, setSubscription] = useState(null)\r\n\r\n    const authToken = sessionStorage.getItem('authToken')\r\n    const userData = sessionStorage.getItem('userData')\r\n        ? JSON.parse(sessionStorage.getItem('userData'))\r\n        : null\r\n\r\n    const dispatch = useDispatch()\r\n    const navigate = useNavigate()\r\n    const { state } = useSubscription()\r\n\r\n    const admins = useSelector((state) => state.admins)\r\n    const { adminList, success, error } = admins\r\n\r\n    useEffect(() => {\r\n        const fetchSubDetail = async () => {\r\n            const details = await getSubscriptionDetails(state)\r\n            setSubscription(details)\r\n        }\r\n\r\n        fetchSubDetail()\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (!authToken) {\r\n            navigate('/login')\r\n        }\r\n    }, [authToken])\r\n\r\n    useEffect(() => {\r\n        if (userData !== null) {\r\n            dispatch(getAdmins(userData.uid))\r\n        }\r\n    }, [dispatch])\r\n\r\n    const handleCreateDialog = () => {\r\n        if (showCreateDialog) {\r\n            setShowCreateDialog(false)\r\n        } else {\r\n            setShowCreateDialog(true)\r\n        }\r\n    }\r\n\r\n    const handleSnackClose = (_, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return\r\n        }\r\n\r\n        setSnackOpen(false)\r\n        setError(null)\r\n        setSuccess(null)\r\n    }\r\n\r\n    return (\r\n        <Box sx={{ p: 4 }}>\r\n            <h2>Manage Admins</h2>\r\n\r\n            <Stack direction='row' justifyContent='flex-end'>\r\n                <Button\r\n                    variant='contained'\r\n                    sx={{ py: 1.2 }}\r\n                    onClick={handleCreateDialog}\r\n                >\r\n                    Create Admin\r\n                </Button>\r\n            </Stack>\r\n\r\n            <Box sx={{ my: 5 }}>\r\n                <AdminTable\r\n                    setSelectedAdmin={setSelectedAdmin}\r\n                    setShowEditDialog={setShowEditDialog}\r\n                />\r\n            </Box>\r\n\r\n            <Box>\r\n                <CreateAdminDialog\r\n                    open={showCreateDialog}\r\n                    setOpen={setShowCreateDialog}\r\n                    createdBy={userData?.uid}\r\n                    setSnackOpen={setSnackOpen}\r\n                    success={setSuccess}\r\n                    error={setError}\r\n                    adminList={adminList}\r\n                    subscription={subscription}\r\n                />\r\n            </Box>\r\n\r\n            <Box>\r\n                <EditAdminDialog\r\n                    open={showEditDialog}\r\n                    setOpen={setShowEditDialog}\r\n                    createdBy={userData?.uid}\r\n                    setSnackOpen={setSnackOpen}\r\n                    selectedAdmin={selectedAdmin}\r\n                    success={setSuccess}\r\n                    error={setError}\r\n                />\r\n            </Box>\r\n\r\n            {success !== null && (\r\n                <Snackbar\r\n                    open={snackOpen}\r\n                    autoHideDuration={4000}\r\n                    onClose={handleSnackClose}\r\n                    anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n                >\r\n                    <Alert\r\n                        onClose={handleSnackClose}\r\n                        severity='success'\r\n                        sx={{ width: '100%' }}\r\n                        variant='filled'\r\n                    >\r\n                        {successMsg}\r\n                    </Alert>\r\n                </Snackbar>\r\n            )}\r\n            {error !== null && (\r\n                <Snackbar\r\n                    open={snackOpen}\r\n                    autoHideDuration={4000}\r\n                    onClose={handleSnackClose}\r\n                    anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n                >\r\n                    <Alert\r\n                        onClose={handleSnackClose}\r\n                        severity='error'\r\n                        sx={{ width: '100%' }}\r\n                        variant='filled'\r\n                    >\r\n                        {errorMsg}\r\n                    </Alert>\r\n                </Snackbar>\r\n            )}\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default ManageAdmins\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Box, Button, CircularProgress, Backdrop } from '@mui/material'\r\n\r\nimport { db } from '../../Firebase/index'\r\nimport {\r\n  getDocs,\r\n  collection,\r\n  query,\r\n  where,\r\n  orderBy,\r\n  limit,\r\n  documentId,\r\n} from 'firebase/firestore'\r\nimport ReportTable from '../../components/report/ReportTable'\r\nimport HotspotFilter from '../../components/report/HotspotFilter'\r\nimport DeviceFilter from '../../components/report/DeviceFilter'\r\nimport MonthFilter from '../../components/report/MonthFilter'\r\nimport GroupFilter from '../../components/report/GroupFilter'\r\n\r\nconst Months = [\r\n  'January',\r\n  'February',\r\n  'March',\r\n  'April',\r\n  'May',\r\n  'June',\r\n  'July',\r\n  'August',\r\n  'September',\r\n  'October',\r\n  'November',\r\n  'December',\r\n]\r\n\r\nconst AdminReport = () => {\r\n  const [hotspotNames, setHotspotNames] = useState([])\r\n  const [groupNames, setGroupNames] = useState([])\r\n  const [tableData, setTableData] = useState([])\r\n  const [mobileDevices, setMobileDevices] = useState([])\r\n  const [phoneNumbers, setPhoneNumbers] = useState([])\r\n\r\n  const [filter, setFilter] = useState(false)\r\n  const [selectedHotspotNames, setSelectedHotspotNames] = useState([])\r\n  const [selectedGroupNames, setSelectedGroupNames] = useState([])\r\n  const [selectedHotspots, setSelectedHotspots] = useState([])\r\n  const [selectedDevices, setSelectedDevices] = useState([])\r\n  const [selectedMonth, setSelectedMonth] = useState(\r\n    Months[new Date().getMonth()]\r\n  )\r\n  const [loading, setLoading] = useState(true)\r\n\r\n  const userData = sessionStorage.getItem('userData')\r\n    ? JSON.parse(sessionStorage.getItem('userData'))\r\n    : null\r\n\r\n  const adminData = sessionStorage.getItem('adminData')\r\n    ? JSON.parse(sessionStorage.getItem('adminData'))\r\n    : null\r\n\r\n  //Get All Hotspots\r\n  useEffect(() => {\r\n    const getHotspots = async () => {\r\n      try {\r\n        const ref = collection(db, 'trackingHotspots')\r\n        const q = query(\r\n          ref,\r\n          where('createdBy', '==', userData.uid),\r\n          where('groupId', 'array-contains-any', adminData.groupId)\r\n        )\r\n\r\n        const snaps = await getDocs(q)\r\n        const array = []\r\n        snaps.forEach((document) => {\r\n          array.push({ ...document.data(), id: document.id })\r\n        })\r\n\r\n        const newArr = array.map((item) => {\r\n          return { hotspotName: item.hotspotName, id: item.id }\r\n        })\r\n\r\n        setHotspotNames(newArr)\r\n      } catch (error) {\r\n        console.log(error)\r\n      }\r\n    }\r\n\r\n    getHotspots()\r\n  }, [])\r\n\r\n  //Get All Groups\r\n  useEffect(() => {\r\n    const getGroups = async () => {\r\n      try {\r\n        const ref = collection(db, 'trackingGroups')\r\n        const q = query(\r\n          ref,\r\n          where('createdBy', '==', userData.uid),\r\n          where(documentId(), 'in', adminData.groupId)\r\n        )\r\n\r\n        const snaps = await getDocs(q)\r\n        const array = []\r\n        snaps.forEach((document) => {\r\n          array.push({ ...document.data(), id: document.id })\r\n        })\r\n\r\n        const newArr = array.map((item) => {\r\n          return { groupName: item.groupName, id: item.id }\r\n        })\r\n\r\n        setGroupNames(newArr)\r\n      } catch (error) {\r\n        console.log(error)\r\n      }\r\n    }\r\n\r\n    getGroups()\r\n  }, [])\r\n\r\n  // Get All Users\r\n  useEffect(() => {\r\n    const getPhoneNumbers = async () => {\r\n      try {\r\n        const trackingUserRef = collection(db, 'trackingUsers')\r\n        const q = query(\r\n          trackingUserRef,\r\n          where('senderId', '==', userData.uid),\r\n          where('groupId', 'array-contains-any', adminData.groupId)\r\n        )\r\n\r\n        const snaps = await getDocs(q)\r\n        const users = []\r\n        const numbers = []\r\n        snaps.forEach((document) => {\r\n          users.push({ ...document.data(), id: document.id })\r\n          numbers.push(document.data().phoneNumber)\r\n        })\r\n        setPhoneNumbers(numbers)\r\n        setMobileDevices(users)\r\n      } catch (error) {\r\n        console.log(error)\r\n      }\r\n    }\r\n\r\n    getPhoneNumbers()\r\n  }, [])\r\n\r\n  const getFromDB = async (device, hotspot) => {\r\n    return new Promise(async (resolve) => {\r\n      const ref = collection(\r\n        db,\r\n        'trackingAttendance',\r\n        device.phoneNumber,\r\n        userData.uid\r\n      )\r\n\r\n      const q = query(ref, where('hotspotId', '==', hotspot.id))\r\n      await getDocs(q).then((res) => {\r\n        resolve({ count: res.docs.length, hotspot: hotspot.hotspotName })\r\n      })\r\n    })\r\n  }\r\n\r\n  const getHotspotsData = async (device, hotspots) => {\r\n    return new Promise(async (resolve) => {\r\n      const arr = []\r\n      for (let hotspot of hotspots) {\r\n        const data = await getFromDB(device, hotspot)\r\n        arr.push(data)\r\n      }\r\n      resolve(arr)\r\n    })\r\n  }\r\n\r\n  const getCollapseData = async (device, hotspots) => {\r\n    return new Promise(async (resolve) => {\r\n      const hotspotName = hotspots.map((x) => {\r\n        return x.hotspotName\r\n      })\r\n      const ref = collection(\r\n        db,\r\n        'trackingLocations',\r\n        device.phoneNumber,\r\n        'locations'\r\n      )\r\n      let q\r\n      console.log(Months.indexOf(selectedMonth), selectedMonth)\r\n      if (selectedGroupNames.length !== 0) {\r\n        q = query(\r\n          ref,\r\n          where('trackerId', '==', userData.uid),\r\n          where('group', 'in', selectedGroupNames),\r\n          where('month', '==', Months.indexOf(selectedMonth) + 1),\r\n          orderBy('createdAt', 'desc'),\r\n          limit(100)\r\n        )\r\n      } else {\r\n        q = query(\r\n          ref,\r\n          where('trackerId', '==', userData.uid),\r\n          where('hotspot', 'in', hotspotName),\r\n          where('month', '==', Months.indexOf(selectedMonth) + 1),\r\n          orderBy('createdAt', 'desc'),\r\n          limit(100)\r\n        )\r\n      }\r\n\r\n      const snaps = await getDocs(q)\r\n      const arr = []\r\n      snaps.forEach((snap) => {\r\n        const data = snap.data()\r\n        arr.push(data)\r\n      })\r\n      console.log(arr)\r\n      resolve(arr)\r\n    })\r\n  }\r\n\r\n  const getDocuments = async (devices, hotspots) => {\r\n    const dataArr = []\r\n\r\n    for (let device of devices) {\r\n      const finalData = {}\r\n      const history = await getCollapseData(device, hotspots)\r\n      const data = await getHotspotsData(device, hotspots)\r\n      finalData['history'] = history\r\n      finalData['data'] = data\r\n      finalData['device'] = {\r\n        phoneNumber: device.phoneNumber,\r\n        fullName: device.fullName,\r\n      }\r\n      dataArr.push(finalData)\r\n    }\r\n\r\n    setTableData(dataArr)\r\n    setLoading(false)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (phoneNumbers.length !== 0 && mobileDevices.length !== 0) {\r\n      setLoading(true)\r\n      if (!filter) {\r\n        getDocuments(mobileDevices, hotspotNames)\r\n      }\r\n    }\r\n  }, [phoneNumbers, mobileDevices, filter])\r\n\r\n  // handling hotspot selection\r\n  const handleHotspotSelect = async (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event\r\n    setSelectedHotspotNames(\r\n      typeof value === 'string' ? value.split(',') : value\r\n    )\r\n  }\r\n\r\n  // handling group selection\r\n  const handleGroupSelect = async (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event\r\n    setSelectedGroupNames(typeof value === 'string' ? value.split(',') : value)\r\n  }\r\n\r\n  // handling device selection\r\n  const handleSelectedDevice = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event\r\n    setSelectedDevices(typeof value === 'string' ? value.split(',') : value)\r\n  }\r\n\r\n  // applying filter\r\n  useEffect(async () => {\r\n    setLoading(true)\r\n    let hotspots = []\r\n    if (selectedHotspotNames.length !== 0) {\r\n      selectedHotspotNames.forEach((x) => {\r\n        const temp = hotspotNames\r\n        const filterArr = temp.filter((item) => item.hotspotName === x)\r\n        hotspots.push(...filterArr)\r\n      })\r\n      setFilter(true)\r\n    } else {\r\n      hotspots = hotspotNames\r\n      setFilter(false)\r\n    }\r\n\r\n    setSelectedHotspots(hotspots)\r\n    let devices = []\r\n    if (selectedDevices.length !== 0) {\r\n      mobileDevices.forEach((d) => {\r\n        selectedDevices.forEach((x, i) => {\r\n          const number = x.split(' - ')[1]\r\n          if (d.phoneNumber === number) {\r\n            devices.push(d)\r\n          }\r\n        })\r\n      })\r\n      setFilter(true)\r\n    } else {\r\n      devices = mobileDevices\r\n      setFilter(false)\r\n    }\r\n\r\n    if (selectedGroupNames.length === 0) {\r\n      setFilter(false)\r\n    }\r\n\r\n    await getDocuments(devices, hotspots)\r\n  }, [selectedDevices, selectedHotspotNames, selectedGroupNames, selectedMonth])\r\n\r\n  return (\r\n    <Box sx={{ p: 5 }}>\r\n      <Box\r\n        sx={{\r\n          display: 'flex',\r\n          justifyContent: 'flex-end',\r\n          gap: 2,\r\n          mt: 4,\r\n        }}\r\n      >\r\n        <MonthFilter\r\n          Months={Months}\r\n          selectedMonth={selectedMonth}\r\n          setSelectedMonth={setSelectedMonth}\r\n        />\r\n\r\n        <HotspotFilter\r\n          handleHotspotSelect={handleHotspotSelect}\r\n          selectedHotspotNames={selectedHotspotNames}\r\n          hotspotNames={hotspotNames}\r\n        />\r\n\r\n        <GroupFilter\r\n          handleGroupSelect={handleGroupSelect}\r\n          selectedGroupNames={selectedGroupNames}\r\n          groupNames={groupNames}\r\n        />\r\n\r\n        <DeviceFilter\r\n          handleSelectedDevice={handleSelectedDevice}\r\n          selectedDevices={selectedDevices}\r\n          mobileDevices={mobileDevices}\r\n        />\r\n\r\n        <Button variant='outlined' sx={{ py: 1.3, px: 4, fontSize: 15 }}>\r\n          Export Report\r\n        </Button>\r\n      </Box>\r\n\r\n      <Box sx={{ my: 4 }}>\r\n        {!loading ? (\r\n          <ReportTable\r\n            tableData={tableData}\r\n            hotspotNames={\r\n              selectedHotspotNames.length === 0\r\n                ? hotspotNames\r\n                : selectedHotspots\r\n            }\r\n          />\r\n        ) : (\r\n          <Box\r\n            sx={{\r\n              display: 'flex',\r\n              justifyContent: 'center',\r\n              mt: '300px',\r\n            }}\r\n          >\r\n            <CircularProgress color='inherit' />\r\n          </Box>\r\n        )}\r\n      </Box>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default AdminReport\r\n","import React, { useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { useNavigate, Link as RouterLink } from 'react-router-dom'\r\nimport Avatar from '@mui/material/Avatar'\r\nimport Button from '@mui/material/Button'\r\nimport CssBaseline from '@mui/material/CssBaseline'\r\nimport TextField from '@mui/material/TextField'\r\nimport Paper from '@mui/material/Paper'\r\nimport Grid from '@mui/material/Grid'\r\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined'\r\nimport Typography from '@mui/material/Typography'\r\nimport { CircularProgress } from '@mui/material'\r\nimport { makeStyles } from '@mui/styles'\r\nimport { auth, db } from '../../Firebase'\r\nimport {\r\n    EmailAuthProvider,\r\n    reauthenticateWithCredential,\r\n    signInWithEmailAndPassword,\r\n    updatePassword,\r\n} from 'firebase/auth'\r\nimport { doc, getDoc, updateDoc } from 'firebase/firestore'\r\nimport { updateAdmin } from '../../store/actions/admin'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    image: {\r\n        backgroundImage: 'url(https://source.unsplash.com/random)',\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundColor:\r\n            theme.palette.type === 'light'\r\n                ? theme.palette.grey[50]\r\n                : theme.palette.grey[900],\r\n        backgroundSize: 'cover',\r\n        backgroundPosition: 'center',\r\n    },\r\n    paper: {\r\n        margin: theme.spacing(8, 4),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    login: {\r\n        margin: theme.spacing(3, 0, 2),\r\n        padding: theme.spacing(1.4),\r\n        fontSize: 15,\r\n    },\r\n    googleLogin: {\r\n        margin: theme.spacing(2, 0, 2),\r\n        fontSize: 15,\r\n    },\r\n}))\r\n\r\nconst ChangePassword = () => {\r\n    const classes = useStyles()\r\n    const navigate = useNavigate()\r\n\r\n    const [currentPassword, setCurrentPassword] = useState('')\r\n    const [newPassword, setNewPassword] = useState('')\r\n\r\n    const adminData = sessionStorage.getItem('adminData')\r\n        ? JSON.parse(sessionStorage.getItem('adminData'))\r\n        : null\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const submitHandler = async () => {\r\n        if (adminData === null) {\r\n            return\r\n        }\r\n\r\n        if (newPassword.length < 6) {\r\n            alert('Password must be atleast 6 characters long.')\r\n            return\r\n        }\r\n\r\n        const user = auth.currentUser\r\n        const credential = EmailAuthProvider.credential(\r\n            adminData.email,\r\n            currentPassword\r\n        )\r\n\r\n        reauthenticateWithCredential(user, credential)\r\n            .then(() => {\r\n                updatePassword(user, newPassword)\r\n                    .then(async () => {\r\n                        const body = {\r\n                            _id: adminData._id,\r\n                            passwordChanged: true,\r\n                        }\r\n                        dispatch(updateAdmin(body))\r\n                    })\r\n                    .then(() => {\r\n                        setNewPassword('')\r\n                        setCurrentPassword('')\r\n                        alert('Password updated successfully')\r\n\r\n                        navigate('/app/dashboard', { replace: true })\r\n                    })\r\n                    .catch((err) => {\r\n                        const errorCode = err.code\r\n                        const errorMessage = err.message\r\n                        alert(errorCode, errorMessage)\r\n                    })\r\n            })\r\n            .catch((err) => {\r\n                const errorCode = err.code\r\n                const errorMessage = err.message\r\n                alert(errorCode, errorMessage)\r\n            })\r\n    }\r\n\r\n    return (\r\n        <Grid\r\n            sx={{ height: '100%' }}\r\n            container\r\n            component='main'\r\n            className={classes.root}\r\n        >\r\n            <CssBaseline />\r\n            <Grid item xs={false} sm={4} md={7} className={classes.image} />\r\n            <Grid\r\n                item\r\n                xs={12}\r\n                sm={8}\r\n                md={5}\r\n                component={Paper}\r\n                elevation={6}\r\n                square\r\n            >\r\n                <div className={classes.paper}>\r\n                    <Avatar className={classes.avatar}>\r\n                        <LockOutlinedIcon />\r\n                    </Avatar>\r\n                    <Typography\r\n                        component='h1'\r\n                        variant='h1'\r\n                        sx={{ mt: 1, mb: 4 }}\r\n                    >\r\n                        Change Password\r\n                    </Typography>\r\n                    <form className={classes.form} noValidate>\r\n                        <TextField\r\n                            variant='outlined'\r\n                            margin='normal'\r\n                            fullWidth\r\n                            id='password'\r\n                            label='Current Password'\r\n                            name='password'\r\n                            autoComplete='name'\r\n                            type='password'\r\n                            value={currentPassword}\r\n                            onChange={(e) => setCurrentPassword(e.target.value)}\r\n                        />\r\n                        <TextField\r\n                            variant='outlined'\r\n                            margin='normal'\r\n                            fullWidth\r\n                            id='password'\r\n                            label='New Password'\r\n                            name='password'\r\n                            type='password'\r\n                            autoComplete='name'\r\n                            value={newPassword}\r\n                            onChange={(e) => setNewPassword(e.target.value)}\r\n                        />\r\n                        <Button\r\n                            fullWidth\r\n                            variant='contained'\r\n                            color='primary'\r\n                            className={classes.login}\r\n                            onClick={() => submitHandler()}\r\n                        >\r\n                            Change Password\r\n                        </Button>\r\n                    </form>\r\n                </div>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default ChangePassword\r\n","import React from 'react'\r\nimport {\r\n    Button,\r\n    Card,\r\n    Chip,\r\n    List,\r\n    ListItem,\r\n    ListItemIcon,\r\n    ListItemText,\r\n    Slider,\r\n    Stack,\r\n    Typography,\r\n    Box,\r\n} from '@mui/material'\r\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle'\r\n\r\nconst ProCard = (props) => {\r\n    const benefits = [\r\n        'Unlimited Hotspots',\r\n        'Unlimited Devices',\r\n        'Unlimited Groups',\r\n        'Unlimited Admins',\r\n        'Get Report of Unlimited Period',\r\n    ]\r\n    return (\r\n        <Card\r\n            className='pricing-card pro'\r\n            sx={{\r\n                boxShadow: 15,\r\n                py: 5,\r\n                px: 4,\r\n            }}\r\n        >\r\n            <Box>\r\n                <Stack\r\n                    spacing={2}\r\n                    direction='row'\r\n                    sx={{ mb: 1 }}\r\n                    alignItems='center'\r\n                    justifyContent='space-between'\r\n                >\r\n                    {/* <FavoriteBorderOutlinedIcon\r\n                                sx={{\r\n                                    fontSize: 50,\r\n                                }}\r\n                                htmlColor='#e91e63'\r\n                            /> */}\r\n\r\n                    <Typography\r\n                        variant='h1'\r\n                        sx={{ my: 2, fontSize: 40, color: 'white' }}\r\n                    >\r\n                        {`$${props.value}`}\r\n                    </Typography>\r\n                    {props.isCurrent && (\r\n                        <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                            <div\r\n                                style={{\r\n                                    width: '15px',\r\n                                    height: '15px',\r\n                                    backgroundColor: '#4CAF50',\r\n                                    borderRadius: '50%',\r\n                                }}\r\n                            ></div>\r\n                            <Typography\r\n                                variant='h4'\r\n                                sx={{ my: 2, color: '#4CAF50', ml: 1 }}\r\n                            >\r\n                                Active\r\n                            </Typography>\r\n                        </Box>\r\n                    )}\r\n                </Stack>\r\n                <Chip\r\n                    label='Pro Account'\r\n                    variant='outlined'\r\n                    className='chip'\r\n                    sx={{\r\n                        my: 2,\r\n                        color: '#fb8c00',\r\n                        border: '1.5px solid #fb8c00',\r\n                        width: '100%',\r\n                    }}\r\n                />\r\n\r\n                <Stack direction='row' justifyContent='space-between'>\r\n                    <Typography\r\n                        variant='h1'\r\n                        sx={{ my: 2, fontSize: 40, color: 'white' }}\r\n                    >\r\n                        $1{' '}\r\n                        <span\r\n                            style={{\r\n                                color: 'gray',\r\n                                fontSize: 15,\r\n                                textTransform: 'uppercase',\r\n                            }}\r\n                        >\r\n                            / user\r\n                        </span>\r\n                    </Typography>\r\n\r\n                    <Typography\r\n                        variant='h1'\r\n                        sx={{ my: 2, fontSize: 40, color: 'white' }}\r\n                    >\r\n                        {`${props.value}`}\r\n                    </Typography>\r\n                </Stack>\r\n\r\n                <Stack\r\n                    spacing={2}\r\n                    direction='row'\r\n                    sx={{ mb: 1 }}\r\n                    alignItems='center'\r\n                >\r\n                    <Typography variant='h5' color='white'>\r\n                        0\r\n                    </Typography>\r\n                    <Slider\r\n                        sx={{ color: 'whitesmoke' }}\r\n                        value={props.value}\r\n                        onChange={props.handleValueChange}\r\n                        max={1000}\r\n                    />\r\n                    <Typography variant='h5' color='white'>\r\n                        1000\r\n                    </Typography>\r\n                </Stack>\r\n\r\n                <List sx={{ my: 3 }}>\r\n                    {benefits.map((x) => (\r\n                        <ListItem disablePadding key={x}>\r\n                            <ListItemIcon>\r\n                                <CheckCircleIcon\r\n                                    htmlColor='#4CAF50'\r\n                                    sx={{ fontSize: 27, my: 0.5, ml: 0.5 }}\r\n                                />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={x} sx={{ color: 'white' }} />\r\n                        </ListItem>\r\n                    ))}\r\n                </List>\r\n            </Box>\r\n\r\n            <Button\r\n                className='pro-btn btn'\r\n                variant='contained'\r\n                //</Card>disabled={props.isCurrent}\r\n                sx={{\r\n                    py: 1.4,\r\n                    borderRadius: 25,\r\n                    boxShadow: 5,\r\n                }}\r\n                onClick={props.action}\r\n            >\r\n                Pay as you go\r\n            </Button>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default ProCard\r\n","import React from 'react'\r\nimport {\r\n    Button,\r\n    Card,\r\n    Chip,\r\n    List,\r\n    ListItem,\r\n    ListItemIcon,\r\n    ListItemText,\r\n    Slider,\r\n    Stack,\r\n    Typography,\r\n    Box,\r\n} from '@mui/material'\r\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle'\r\nimport CancelIcon from '@mui/icons-material/Cancel'\r\nimport FavoriteBorderOutlinedIcon from '@mui/icons-material/FavoriteBorderOutlined'\r\n\r\nconst FreeCard = (props) => {\r\n    const benefits = [\r\n        'Only 10 Hotspots',\r\n        'Unlimited Devices',\r\n        'Only 2 Groups',\r\n        'No Admins',\r\n        'Get Report of last 1 month',\r\n    ]\r\n    return (\r\n        <Card\r\n            className='pricing-card'\r\n            sx={{\r\n                py: 5,\r\n                px: 4,\r\n            }}\r\n        >\r\n            <Box>\r\n                <Stack\r\n                    spacing={2}\r\n                    direction='row'\r\n                    sx={{ mb: 1 }}\r\n                    alignItems='center'\r\n                    justifyContent='space-between'\r\n                >\r\n                    <Typography variant='h1' sx={{ my: 2, fontSize: 40 }}>\r\n                        $0\r\n                    </Typography>\r\n                    {props.isCurrent && (\r\n                        <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                            <div\r\n                                style={{\r\n                                    width: '15px',\r\n                                    height: '15px',\r\n                                    backgroundColor: 'green',\r\n                                    borderRadius: '50%',\r\n                                }}\r\n                            ></div>\r\n                            <Typography\r\n                                variant='h4'\r\n                                sx={{ my: 2, color: '#4CAF50', ml: 1 }}\r\n                            >\r\n                                Active\r\n                            </Typography>\r\n                        </Box>\r\n                    )}\r\n                </Stack>\r\n                <Chip\r\n                    label='Free Account'\r\n                    variant='outlined'\r\n                    className='chip'\r\n                    sx={{\r\n                        my: 2,\r\n                        color: '#e91e63',\r\n                        border: '1.5px solid #e91e63',\r\n                        width: '100%',\r\n                    }}\r\n                />\r\n                <Typography variant='h1' sx={{ my: 2, fontSize: 40 }}>\r\n                    $0{' '}\r\n                    <span\r\n                        style={{\r\n                            color: 'gray',\r\n                            fontSize: 15,\r\n                            textTransform: 'uppercase',\r\n                        }}\r\n                    >\r\n                        / user\r\n                    </span>\r\n                </Typography>\r\n\r\n                <List sx={{ my: 3, mt: 8 }}>\r\n                    {benefits.map((x, i) => (\r\n                        <ListItem key={i} disablePadding>\r\n                            <ListItemIcon>\r\n                                {i === 1 ? (\r\n                                    <CheckCircleIcon\r\n                                        htmlColor='#4CAF50'\r\n                                        sx={{ fontSize: 27, my: 0.5, ml: 0.5 }}\r\n                                    />\r\n                                ) : (\r\n                                    <CancelIcon\r\n                                        htmlColor='#e91e63'\r\n                                        sx={{ fontSize: 27, my: 0.5, ml: 0.5 }}\r\n                                    />\r\n                                )}\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={x} />\r\n                        </ListItem>\r\n                    ))}\r\n                </List>\r\n            </Box>\r\n\r\n            <Button\r\n                className='free-btn btn'\r\n                variant='outlined'\r\n                disabled={props.isCurrent}\r\n                sx={{\r\n                    py: 1.4,\r\n                    borderRadius: 25,\r\n                    boxShadow: 5,\r\n                }}\r\n                onClick={props.action}\r\n            >\r\n                Pick free plan\r\n            </Button>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default FreeCard\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useLocation, useNavigate } from 'react-router'\r\nimport { Box, Typography } from '@mui/material'\r\n\r\nimport ProCard from '../components/pricing/ProCard'\r\nimport FreeCard from '../components/pricing/FreeCard'\r\nimport { useSubscription } from '../hooks/useSubscription'\r\nimport axios from 'axios'\r\nimport { API_SERVICE } from '../URI'\r\n\r\nconst Pricing = () => {\r\n    const [quantity, setQuantity] = React.useState(500)\r\n    const [currentPlan, setCurrentPlan] = useState('')\r\n    const [prices, setPrices] = useState([])\r\n\r\n    const navigate = useNavigate()\r\n\r\n    const { state, dispatch } = useSubscription()\r\n    const customerId = state?.customerId\r\n\r\n    useEffect(() => {\r\n        if (state.subscriptions) {\r\n            let subscription\r\n            for (let sub of state?.subscriptions?.data) {\r\n                if (sub.status === 'active') {\r\n                    subscription = sub\r\n                    break\r\n                }\r\n            }\r\n\r\n            const plan = subscription ? subscription.plan.id : ''\r\n            const subQuantity = subscription ? subscription.quantity : 0\r\n\r\n            setCurrentPlan(plan)\r\n            setQuantity(subQuantity)\r\n        }\r\n    }, [state])\r\n\r\n    useEffect(() => {\r\n        const fetchPrices = async () => {\r\n            const { data } = await axios.get(\r\n                `${API_SERVICE}/subscription/config`\r\n            )\r\n\r\n            console.log(data)\r\n            setPrices(data.prices)\r\n        }\r\n\r\n        fetchPrices()\r\n    }, [])\r\n\r\n    const handleValueChange = (_, newValue) => {\r\n        setQuantity(newValue)\r\n    }\r\n\r\n    const createSubscription = async (product, amount) => {\r\n        if (amount <= 0) {\r\n            alert('Please select atlest one user')\r\n            return\r\n        }\r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n            }\r\n            const body = {\r\n                customerId,\r\n                priceId: product.id,\r\n                quantity: amount,\r\n            }\r\n            const { data } = await axios.post(\r\n                `${API_SERVICE}/create/subscription`,\r\n                body,\r\n                config\r\n            )\r\n\r\n            console.log(data)\r\n            const { clientSecret } = data\r\n\r\n            if (!clientSecret) {\r\n                console.log('Cannot create Subscription')\r\n                dispatch({\r\n                    type: 'SELECT_PRODUCT',\r\n                    payload: {\r\n                        cart: { product, clientSecret },\r\n                    },\r\n                })\r\n                console.log('Here')\r\n\r\n                if (product.product.name === 'Free Plan') {\r\n                    window.location.reload()\r\n                }\r\n            } else {\r\n                dispatch({\r\n                    type: 'SELECT_PRODUCT',\r\n                    payload: {\r\n                        cart: { product, clientSecret },\r\n                    },\r\n                })\r\n\r\n                if (product.product.name === 'Free Plan') {\r\n                    window.location.reload()\r\n                }\r\n                navigate('/subscribe', { state: { quantity } })\r\n            }\r\n        } catch (error) {\r\n            console.log(error.message)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Box sx={{ p: 2 }}>\r\n            <Box sx={{ mt: 2, mb: 5 }}>\r\n                <Typography variant='h2' sx={{ textAlign: 'center' }}>\r\n                    Choose your plan\r\n                </Typography>\r\n                <Typography\r\n                    vanriant='h6'\r\n                    sx={{\r\n                        textAlign: 'center',\r\n                        mt: 2,\r\n                        letterSpacing: 0.6,\r\n                        color: 'gray',\r\n                    }}\r\n                >\r\n                    Select one of our plans below as per your convenience\r\n                </Typography>\r\n            </Box>\r\n            <Box\r\n                className='card-container'\r\n                sx={{\r\n                    mt: 6,\r\n                }}\r\n            >\r\n                {prices.map((price) => (\r\n                    <Box key={price.id}>\r\n                        {price.product.name === 'Pro Plan' && (\r\n                            <ProCard\r\n                                value={quantity}\r\n                                handleValueChange={handleValueChange}\r\n                                isCurrent={currentPlan === price.id}\r\n                                action={() =>\r\n                                    createSubscription(price, quantity)\r\n                                }\r\n                            />\r\n                        )}\r\n                        {price.product.name === 'Free Plan' && (\r\n                            <FreeCard\r\n                                isCurrent={currentPlan === price.id}\r\n                                action={() => createSubscription(price, 1)}\r\n                            />\r\n                        )}\r\n                    </Box>\r\n                ))}\r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Pricing\r\n","import React, { useState } from 'react'\r\nimport { CardElement, PaymentElement } from '@stripe/react-stripe-js'\r\nimport Box from '@mui/material/Box'\r\nimport Card from '@mui/material/Card'\r\nimport CardActions from '@mui/material/CardActions'\r\nimport CardContent from '@mui/material/CardContent'\r\nimport Button from '@mui/material/Button'\r\nimport Typography from '@mui/material/Typography'\r\nimport { Grid, TextField } from '@mui/material'\r\nimport { useSubscription } from '../../hooks/useSubscription'\r\nimport ArrowBackIosNewOutlinedIcon from '@mui/icons-material/ArrowBackIosNewOutlined'\r\n\r\nfunction CardSection({ handleBack, handleSubmit, quantity }) {\r\n    const { state } = useSubscription()\r\n    console.log(state)\r\n\r\n    return (\r\n        <Box>\r\n            <Grid container spacing={3}>\r\n                <Grid item xs={12}>\r\n                    <h4>Enter Card Details</h4>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Box>\r\n                        <CardElement />\r\n                    </Box>\r\n                </Grid>\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n                <Box\r\n                    mt={5}\r\n                    alignItems='center'\r\n                    justifyContent='space-between'\r\n                    display='flex'\r\n                >\r\n                    <Button\r\n                        startIcon={<ArrowBackIosNewOutlinedIcon />}\r\n                        onClick={handleBack}\r\n                    >\r\n                        Go Back\r\n                    </Button>\r\n                    <Button\r\n                        type='submit'\r\n                        variant='contained'\r\n                        onClick={handleSubmit}\r\n                        sx={{ py: 1.2, fontSize: 14, px: '40px' }}\r\n                    >\r\n                        {`PAY  $${quantity}`}\r\n                    </Button>\r\n                </Box>\r\n            </Grid>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default CardSection\r\n","export const countries = [\r\n    { name: 'Afghanistan', code: 'AF' },\r\n    { name: 'Åland Islands', code: 'AX' },\r\n    { name: 'Albania', code: 'AL' },\r\n    { name: 'Algeria', code: 'DZ' },\r\n    { name: 'American Samoa', code: 'AS' },\r\n    { name: 'AndorrA', code: 'AD' },\r\n    { name: 'Angola', code: 'AO' },\r\n    { name: 'Anguilla', code: 'AI' },\r\n    { name: 'Antarctica', code: 'AQ' },\r\n    { name: 'Antigua and Barbuda', code: 'AG' },\r\n    { name: 'Argentina', code: 'AR' },\r\n    { name: 'Armenia', code: 'AM' },\r\n    { name: 'Aruba', code: 'AW' },\r\n    { name: 'Australia', code: 'AU' },\r\n    { name: 'Austria', code: 'AT' },\r\n    { name: 'Azerbaijan', code: 'AZ' },\r\n    { name: 'Bahamas', code: 'BS' },\r\n    { name: 'Bahrain', code: 'BH' },\r\n    { name: 'Bangladesh', code: 'BD' },\r\n    { name: 'Barbados', code: 'BB' },\r\n    { name: 'Belarus', code: 'BY' },\r\n    { name: 'Belgium', code: 'BE' },\r\n    { name: 'Belize', code: 'BZ' },\r\n    { name: 'Benin', code: 'BJ' },\r\n    { name: 'Bermuda', code: 'BM' },\r\n    { name: 'Bhutan', code: 'BT' },\r\n    { name: 'Bolivia', code: 'BO' },\r\n    { name: 'Bosnia and Herzegovina', code: 'BA' },\r\n    { name: 'Botswana', code: 'BW' },\r\n    { name: 'Bouvet Island', code: 'BV' },\r\n    { name: 'Brazil', code: 'BR' },\r\n    { name: 'British Indian Ocean Territory', code: 'IO' },\r\n    { name: 'Brunei Darussalam', code: 'BN' },\r\n    { name: 'Bulgaria', code: 'BG' },\r\n    { name: 'Burkina Faso', code: 'BF' },\r\n    { name: 'Burundi', code: 'BI' },\r\n    { name: 'Cambodia', code: 'KH' },\r\n    { name: 'Cameroon', code: 'CM' },\r\n    { name: 'Canada', code: 'CA' },\r\n    { name: 'Cape Verde', code: 'CV' },\r\n    { name: 'Cayman Islands', code: 'KY' },\r\n    { name: 'Central African Republic', code: 'CF' },\r\n    { name: 'Chad', code: 'TD' },\r\n    { name: 'Chile', code: 'CL' },\r\n    { name: 'China', code: 'CN' },\r\n    { name: 'Christmas Island', code: 'CX' },\r\n    { name: 'Cocos (Keeling) Islands', code: 'CC' },\r\n    { name: 'Colombia', code: 'CO' },\r\n    { name: 'Comoros', code: 'KM' },\r\n    { name: 'Congo', code: 'CG' },\r\n    { name: 'Congo, The Democratic Republic of the', code: 'CD' },\r\n    { name: 'Cook Islands', code: 'CK' },\r\n    { name: 'Costa Rica', code: 'CR' },\r\n    { name: \"Cote D'Ivoire\", code: 'CI' },\r\n    { name: 'Croatia', code: 'HR' },\r\n    { name: 'Cuba', code: 'CU' },\r\n    { name: 'Cyprus', code: 'CY' },\r\n    { name: 'Czech Republic', code: 'CZ' },\r\n    { name: 'Denmark', code: 'DK' },\r\n    { name: 'Djibouti', code: 'DJ' },\r\n    { name: 'Dominica', code: 'DM' },\r\n    { name: 'Dominican Republic', code: 'DO' },\r\n    { name: 'Ecuador', code: 'EC' },\r\n    { name: 'Egypt', code: 'EG' },\r\n    { name: 'El Salvador', code: 'SV' },\r\n    { name: 'Equatorial Guinea', code: 'GQ' },\r\n    { name: 'Eritrea', code: 'ER' },\r\n    { name: 'Estonia', code: 'EE' },\r\n    { name: 'Ethiopia', code: 'ET' },\r\n    { name: 'Falkland Islands (Malvinas)', code: 'FK' },\r\n    { name: 'Faroe Islands', code: 'FO' },\r\n    { name: 'Fiji', code: 'FJ' },\r\n    { name: 'Finland', code: 'FI' },\r\n    { name: 'France', code: 'FR' },\r\n    { name: 'French Guiana', code: 'GF' },\r\n    { name: 'French Polynesia', code: 'PF' },\r\n    { name: 'French Southern Territories', code: 'TF' },\r\n    { name: 'Gabon', code: 'GA' },\r\n    { name: 'Gambia', code: 'GM' },\r\n    { name: 'Georgia', code: 'GE' },\r\n    { name: 'Germany', code: 'DE' },\r\n    { name: 'Ghana', code: 'GH' },\r\n    { name: 'Gibraltar', code: 'GI' },\r\n    { name: 'Greece', code: 'GR' },\r\n    { name: 'Greenland', code: 'GL' },\r\n    { name: 'Grenada', code: 'GD' },\r\n    { name: 'Guadeloupe', code: 'GP' },\r\n    { name: 'Guam', code: 'GU' },\r\n    { name: 'Guatemala', code: 'GT' },\r\n    { name: 'Guernsey', code: 'GG' },\r\n    { name: 'Guinea', code: 'GN' },\r\n    { name: 'Guinea-Bissau', code: 'GW' },\r\n    { name: 'Guyana', code: 'GY' },\r\n    { name: 'Haiti', code: 'HT' },\r\n    { name: 'Heard Island and Mcdonald Islands', code: 'HM' },\r\n    { name: 'Holy See (Vatican City State)', code: 'VA' },\r\n    { name: 'Honduras', code: 'HN' },\r\n    { name: 'Hong Kong', code: 'HK' },\r\n    { name: 'Hungary', code: 'HU' },\r\n    { name: 'Iceland', code: 'IS' },\r\n    { name: 'India', code: 'IN' },\r\n    { name: 'Indonesia', code: 'ID' },\r\n    { name: 'Iran, Islamic Republic Of', code: 'IR' },\r\n    { name: 'Iraq', code: 'IQ' },\r\n    { name: 'Ireland', code: 'IE' },\r\n    { name: 'Isle of Man', code: 'IM' },\r\n    { name: 'Israel', code: 'IL' },\r\n    { name: 'Italy', code: 'IT' },\r\n    { name: 'Jamaica', code: 'JM' },\r\n    { name: 'Japan', code: 'JP' },\r\n    { name: 'Jersey', code: 'JE' },\r\n    { name: 'Jordan', code: 'JO' },\r\n    { name: 'Kazakhstan', code: 'KZ' },\r\n    { name: 'Kenya', code: 'KE' },\r\n    { name: 'Kiribati', code: 'KI' },\r\n    { name: \"Korea, Democratic People'S Republic of\", code: 'KP' },\r\n    { name: 'Korea, Republic of', code: 'KR' },\r\n    { name: 'Kuwait', code: 'KW' },\r\n    { name: 'Kyrgyzstan', code: 'KG' },\r\n    { name: \"Lao People'S Democratic Republic\", code: 'LA' },\r\n    { name: 'Latvia', code: 'LV' },\r\n    { name: 'Lebanon', code: 'LB' },\r\n    { name: 'Lesotho', code: 'LS' },\r\n    { name: 'Liberia', code: 'LR' },\r\n    { name: 'Libyan Arab Jamahiriya', code: 'LY' },\r\n    { name: 'Liechtenstein', code: 'LI' },\r\n    { name: 'Lithuania', code: 'LT' },\r\n    { name: 'Luxembourg', code: 'LU' },\r\n    { name: 'Macao', code: 'MO' },\r\n    { name: 'Macedonia, The Former Yugoslav Republic of', code: 'MK' },\r\n    { name: 'Madagascar', code: 'MG' },\r\n    { name: 'Malawi', code: 'MW' },\r\n    { name: 'Malaysia', code: 'MY' },\r\n    { name: 'Maldives', code: 'MV' },\r\n    { name: 'Mali', code: 'ML' },\r\n    { name: 'Malta', code: 'MT' },\r\n    { name: 'Marshall Islands', code: 'MH' },\r\n    { name: 'Martinique', code: 'MQ' },\r\n    { name: 'Mauritania', code: 'MR' },\r\n    { name: 'Mauritius', code: 'MU' },\r\n    { name: 'Mayotte', code: 'YT' },\r\n    { name: 'Mexico', code: 'MX' },\r\n    { name: 'Micronesia, Federated States of', code: 'FM' },\r\n    { name: 'Moldova, Republic of', code: 'MD' },\r\n    { name: 'Monaco', code: 'MC' },\r\n    { name: 'Mongolia', code: 'MN' },\r\n    { name: 'Montserrat', code: 'MS' },\r\n    { name: 'Morocco', code: 'MA' },\r\n    { name: 'Mozambique', code: 'MZ' },\r\n    { name: 'Myanmar', code: 'MM' },\r\n    { name: 'Namibia', code: 'NA' },\r\n    { name: 'Nauru', code: 'NR' },\r\n    { name: 'Nepal', code: 'NP' },\r\n    { name: 'Netherlands', code: 'NL' },\r\n    { name: 'Netherlands Antilles', code: 'AN' },\r\n    { name: 'New Caledonia', code: 'NC' },\r\n    { name: 'New Zealand', code: 'NZ' },\r\n    { name: 'Nicaragua', code: 'NI' },\r\n    { name: 'Niger', code: 'NE' },\r\n    { name: 'Nigeria', code: 'NG' },\r\n    { name: 'Niue', code: 'NU' },\r\n    { name: 'Norfolk Island', code: 'NF' },\r\n    { name: 'Northern Mariana Islands', code: 'MP' },\r\n    { name: 'Norway', code: 'NO' },\r\n    { name: 'Oman', code: 'OM' },\r\n    { name: 'Pakistan', code: 'PK' },\r\n    { name: 'Palau', code: 'PW' },\r\n    { name: 'Palestinian Territory, Occupied', code: 'PS' },\r\n    { name: 'Panama', code: 'PA' },\r\n    { name: 'Papua New Guinea', code: 'PG' },\r\n    { name: 'Paraguay', code: 'PY' },\r\n    { name: 'Peru', code: 'PE' },\r\n    { name: 'Philippines', code: 'PH' },\r\n    { name: 'Pitcairn', code: 'PN' },\r\n    { name: 'Poland', code: 'PL' },\r\n    { name: 'Portugal', code: 'PT' },\r\n    { name: 'Puerto Rico', code: 'PR' },\r\n    { name: 'Qatar', code: 'QA' },\r\n    { name: 'Reunion', code: 'RE' },\r\n    { name: 'Romania', code: 'RO' },\r\n    { name: 'Russian Federation', code: 'RU' },\r\n    { name: 'RWANDA', code: 'RW' },\r\n    { name: 'Saint Helena', code: 'SH' },\r\n    { name: 'Saint Kitts and Nevis', code: 'KN' },\r\n    { name: 'Saint Lucia', code: 'LC' },\r\n    { name: 'Saint Pierre and Miquelon', code: 'PM' },\r\n    { name: 'Saint Vincent and the Grenadines', code: 'VC' },\r\n    { name: 'Samoa', code: 'WS' },\r\n    { name: 'San Marino', code: 'SM' },\r\n    { name: 'Sao Tome and Principe', code: 'ST' },\r\n    { name: 'Saudi Arabia', code: 'SA' },\r\n    { name: 'Senegal', code: 'SN' },\r\n    { name: 'Serbia and Montenegro', code: 'CS' },\r\n    { name: 'Seychelles', code: 'SC' },\r\n    { name: 'Sierra Leone', code: 'SL' },\r\n    { name: 'Singapore', code: 'SG' },\r\n    { name: 'Slovakia', code: 'SK' },\r\n    { name: 'Slovenia', code: 'SI' },\r\n    { name: 'Solomon Islands', code: 'SB' },\r\n    { name: 'Somalia', code: 'SO' },\r\n    { name: 'South Africa', code: 'ZA' },\r\n    { name: 'South Georgia and the South Sandwich Islands', code: 'GS' },\r\n    { name: 'Spain', code: 'ES' },\r\n    { name: 'Sri Lanka', code: 'LK' },\r\n    { name: 'Sudan', code: 'SD' },\r\n    { name: 'Suriname', code: 'SR' },\r\n    { name: 'Svalbard and Jan Mayen', code: 'SJ' },\r\n    { name: 'Swaziland', code: 'SZ' },\r\n    { name: 'Sweden', code: 'SE' },\r\n    { name: 'Switzerland', code: 'CH' },\r\n    { name: 'Syrian Arab Republic', code: 'SY' },\r\n    { name: 'Taiwan, Province of China', code: 'TW' },\r\n    { name: 'Tajikistan', code: 'TJ' },\r\n    { name: 'Tanzania, United Republic of', code: 'TZ' },\r\n    { name: 'Thailand', code: 'TH' },\r\n    { name: 'Timor-Leste', code: 'TL' },\r\n    { name: 'Togo', code: 'TG' },\r\n    { name: 'Tokelau', code: 'TK' },\r\n    { name: 'Tonga', code: 'TO' },\r\n    { name: 'Trinidad and Tobago', code: 'TT' },\r\n    { name: 'Tunisia', code: 'TN' },\r\n    { name: 'Turkey', code: 'TR' },\r\n    { name: 'Turkmenistan', code: 'TM' },\r\n    { name: 'Turks and Caicos Islands', code: 'TC' },\r\n    { name: 'Tuvalu', code: 'TV' },\r\n    { name: 'Uganda', code: 'UG' },\r\n    { name: 'Ukraine', code: 'UA' },\r\n    { name: 'United Arab Emirates', code: 'AE' },\r\n    { name: 'United Kingdom', code: 'GB' },\r\n    { name: 'United States', code: 'US' },\r\n    { name: 'United States Minor Outlying Islands', code: 'UM' },\r\n    { name: 'Uruguay', code: 'UY' },\r\n    { name: 'Uzbekistan', code: 'UZ' },\r\n    { name: 'Vanuatu', code: 'VU' },\r\n    { name: 'Venezuela', code: 'VE' },\r\n    { name: 'Viet Nam', code: 'VN' },\r\n    { name: 'Virgin Islands, British', code: 'VG' },\r\n    { name: 'Virgin Islands, U.S.', code: 'VI' },\r\n    { name: 'Wallis and Futuna', code: 'WF' },\r\n    { name: 'Western Sahara', code: 'EH' },\r\n    { name: 'Yemen', code: 'YE' },\r\n    { name: 'Zambia', code: 'ZM' },\r\n    { name: 'Zimbabwe', code: 'ZW' },\r\n]\r\n","import React, { useState } from 'react'\r\nimport Box from '@mui/material/Box'\r\n\r\nimport Button from '@mui/material/Button'\r\nimport InputLabel from '@mui/material/InputLabel'\r\nimport MenuItem from '@mui/material/MenuItem'\r\nimport FormControl from '@mui/material/FormControl'\r\nimport Select from '@mui/material/Select'\r\nimport { Grid, TextField } from '@mui/material'\r\nimport { countries } from '../../utils/getCountryCode'\r\nimport { useSubscription } from '../../hooks/useSubscription'\r\n\r\nfunction Details(props) {\r\n    const { state } = useSubscription()\r\n    const info = state?.cart?.details\r\n    const [details, setDetails] = useState(\r\n        info\r\n            ? info\r\n            : {\r\n                  name: '',\r\n                  address: '',\r\n                  city: '',\r\n                  state: '',\r\n                  country: '',\r\n              }\r\n    )\r\n\r\n    const handleChange = (e) => {\r\n        setDetails({ ...details, [e.target.name]: e.target.value })\r\n    }\r\n\r\n    const handleDetails = (data) => {\r\n        if (Object.values(data).includes('')) {\r\n            props.setErrorMsg('All Fields are required')\r\n            props.setSnackOpen(true)\r\n            return\r\n        }\r\n        props.handleNext(data)\r\n    }\r\n\r\n    return (\r\n        <Box>\r\n            <Grid container spacing={3}>\r\n                <Grid item xs={12}>\r\n                    <h4>Payment Details</h4>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <TextField\r\n                        autoFocus\r\n                        fullWidth\r\n                        label='Card Holder Name'\r\n                        name='name'\r\n                        required\r\n                        value={details.name}\r\n                        onChange={handleChange}\r\n                    />\r\n                </Grid>\r\n\r\n                <Grid item md={12} xs={12}>\r\n                    <h4>Billing Details</h4>\r\n                </Grid>\r\n                <Grid item md={6} xs={12}>\r\n                    <TextField\r\n                        fullWidth\r\n                        label='Street Address'\r\n                        name='address'\r\n                        required\r\n                        value={details.address}\r\n                        onChange={handleChange}\r\n                    />\r\n                </Grid>\r\n\r\n                <Grid item md={6} xs={12}>\r\n                    <FormControl fullWidth>\r\n                        <InputLabel id='country-select'>Country</InputLabel>\r\n                        <Select\r\n                            required\r\n                            labelId='country-select'\r\n                            name='country'\r\n                            value={details.country}\r\n                            label='Country'\r\n                            onChange={handleChange}\r\n                        >\r\n                            {countries.map((x) => (\r\n                                <MenuItem\r\n                                    sx={{ py: 1 }}\r\n                                    key={x.code}\r\n                                    value={x.code}\r\n                                >{`${x.name} - ${x.code}`}</MenuItem>\r\n                            ))}\r\n                        </Select>\r\n                    </FormControl>\r\n                </Grid>\r\n                <Grid item md={6} xs={12}>\r\n                    <TextField\r\n                        fullWidth\r\n                        label='State'\r\n                        name='state'\r\n                        required\r\n                        value={details.state}\r\n                        onChange={handleChange}\r\n                    />\r\n                </Grid>\r\n                <Grid item md={6} xs={12}>\r\n                    <TextField\r\n                        fullWidth\r\n                        label='City'\r\n                        name='city'\r\n                        required\r\n                        value={details.city}\r\n                        onChange={handleChange}\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <Box\r\n                    mt={5}\r\n                    alignItems='center'\r\n                    justifyContent='space-between'\r\n                    display='flex'\r\n                >\r\n                    <Button\r\n                        type='submit'\r\n                        variant='contained'\r\n                        onClick={() => handleDetails(details)}\r\n                        sx={{\r\n                            width: '100%',\r\n                            py: 1.5,\r\n                        }}\r\n                    >\r\n                        Continue to Pay\r\n                    </Button>\r\n                </Box>\r\n            </Grid>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Details\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useNavigate, useHref } from 'react-router'\r\nimport { Dialog, DialogContent, Box } from '@mui/material'\r\nimport LinearProgress from '@mui/material/LinearProgress'\r\n\r\nconst SuccessDialog = (props) => {\r\n    const [progress, setProgress] = useState(0)\r\n    const [intervalId, setIntervalId] = useState(0)\r\n\r\n    const navigate = useNavigate()\r\n\r\n    useEffect(() => {\r\n        if (props.open === false) {\r\n            return\r\n        }\r\n\r\n        const interval = setInterval(() => {\r\n            setProgress((progress) => progress + 5)\r\n        }, 250)\r\n\r\n        setIntervalId(interval)\r\n\r\n        return () => clearInterval(interval)\r\n    }, [props])\r\n\r\n    useEffect(() => {\r\n        if (progress > 100) {\r\n            clearInterval(intervalId)\r\n            navigate('/app/pricing', { replace: true })\r\n        }\r\n    }, [progress])\r\n\r\n    console.log('Here')\r\n\r\n    return (\r\n        <Dialog open={props.open} onClose={props.handleClose}>\r\n            <DialogContent>\r\n                <Box>\r\n                    <img\r\n                        src='https://firebasestorage.googleapis.com/v0/b/evencloud-26d32.appspot.com/o/success.png?alt=media&token=14200909-edb3-4628-bfe5-36e346709737'\r\n                        alt='Success Image'\r\n                        style={{ width: '250px', height: '250px' }}\r\n                    />\r\n\r\n                    <LinearProgress\r\n                        variant='determinate'\r\n                        value={progress}\r\n                        color='success'\r\n                    />\r\n                </Box>\r\n            </DialogContent>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nexport default React.memo(SuccessDialog)\r\n","import React, { useState } from 'react'\r\nimport { useNavigate, useLocation } from 'react-router'\r\nimport { Alert, Box, Button, Paper, Snackbar, Typography } from '@mui/material'\r\nimport ArrowBackIosNewOutlinedIcon from '@mui/icons-material/ArrowBackIosNewOutlined'\r\nimport { useStripe, useElements, CardElement } from '@stripe/react-stripe-js'\r\n\r\nimport CardSection from './CardSection.js'\r\nimport Details from './Details.js'\r\nimport { useSubscription } from '../../hooks/useSubscription'\r\nimport SuccessDialog from './SuccessDialog.js'\r\n\r\nexport default function CheckoutForm() {\r\n    const stripe = useStripe()\r\n    const elements = useElements()\r\n    const { state, dispatch } = useSubscription()\r\n    const { cart } = state\r\n\r\n    const [messages, _setMessages] = useState('')\r\n    //const [paymentIntent, setPaymentIntent] = useState()\r\n    const [isPaying, setIsPaying] = useState(false)\r\n\r\n    const [snackOpen, setSnackOpen] = useState(false)\r\n    const [errorMsg, setErrorMsg] = useState(null)\r\n\r\n    const [successDialog, setSuccessDialog] = useState(false)\r\n\r\n    const navigate = useNavigate()\r\n    const location = useLocation()\r\n    const quantity = location.state ? location.state.quantity : 0\r\n\r\n    // helper for displaying status messages.\r\n    const setMessage = (message) => {\r\n        _setMessages(`${messages}\\n\\n${message}`)\r\n    }\r\n\r\n    const handleSubmit = async (event) => {\r\n        // We don't want to let default form submission happen here,\r\n        // which would refresh the page.\r\n        event.preventDefault()\r\n\r\n        if (!stripe || !elements) {\r\n            // Stripe.js has not yet loaded.\r\n            // Make sure to disable form submission until Stripe.js has loaded.\r\n            return\r\n        }\r\n\r\n        console.log(state?.cart)\r\n\r\n        const { error, paymentIntent } = await stripe.confirmCardPayment(\r\n            state?.cart?.clientSecret,\r\n            {\r\n                payment_method: {\r\n                    card: elements.getElement(CardElement),\r\n                    billing_details: {\r\n                        name: cart?.details.name,\r\n                        address: {\r\n                            line1: cart?.details.address,\r\n                            postal_code: cart?.details.zip || '38483',\r\n                            city: cart?.details?.city,\r\n                            country: cart?.details?.country,\r\n                        },\r\n                    },\r\n                },\r\n            }\r\n        )\r\n\r\n        if (error) {\r\n            // Show error to your customer (for example, insufficient funds)\r\n            setMessage(error.message)\r\n            setErrorMsg(error.message)\r\n            setSnackOpen(true)\r\n            console.log(error.message)\r\n        } else {\r\n            // The payment has been processed!\r\n            if (paymentIntent.status === 'succeeded') {\r\n                // Show a success message to your customer\r\n                // There's a risk of the customer closing the window before callback\r\n                // execution. Set up a webhook or plugin to listen for the\r\n                // payment_intent.succeeded event that handles any business critical\r\n                // post-payment actions.\r\n                console.log('Success')\r\n                setSuccessDialog(true)\r\n            }\r\n        }\r\n        //setPaymentIntent(paymentIntent)\r\n    }\r\n\r\n    // if (paymentIntent && paymentIntent.status === 'succeeded') {\r\n    //     //return <div>Success </div>\r\n    //     setSuccessDialog(true)\r\n    // }\r\n\r\n    const handleSnackClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return\r\n        }\r\n\r\n        setSnackOpen(false)\r\n        setErrorMsg(null)\r\n    }\r\n\r\n    const handleDialogClose = () => {\r\n        setSuccessDialog(false)\r\n    }\r\n\r\n    return (\r\n        <Box sx={{ p: 4, background: '#f0f2f5', minHeight: '100%' }}>\r\n            <Box>\r\n                <Button\r\n                    startIcon={<ArrowBackIosNewOutlinedIcon />}\r\n                    onClick={() => navigate('/app/pricing')}\r\n                >\r\n                    Go Back\r\n                </Button>\r\n            </Box>\r\n            <Box sx={{ mt: 2, mb: 5 }}>\r\n                <Typography variant='h2' sx={{ textAlign: 'center' }}>\r\n                    Make a payment\r\n                </Typography>\r\n                <Typography\r\n                    vanriant='h6'\r\n                    sx={{\r\n                        textAlign: 'center',\r\n                        mt: 2,\r\n                        letterSpacing: 0.6,\r\n                        color: 'gray',\r\n                    }}\r\n                >\r\n                    Fill the payment form with Billing Address, Card Holder Name\r\n                    and Card Details\r\n                </Typography>\r\n            </Box>\r\n\r\n            <Paper\r\n                sx={{\r\n                    borderRadius: 3,\r\n                    boxShadow: 10,\r\n                    margin: '40px auto',\r\n                    backgroundColor: 'background.paper',\r\n                    p: 5,\r\n                    maxWidth: '600px',\r\n                    mt: 8,\r\n                }}\r\n            >\r\n                {isPaying && (\r\n                    <CardSection\r\n                        handleBack={() => {\r\n                            setIsPaying(false)\r\n                        }}\r\n                        handleSubmit={handleSubmit}\r\n                        quantity={quantity}\r\n                    />\r\n                )}\r\n                {!isPaying && (\r\n                    <Details\r\n                        handleNext={(details) => {\r\n                            dispatch({\r\n                                type: 'PAYMENT_DETAILS',\r\n                                payload: {\r\n                                    details: details,\r\n                                },\r\n                            })\r\n                            setIsPaying(true)\r\n                        }}\r\n                        setErrorMsg={setErrorMsg}\r\n                        setSnackOpen={setSnackOpen}\r\n                    />\r\n                )}\r\n            </Paper>\r\n\r\n            <SuccessDialog\r\n                open={successDialog}\r\n                handleClose={handleDialogClose}\r\n            />\r\n\r\n            {/* {!isPaying ? (\r\n                <Details\r\n                    handleNext={(details) => {\r\n                        dispatch({\r\n                            type: 'PAYMENT_DETAILS',\r\n                            payload: {\r\n                                details: details,\r\n                            },\r\n                        })\r\n                        setIsPaying(true)\r\n                    }}\r\n                />\r\n            ) : (\r\n                <CardSection\r\n                    handleBack={() => {\r\n                        setIsPaying(false)\r\n                    }}\r\n                    handleSubmit={handleSubmit}\r\n                />\r\n            )}\r\n            <div>{messages}</div> */}\r\n\r\n            {errorMsg !== null && (\r\n                <Snackbar\r\n                    open={snackOpen}\r\n                    autoHideDuration={4000}\r\n                    onClose={handleSnackClose}\r\n                    anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n                >\r\n                    <Alert\r\n                        onClose={handleSnackClose}\r\n                        severity='error'\r\n                        sx={{ width: '100%' }}\r\n                        variant='filled'\r\n                    >\r\n                        {errorMsg}\r\n                    </Alert>\r\n                </Snackbar>\r\n            )}\r\n        </Box>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { loadStripe } from '@stripe/stripe-js'\r\nimport { Elements } from '@stripe/react-stripe-js'\r\nimport CheckoutForm from '../components/pricing/CheckOutForm'\r\n\r\nconst stripePromise = loadStripe(\r\n    'pk_test_51LERE7SHgzLT4nCoLBiNHxLi1VA6lbqcTOnrkwtNlduP9Ht93k7NbY5OF4GXR8vdid3eig3lV1DAxS2XSshACkUe00hDCZvx5x'\r\n)\r\n\r\nconst Subscribe = () => {\r\n    return (\r\n        <Elements stripe={stripePromise}>\r\n            <CheckoutForm />\r\n        </Elements>\r\n    )\r\n}\r\n\r\nexport default Subscribe\r\n","import { Navigate } from 'react-router-dom'\r\nimport DashboardLayout from './components/DashboardLayout'\r\nimport MainLayout from './components/MainLayout'\r\nimport Dashboard from './pages/Dashboard'\r\nimport Login from './pages/Login'\r\nimport NotFound from './pages/NotFound'\r\nimport Register from './pages/Register'\r\n\r\nimport Locationview from './pages/Locationview'\r\nimport Report from './pages/Report'\r\nimport Notification from './pages/Notification'\r\nimport ManageMobileDevices from './pages/ManageMobileDevices'\r\nimport ManageHotspots from './pages/ManageHotspots'\r\nimport Profile from './pages/Profile'\r\nimport ManageGroups from './pages/ManageGroups'\r\nimport ManageAdmins from './pages/ManageAdmins'\r\nimport AdminReport from './pages/admin/Report'\r\nimport ChangePassword from './pages/admin/ChangePassword'\r\nimport Pricing from './pages/Pricing'\r\nimport Subscribe from './pages/Subscribe'\r\n\r\nconst routes = [\r\n    {\r\n        path: 'app',\r\n        element: <DashboardLayout />,\r\n        children: [\r\n            { path: 'dashboard', element: <Dashboard /> },\r\n            { path: 'manage-devices', element: <ManageMobileDevices /> },\r\n            { path: 'manage-hotspots', element: <ManageHotspots /> },\r\n            { path: 'manage-groups', element: <ManageGroups /> },\r\n            { path: 'manage-admins', element: <ManageAdmins /> },\r\n            { path: 'pricing', element: <Pricing /> },\r\n            { path: 'notifications', element: <Notification /> },\r\n            { path: 'reports', element: <Report /> },\r\n            {\r\n                path: 'locationview/:phoneNumber/:requestId',\r\n                element: <Locationview />,\r\n            },\r\n            { path: 'profile', element: <Profile /> },\r\n\r\n            { path: '/admin/reports', element: <AdminReport /> },\r\n            { path: '*', element: <Navigate to='/404' /> },\r\n        ],\r\n    },\r\n    {\r\n        path: '/',\r\n        element: <MainLayout />,\r\n        children: [\r\n            { path: 'login', element: <Login /> },\r\n            { path: 'register', element: <Register /> },\r\n            { path: 'subscribe', element: <Subscribe /> },\r\n            { path: '/admin/change-password', element: <ChangePassword /> },\r\n            { path: '404', element: <NotFound /> },\r\n            { path: '/', element: <Navigate to='/app/dashboard' /> },\r\n            { path: '*', element: <Navigate to='/404' /> },\r\n        ],\r\n    },\r\n]\r\n\r\nexport default routes\r\n","import 'react-perfect-scrollbar/dist/css/styles.css'\r\nimport { useRoutes, useNavigate } from 'react-router-dom'\r\nimport { ThemeProvider, StyledEngineProvider } from '@mui/material'\r\nimport GlobalStyles from './components/GlobalStyles'\r\nimport theme from './theme'\r\nimport routes from './routes'\r\nimport './App.css'\r\nimport { useEffect } from 'react'\r\nimport { getDevices, getAdminDevices } from './store/actions/device'\r\n\r\nimport axios from 'axios'\r\nimport { API_SERVICE } from './URI'\r\nimport { getAdminHotspots, getHotspots } from './store/actions/hotspot'\r\nimport { getAdmins } from './store/actions/admin'\r\nimport { getGroups } from './store/actions/group'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nconst App = () => {\r\n    const content = useRoutes(routes)\r\n    const navigate = useNavigate()\r\n    const dispatch = useDispatch()\r\n\r\n    const authToken = sessionStorage.getItem('authToken')\r\n    const userData = sessionStorage.getItem('userData')\r\n        ? JSON.parse(sessionStorage.getItem('userData'))\r\n        : null\r\n\r\n    const adminData = sessionStorage.getItem('adminData')\r\n        ? JSON.parse(sessionStorage.getItem('adminData'))\r\n        : null\r\n\r\n    useEffect(async () => {\r\n        if (adminData === null && userData !== null) {\r\n            dispatch(getDevices(userData.uid))\r\n            dispatch(getHotspots(userData.uid))\r\n            dispatch(getGroups(userData.uid))\r\n            dispatch(getAdmins(userData.uid))\r\n        }\r\n\r\n        if (adminData !== null && userData !== null) {\r\n            const { data } = await axios.get(\r\n                `${API_SERVICE}/get/admin/${adminData.email}`\r\n            )\r\n            dispatch(\r\n                getAdminDevices({\r\n                    createdBy: userData.uid,\r\n                    adminGroups: data.groups,\r\n                })\r\n            )\r\n            dispatch(\r\n                getAdminHotspots({\r\n                    createdBy: userData.uid,\r\n                    adminGroups: data.groups,\r\n                })\r\n            )\r\n        }\r\n    }, [dispatch])\r\n\r\n    useEffect(() => {\r\n        if (!authToken) {\r\n            navigate('/login')\r\n        }\r\n    }, [authToken])\r\n\r\n    return (\r\n        <StyledEngineProvider injectFirst>\r\n            <ThemeProvider theme={theme}>\r\n                <GlobalStyles />\r\n                {content}\r\n            </ThemeProvider>\r\n        </StyledEngineProvider>\r\n    )\r\n}\r\n\r\nexport default App\r\n","import { createStore, applyMiddleware, combineReducers } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\n\r\nimport { hotspotReducer } from './reducers/hotspotReducer'\r\nimport { groupReducer } from './reducers/groupReducer'\r\nimport { adminReducer } from './reducers/adminReducer'\r\nimport { deviceReducer } from './reducers/deviceReducer'\r\n\r\nconst reducer = combineReducers({\r\n    hotspots: hotspotReducer,\r\n    groups: groupReducer,\r\n    admins: adminReducer,\r\n    devices: deviceReducer,\r\n})\r\n\r\nconst hotspotFromStorage = sessionStorage.getItem('hotspotList')\r\n    ? JSON.parse(sessionStorage.getItem('hotspotList'))\r\n    : []\r\n\r\nconst groupFromStorage = sessionStorage.getItem('groupList')\r\n    ? JSON.parse(sessionStorage.getItem('groupList'))\r\n    : []\r\n\r\nconst adminFromStorage = sessionStorage.getItem('adminList')\r\n    ? JSON.parse(sessionStorage.getItem('adminList'))\r\n    : []\r\n\r\nconst deviceFromStorage = sessionStorage.getItem('deviceList')\r\n    ? JSON.parse(sessionStorage.getItem('deviceList'))\r\n    : []\r\n\r\nconst initialState = {\r\n    hotspots: { hotspotList: hotspotFromStorage },\r\n    groups: { groupList: groupFromStorage },\r\n    admins: { adminList: adminFromStorage },\r\n    devices: { deviceList: deviceFromStorage },\r\n}\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(\r\n    reducer,\r\n    initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n)\r\n\r\nexport default store\r\n","import * as types from '../constants'\r\n\r\nexport const hotspotReducer = (state = { hotspotList: [] }, action) => {\r\n    switch (action.type) {\r\n        case types.GET_HOTSPOT_SUCCESS:\r\n            return {\r\n                hotspotList: action.payload,\r\n            }\r\n        case types.GET_HOTSPOT_FAIL:\r\n            return {\r\n                error: action.payload,\r\n                hotspotList: [],\r\n            }\r\n\r\n        case types.CREATE_HOTSPOT_SUCCESS: {\r\n            const item = action.payload\r\n            console.log(item)\r\n            const exitHotspot = state.hotspotList.find(\r\n                (x) => x._id === item._id\r\n            )\r\n\r\n            if (exitHotspot) {\r\n                return {\r\n                    ...state,\r\n                    hotspotList: state.hotspotList.map((x) =>\r\n                        x._id === exitHotspot._id ? item : x\r\n                    ),\r\n                    success: 'Hotspot created succssfully',\r\n                }\r\n            }\r\n            return {\r\n                ...state,\r\n                hotspotList: [...state.hotspotList, item],\r\n                success: 'Hotspot created succssfully',\r\n            }\r\n        }\r\n        case types.CREATE_HOTSPOT_FAIL:\r\n            return {\r\n                hotspotList: [...state.hotspotList],\r\n                error: action.payload,\r\n            }\r\n\r\n        case types.UPDATE_HOTSPOT_SUCCESS: {\r\n            const item = action.payload\r\n            console.log(item)\r\n            const exitHotspot = state.hotspotList.find(\r\n                (x) => x._id === item._id\r\n            )\r\n\r\n            if (exitHotspot) {\r\n                return {\r\n                    ...state,\r\n                    hotspotList: state.hotspotList.map((x) =>\r\n                        x._id === exitHotspot._id ? item : x\r\n                    ),\r\n                    success: 'Hotspot updated succssfully',\r\n                }\r\n            }\r\n            return {\r\n                ...state,\r\n                hotspotList: [...state.hotspotList, item],\r\n                success: 'Hotspot updated succssfully',\r\n            }\r\n        }\r\n\r\n        case types.UPDATE_HOTSPOT_FAIL:\r\n            return {\r\n                hotspotList: [...state.hotspotList],\r\n                error: action.payload,\r\n            }\r\n\r\n        case types.DELETE_HOTSPOT_SUCCESS:\r\n            return {\r\n                ...state,\r\n                hotspotList: state.hotspotList.filter(\r\n                    (x) => x._id !== action.payload\r\n                ),\r\n                success: 'Hotspot deleted succssfully',\r\n            }\r\n        case types.DELETE_HOTSPOT_FAIL:\r\n            return {\r\n                error: action.payload,\r\n                hotspotList: [...state.hotspotList],\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import * as types from '../constants'\r\n\r\nexport const groupReducer = (state = { groupList: [] }, action) => {\r\n    switch (action.type) {\r\n        case types.GET_GROUP_SUCCESS:\r\n            return {\r\n                groupList: action.payload,\r\n            }\r\n        case types.GET_GROUP_FAIL:\r\n            return {\r\n                error: action.payload,\r\n                groupList: [],\r\n            }\r\n\r\n        case types.CREATE_GROUP_SUCCESS: {\r\n            const item = action.payload\r\n            const existgroup = state.groupList.find((x) => x._id === item._id)\r\n\r\n            if (existgroup) {\r\n                return {\r\n                    ...state,\r\n                    groupList: state.groupList.map((x) =>\r\n                        x._id === existgroup._id ? item : x\r\n                    ),\r\n                    success: 'Group created succssfully',\r\n                }\r\n            }\r\n            return {\r\n                ...state,\r\n                groupList: [...state.groupList, item],\r\n                success: 'Group created succssfully',\r\n            }\r\n        }\r\n        case types.CREATE_GROUP_FAIL:\r\n            return {\r\n                groupList: [...state.groupList],\r\n                error: action.payload,\r\n            }\r\n\r\n        case types.UPDATE_GROUP_SUCCESS: {\r\n            const item = action.payload\r\n            const existgroup = state.groupList.find((x) => x._id === item._id)\r\n\r\n            if (existgroup) {\r\n                return {\r\n                    ...state,\r\n                    groupList: state.groupList.map((x) =>\r\n                        x._id === existgroup._id ? item : x\r\n                    ),\r\n                    success: 'Group created succssfully',\r\n                }\r\n            }\r\n            return {\r\n                ...state,\r\n                groupList: [...state.groupList, item],\r\n                success: 'Group created succssfully',\r\n            }\r\n        }\r\n        case types.UPDATE_GROUP_FAIL:\r\n            return {\r\n                groupList: [...state.groupList],\r\n                error: action.payload,\r\n            }\r\n\r\n        case types.DELETE_GROUP_SUCCESS:\r\n            return {\r\n                ...state,\r\n                groupList: state.groupList.filter(\r\n                    (x) => x._id !== action.payload\r\n                ),\r\n                success: 'Group deleted succssfully',\r\n            }\r\n        case types.DELETE_GROUP_FAIL:\r\n            return {\r\n                error: action.payload,\r\n                groupList: [...state.groupList],\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import * as types from '../constants'\r\n\r\nexport const adminReducer = (state = { adminList: [] }, action) => {\r\n    switch (action.type) {\r\n        case types.GET_ADMIN_SUCCESS:\r\n            return {\r\n                adminList: action.payload,\r\n            }\r\n        case types.GET_ADMIN_FAIL:\r\n            return {\r\n                error: action.payload,\r\n                adminList: [],\r\n            }\r\n\r\n        case types.CREATE_ADMIN_SUCCESS: {\r\n            const item = action.payload\r\n            const existadmin = state.adminList.find((x) => x._id === item._id)\r\n\r\n            if (existadmin) {\r\n                return {\r\n                    ...state,\r\n                    adminList: state.adminList.map((x) =>\r\n                        x._id === existadmin._id ? item : x\r\n                    ),\r\n                    success: 'Admin created succssfully',\r\n                }\r\n            }\r\n            return {\r\n                ...state,\r\n                adminList: [...state.adminList, item],\r\n                success: 'Admin created succssfully',\r\n            }\r\n        }\r\n        case types.CREATE_ADMIN_FAIL:\r\n            return {\r\n                adminList: [...state.adminList],\r\n                error: action.payload,\r\n            }\r\n\r\n        case types.UPDATE_ADMIN_SUCCESS: {\r\n            const item = action.payload\r\n            const existadmin = state.adminList.find((x) => x._id === item._id)\r\n\r\n            if (existadmin) {\r\n                return {\r\n                    ...state,\r\n                    adminList: state.adminList.map((x) =>\r\n                        x._id === existadmin._id ? item : x\r\n                    ),\r\n                    success: 'Admin updated succssfully',\r\n                }\r\n            }\r\n            return {\r\n                ...state,\r\n                adminList: [...state.adminList, item],\r\n                success: 'Admin updated succssfully',\r\n            }\r\n        }\r\n        case types.UPDATE_ADMIN_FAIL:\r\n            return {\r\n                adminList: [...state.adminList],\r\n                error: action.payload,\r\n            }\r\n\r\n        case types.DELETE_ADMIN_SUCCESS:\r\n            return {\r\n                ...state,\r\n                adminList: state.adminList.filter(\r\n                    (x) => x._id !== action.payload\r\n                ),\r\n                success: 'Admin deleted successfully',\r\n            }\r\n        case types.DELETE_ADMIN_FAIL:\r\n            return {\r\n                error: action.payload,\r\n                hotspotList: [...state.adminList],\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import * as types from '../constants'\r\n\r\nexport const deviceReducer = (state = { deviceList: [] }, action) => {\r\n    switch (action.type) {\r\n        case types.GET_DEVICE_SUCCESS:\r\n            return {\r\n                deviceList: action.payload,\r\n            }\r\n        case types.GET_DEVICE_FAIL:\r\n            return {\r\n                error: action.payload,\r\n                deviceList: [],\r\n            }\r\n\r\n        case types.CREATE_DEVICE_SUCCESS: {\r\n            const item = action.payload\r\n            const existdevice = state.deviceList.find((x) => x._id === item._id)\r\n\r\n            if (existdevice) {\r\n                return {\r\n                    ...state,\r\n                    deviceList: state.deviceList.map((x) =>\r\n                        x._id === existdevice._id ? item : x\r\n                    ),\r\n                    success: 'Device added succssfully',\r\n                }\r\n            }\r\n            return {\r\n                ...state,\r\n                deviceList: [...state.deviceList, item],\r\n                success: 'Device added succssfully',\r\n            }\r\n        }\r\n\r\n        case types.CREATE_DEVICE_FAIL:\r\n            return {\r\n                deviceList: [...state.deviceList],\r\n                error: action.payload,\r\n            }\r\n\r\n        case types.UPDATE_DEVICE_SUCCESS: {\r\n            const item = action.payload\r\n            console.log(item)\r\n            const existDevice = state.deviceList.find((x) => x._id === item._id)\r\n\r\n            if (existDevice) {\r\n                return {\r\n                    ...state,\r\n                    deviceList: state.deviceList.map((x) =>\r\n                        x._id === existDevice._id ? item : x\r\n                    ),\r\n                    success: 'Device updated succssfully',\r\n                }\r\n            }\r\n            return {\r\n                ...state,\r\n                deviceList: [...state.deviceList, item],\r\n                success: 'Device updated succssfully',\r\n            }\r\n        }\r\n\r\n        case types.UPDATE_DEVICE_FAIL:\r\n            return {\r\n                deviceList: [...state.deviceList],\r\n                error: action.payload,\r\n            }\r\n\r\n        case types.DELETE_DEVICE_SUCCESS:\r\n            return {\r\n                ...state,\r\n                deviceList: state.deviceList.filter(\r\n                    (x) => x._id !== action.payload\r\n                ),\r\n                success: 'Device deleted succssfully',\r\n            }\r\n        case types.DELETE_DEVICE_FAIL:\r\n            return {\r\n                error: action.payload,\r\n                deviceList: [...state.deviceList],\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import ReactDOM from 'react-dom'\r\nimport { BrowserRouter } from 'react-router-dom'\r\nimport { Provider } from 'react-redux'\r\nimport App from './App'\r\nimport store from './store/store'\r\nimport {\r\n    SubscriptionConsumer,\r\n    SubscriptionProvider,\r\n} from './contexts/subscriptionContext'\r\n\r\nReactDOM.render(\r\n    <SubscriptionProvider>\r\n        <SubscriptionConsumer>\r\n            {(sub) =>\r\n                sub.state.isInitialized && (\r\n                    <Provider store={store}>\r\n                        <BrowserRouter>\r\n                            <App />\r\n                        </BrowserRouter>\r\n                    </Provider>\r\n                )\r\n            }\r\n        </SubscriptionConsumer>\r\n    </SubscriptionProvider>,\r\n\r\n    document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}